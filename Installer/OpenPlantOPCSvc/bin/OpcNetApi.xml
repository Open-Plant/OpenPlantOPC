<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpcNetApi</name>
    </assembly>
    <members>
        <member name="T:Opc.Ae.Attribute">
            <summary>
            The description of an attribute supported by the server.
            </summary>
        </member>
        <member name="P:Opc.Ae.Attribute.ID">
            <summary>
            A unique identifier for the attribute.
            </summary>
        </member>
        <member name="P:Opc.Ae.Attribute.Name">
            <summary>
            The unique name for the attribute.
            </summary>
        </member>
        <member name="P:Opc.Ae.Attribute.DataType">
            <summary>
            The data type of the attribute.
            </summary>
        </member>
        <member name="M:Opc.Ae.Attribute.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Opc.Ae.Attribute.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.AttributeValue">
            <summary>
            The value of an attribute for an event source.
            </summary>
        </member>
        <member name="P:Opc.Ae.AttributeValue.ID">
            <summary>
            A unique identifier for the attribute.
            </summary>
        </member>
        <member name="P:Opc.Ae.AttributeValue.Value">
            <summary>
            The attribute value.
            </summary>
        </member>
        <member name="P:Opc.Ae.AttributeValue.ResultID">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Opc.Ae.AttributeValue.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Opc.Ae.AttributeValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.AttributeDictionary">
            <summary>
            Contains multiple lists of the attributes indexed by category.
            </summary>
        </member>
        <member name="P:Opc.Ae.AttributeDictionary.Item(System.Int32)">
            <summary>
            Gets or sets the atrtibute collection for the specified category. 
            </summary>
        </member>
        <member name="M:Opc.Ae.AttributeDictionary.Add(System.Int32,System.Int32[])">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
        </member>
        <member name="M:Opc.Ae.AttributeDictionary.#ctor">
            <summary>
            Constructs an empty dictionary.
            </summary>
        </member>
        <member name="M:Opc.Ae.AttributeDictionary.#ctor(System.Int32[])">
            <summary>
            Constructs an dictionary from a set of category ids.
            </summary>
        </member>
        <member name="T:Opc.Ae.AttributeCollection">
            <summary>
            Contains a writeable collection attribute ids.
            </summary>
        </member>
        <member name="P:Opc.Ae.AttributeCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.AttributeCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.AttributeCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.AttributeCollection.#ctor(System.Int32[])">
            <summary>
            Creates a collection from an array.
            </summary>
        </member>
        <member name="T:Opc.Ae.BrowseElement">
            <summary>
            Contains a description of an element in the server address space.
            </summary>
        </member>
        <member name="P:Opc.Ae.BrowseElement.Name">
            <summary>
            A descriptive name for element that is unique within a branch.
            </summary>
        </member>
        <member name="P:Opc.Ae.BrowseElement.QualifiedName">
            <summary>
            The fully qualified name for the element.
            </summary>
        </member>
        <member name="P:Opc.Ae.BrowseElement.NodeType">
            <summary>
            Whether the element is a source or an area.
            </summary>
        </member>
        <member name="M:Opc.Ae.BrowseElement.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.BrowsePosition">
            <summary>
            Stores the state of a browse operation.
            </summary>
        </member>
        <member name="M:Opc.Ae.BrowsePosition.#ctor(System.String,Opc.Ae.BrowseType,System.String)">
            <summary>
            Saves the parameters for an incomplete browse information.
            </summary>
        </member>
        <member name="P:Opc.Ae.BrowsePosition.AreaID">
            <summary>
            The fully qualified id for the area being browsed.
            </summary>
        </member>
        <member name="P:Opc.Ae.BrowsePosition.BrowseType">
            <summary>
            The type of child element being returned with the browse.
            </summary>
        </member>
        <member name="P:Opc.Ae.BrowsePosition.BrowseFilter">
            <summary>
            The filter applied to the name of the elements being returned.
            </summary>
        </member>
        <member name="M:Opc.Ae.BrowsePosition.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:Opc.Ae.BrowsePosition.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Ae.BrowsePosition.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Ae.BrowsePosition.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.BrowseType">
            <summary>
            The type of nodes to return during a browse.
            </summary>
        </member>
        <member name="F:Opc.Ae.BrowseType.Area">
            <summary>
            Return only nodes that are process areas.
            </summary>
        </member>
        <member name="F:Opc.Ae.BrowseType.Source">
            <summary>
            Return only nodes that are event soucres.
            </summary>
        </member>
        <member name="T:Opc.Ae.Category">
            <summary>
            The description of an event category supported by the server.
            </summary>
        </member>
        <member name="P:Opc.Ae.Category.ID">
            <summary>
            A unique identifier for the category.
            </summary>
        </member>
        <member name="P:Opc.Ae.Category.Name">
            <summary>
            The unique name for the category.
            </summary>
        </member>
        <member name="M:Opc.Ae.Category.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Opc.Ae.Category.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.Condition">
            <summary>
            The description of an item condition state supported by the server.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.State">
            <summary>
            A bit mask indicating the current state of the condition
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.ActiveSubCondition">
            <summary>
            The currently active sub-condition, for multi-state conditions which are active. 
            For a single-state condition, this contains the information about the condition itself.
            For inactive conditions, this value is null.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.Quality">
            <summary>
            The quality associated with the condition state.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.LastAckTime">
            <summary>
            The time of the most recent acknowledgment of this condition (of any sub-condition).
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.SubCondLastActive">
            <summary>
            Time of the most recent transition into active sub-condition. 
            This is the time value which must be specified when acknowledging the condition. 
            If the condition has never been active, this value is DateTime.MinValue.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.CondLastActive">
            <summary>
            Time of the most recent transition into the condition. 
            There may be transitions among the sub-conditions which are more recent. 
            If the condition has never been active, this value is DateTime.MinValue.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.CondLastInactive">
            <summary>
            Time of the most recent transition out of this condition. 
            This value is DateTime.MinValue if the condition has never been active, 
            or if it is currently active for the first time and has never been exited.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.AcknowledgerID">
            <summary>
            This is the ID of the client who last acknowledged this condition. 
            This value is null if the condition has never been acknowledged.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.Comment">
            <summary>
            The comment string passed in by the client who last acknowledged this condition.
            This value is null if the condition has never been acknowledged.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.SubConditions">
            <summary>
            The sub-conditions defined for this condition. 
            For single-state conditions, the collection will contain one element, the value of which describes the condition.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.Attributes">
            <summary>
            The values of the attributes requested for this condition. 
            </summary>
        </member>
        <member name="T:Opc.Ae.Condition.AttributeValueCollection">
            <summary>
            Contains a read-only collection of AttributeValues.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.AttributeValueCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Condition.AttributeValueCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.Condition.AttributeValueCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="T:Opc.Ae.Condition.SubConditionCollection">
            <summary>
            Contains a read-only collection of SubConditions.
            </summary>
        </member>
        <member name="P:Opc.Ae.Condition.SubConditionCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Condition.SubConditionCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.Condition.SubConditionCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Condition.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.ConditionState">
            <summary>
            The possible states for a condition.
            </summary>
        </member>
        <member name="F:Opc.Ae.ConditionState.Enabled">
            <summary>
            The server is currently checking the state of the condition.
            </summary>
        </member>
        <member name="F:Opc.Ae.ConditionState.Active">
            <summary>
            The associated object is in the state represented by the condition.
            </summary>
        </member>
        <member name="F:Opc.Ae.ConditionState.Acknowledged">
            <summary>
            The condition has been acknowledged.
            </summary>
        </member>
        <member name="T:Opc.Ae.SubCondition">
            <summary>
            The description of an item sub-condition supported by the server.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubCondition.Name">
            <summary>
            The name assigned to the sub-condition.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubCondition.Definition">
            <summary>
            A server-specific expression which defines the sub-state represented by the sub-condition.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubCondition.Severity">
            <summary>
            The severity of any event notifications generated on behalf of this sub-condition.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubCondition.Description">
            <summary>
            The text string to be included in any event notification generated on behalf of this sub-condition.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubCondition.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Opc.Ae.SubCondition.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.IServer">
            <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Ae.IServer.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.CreateSubscription(Opc.Ae.SubscriptionState)">
            <summary>
            Creates a new event subscription.
            </summary>
            <param name="state">The initial state for the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.QueryAvailableFilters">
            <summary>
            Returns the event filters supported by the server.
            </summary>
            <returns>A bit mask of all event filters supported by the server.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.QueryEventCategories(System.Int32)">
            <summary>		
            Returns the event categories supported by the server for the specified event types.
            </summary>
            <param name="eventType">A bit mask for the event types of interest.</param>
            <returns>A collection of event categories.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.QueryConditionNames(System.Int32)">
            <summary>
            Returns the condition names supported by the server for the specified event categories.
            </summary>
            <param name="eventCategory">A bit mask for the event categories of interest.</param>
            <returns>A list of condition names.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.QuerySubConditionNames(System.String)">
            <summary>
            Returns the sub-condition names supported by the server for the specified event condition.
            </summary>
            <param name="conditionName">The name of the condition.</param>
            <returns>A list of sub-condition names.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.QueryConditionNames(System.String)">
            <summary>
            Returns the condition names supported by the server for the specified event source.
            </summary>
            <param name="sourceName">The name of the event source.</param>
            <returns>A list of condition names.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.QueryEventAttributes(System.Int32)">
            <summary>		
            Returns the event attributes supported by the server for the specified event categories.
            </summary>
            <param name="eventCategory">The event category of interest.</param>
            <returns>A collection of event attributes.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.TranslateToItemIDs(System.String,System.Int32,System.String,System.String,System.Int32[])">
            <summary>
            Returns the DA item ids for a set of attribute ids belonging to events which meet the specified filter criteria.
            </summary>
            <param name="sourceName">The event source of interest.</param>
            <param name="eventCategory">The id of the event category for the events of interest.</param>
            <param name="conditionName">The name of a condition within the event category.</param>
            <param name="subConditionName">The name of a sub-condition within a multi-state condition.</param>
            <param name="attributeIDs">The ids of the attributes to return item ids for.</param>
            <returns>A list of item urls for each specified attribute.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.GetConditionState(System.String,System.String,System.Int32[])">
            <summary>
            Returns the current state information for the condition instance corresponding to the source and condition name.
            </summary>
            <param name="sourceName">The source name</param>
            <param name="conditionName">A condition name for the source.</param>
            <param name="attributeIDs">The list of attributes to return with the condition state.</param>
            <returns>The current state of the connection.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.EnableConditionByArea(System.String[])">
            <summary>
            Places the specified process areas into the enabled state.
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.DisableConditionByArea(System.String[])">
            <summary>
            Places the specified process areas into the disabled state.
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.EnableConditionBySource(System.String[])">
            <summary>
            Places the specified process areas into the enabled state.
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.DisableConditionBySource(System.String[])">
            <summary>
            Places the specified process areas into the disabled state.
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.GetEnableStateByArea(System.String[])">
            <summary>
            Returns the enabled state for the specified process areas. 
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
        </member>
        <member name="M:Opc.Ae.IServer.GetEnableStateBySource(System.String[])">
            <summary>
            Returns the enabled state for the specified event sources. 
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
        </member>
        <member name="M:Opc.Ae.IServer.AcknowledgeCondition(System.String,System.String,Opc.Ae.EventAcknowledgement[])">
            <summary>
            Used to acknowledge one or more conditions in the event server.
            </summary>
            <param name="acknowledgerID">The identifier for who is acknowledging the condition.</param>
            <param name="comment">A comment associated with the acknowledgment.</param>
            <param name="conditions">The conditions being acknowledged.</param>
            <returns>A list of result id indictaing whether each condition was successfully acknowledged.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.Browse(System.String,Opc.Ae.BrowseType,System.String)">
            <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
            <param name="areaID">The full-qualified id for the area.</param>
            <param name="browseType">The type of children to return.</param>
            <param name="browseFilter">The expression used to filter the names of children returned.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.Browse(System.String,Opc.Ae.BrowseType,System.String,System.Int32,Opc.IBrowsePosition@)">
            <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
            <param name="areaID">The full-qualified id for the area.</param>
            <param name="browseType">The type of children to return.</param>
            <param name="browseFilter">The expression used to filter the names of children returned.</param>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The object used to continue the browse if the number nodes exceeds the maximum specified.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Opc.Ae.IServer.BrowseNext(System.Int32,Opc.IBrowsePosition@)">
            <summary>
            Continues browsing the server's address space at the specified position.
            </summary>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The position object used to continue a browse operation.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="T:Opc.Ae.ServerState">
            <summary>
            The set of possible server states.
            </summary>
        </member>
        <member name="F:Opc.Ae.ServerState.Unknown">
            <summary>
            The server state is not known.
            </summary>
        </member>
        <member name="F:Opc.Ae.ServerState.Running">
            <summary>
            The server is running normally.
            </summary>
        </member>
        <member name="F:Opc.Ae.ServerState.Failed">
            <summary>
            The server is not functioning due to a fatal error.
            </summary>
        </member>
        <member name="F:Opc.Ae.ServerState.NoConfig">
            <summary>
            The server cannot load its configuration information.
            </summary>
        </member>
        <member name="F:Opc.Ae.ServerState.Suspended">
            <summary>
            The server has halted all communication with the underlying hardware.
            </summary>
        </member>
        <member name="F:Opc.Ae.ServerState.Test">
            <summary>
            The server is disconnected from the underlying hardware.
            </summary>
        </member>
        <member name="F:Opc.Ae.ServerState.CommFault">
            <summary>
            The server cannot communicate with the underlying hardware.
            </summary>
        </member>
        <member name="T:Opc.Ae.ServerStatus">
            <summary>
            Contains properties that describe the current status of an OPC server.
            </summary>
        </member>
        <member name="P:Opc.Ae.ServerStatus.VendorInfo">
            <summary>
            The vendor name and product name for the server.
            </summary>
        </member>
        <member name="P:Opc.Ae.ServerStatus.ProductVersion">
            <summary>
            A string that contains the server software version number.
            </summary>
        </member>
        <member name="P:Opc.Ae.ServerStatus.ServerState">
            <summary>
            The current state of the server.
            </summary>
        </member>
        <member name="P:Opc.Ae.ServerStatus.StatusInfo">
            <summary>
            A string that describes the current server state.
            </summary>
        </member>
        <member name="P:Opc.Ae.ServerStatus.StartTime">
            <summary>
            The UTC time when the server started.
            </summary>
        </member>
        <member name="P:Opc.Ae.ServerStatus.CurrentTime">
            <summary>
            Th current UTC time at the server.
            </summary>
        </member>
        <member name="P:Opc.Ae.ServerStatus.LastUpdateTime">
            <summary>
            The last time the server sent an data update to the client.
            </summary>
        </member>
        <member name="M:Opc.Ae.ServerStatus.Clone">
            <summary>
            Creates a deepcopy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.EventAcknowledgement">
            <summary>
            Specifies the information required to acknowledge an event.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventAcknowledgement.SourceName">
            <summary>
            The name of the source that generated the event.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventAcknowledgement.ConditionName">
            <summary>
            The name of the condition that is being acknowledged.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventAcknowledgement.ActiveTime">
            <summary>
            The time that the condition or sub-condition became active.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventAcknowledgement.Cookie">
            <summary>
            The cookie for the condition passed to client during the event notification.
            </summary>
        </member>
        <member name="M:Opc.Ae.EventAcknowledgement.#ctor">
            <summary>
            Constructs an acknowledgment with its default values.
            </summary>
        </member>
        <member name="M:Opc.Ae.EventAcknowledgement.#ctor(Opc.Ae.EventNotification)">
            <summary>
            Constructs an acknowledgment from an event notification.
            </summary>
        </member>
        <member name="M:Opc.Ae.EventAcknowledgement.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.EnabledStateResult">
            <summary>
            The current state of a process area or an event source.
            </summary>
        </member>
        <member name="P:Opc.Ae.EnabledStateResult.Enabled">
            <summary>
            Whether if the area or source is enabled.
            </summary>
        </member>
        <member name="P:Opc.Ae.EnabledStateResult.EffectivelyEnabled">
            <summary>
            Whether the area or source is enabled and all areas within the hierarchy of its containing areas are enabled. 
            </summary>
        </member>
        <member name="P:Opc.Ae.EnabledStateResult.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Ae.EnabledStateResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Opc.Ae.EnabledStateResult.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Ae.EnabledStateResult.#ctor(System.String)">
            <summary>
            Initializes the object with an qualified name.
            </summary>
        </member>
        <member name="M:Opc.Ae.EnabledStateResult.#ctor(System.String,Opc.ResultID)">
            <summary>
            Initializes the object with an qualified name and ResultID.
            </summary>
        </member>
        <member name="M:Opc.Ae.EnabledStateResult.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.ISubscription">
            <summary>
            An interface to an object which implements a AE event subscription.
            </summary>
        </member>
        <member name="E:Opc.Ae.ISubscription.EventChanged">
            <summary>
            An event to receive event change updates.
            </summary>
        </member>
        <member name="M:Opc.Ae.ISubscription.GetState">
            <summary>
            Returns the current state of the subscription.
            </summary>
            <returns>The current state of the subscription.</returns>
        </member>
        <member name="M:Opc.Ae.ISubscription.ModifyState(System.Int32,Opc.Ae.SubscriptionState)">
            <summary>
            Changes the state of a subscription.
            </summary>
            <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
            <param name="state">The new subscription state.</param>
            <returns>The actual subscption state after applying the changes.</returns>
        </member>
        <member name="M:Opc.Ae.ISubscription.GetFilters">
            <summary>
            Returns the current filters for the subscription.
            </summary>
            <returns>The current filters for the subscription.</returns>
        </member>
        <member name="M:Opc.Ae.ISubscription.SetFilters(Opc.Ae.SubscriptionFilters)">
            <summary>
            Sets the current filters for the subscription.
            </summary>
            <param name="filters">The new filters to use for the subscription.</param>
        </member>
        <member name="M:Opc.Ae.ISubscription.GetReturnedAttributes(System.Int32)">
            <summary>
            Returns the set of attributes to return with event notifications.
            </summary>		
            <param name="eventCategory">The specific event category for which the attributes apply.</param>
            <returns>The set of attribute ids which returned with event notifications.</returns>
        </member>
        <member name="M:Opc.Ae.ISubscription.SelectReturnedAttributes(System.Int32,System.Int32[])">
            <summary>
            Selects the set of attributes to return with event notifications.
            </summary>
            <param name="eventCategory">The specific event category for which the attributes apply.</param>
            <param name="attributeIDs">The list of attribute ids to return.</param>
        </member>
        <member name="M:Opc.Ae.ISubscription.Refresh">
            <summary>
            Force a refresh for all active conditions and inactive, unacknowledged conditions whose event notifications match the filter of the event subscription.
            </summary>
        </member>
        <member name="M:Opc.Ae.ISubscription.CancelRefresh">
            <summary>
            Cancels an outstanding refresh request.
            </summary>
        </member>
        <member name="T:Opc.Ae.EventChangedEventHandler">
            <summary>
            A delegate to receive data change updates from the server.
            </summary>
        </member>
        <member name="T:Opc.Ae.StateMask">
            <summary>
            Defines masks to be used when modifying the subscription or item state.
            </summary>
        </member>
        <member name="F:Opc.Ae.StateMask.Name">
            <summary>
            A name assigned to subscription.
            </summary>
        </member>
        <member name="F:Opc.Ae.StateMask.ClientHandle">
            <summary>
            The client assigned handle for the item or subscription.
            </summary>
        </member>
        <member name="F:Opc.Ae.StateMask.Active">
            <summary>
            Whether the subscription is active.
            </summary>
        </member>
        <member name="F:Opc.Ae.StateMask.BufferTime">
            <summary>
            The maximum rate at which the server send event notifications.
            </summary>
        </member>
        <member name="F:Opc.Ae.StateMask.MaxSize">
            <summary>
            The requested maximum number of events that will be sent in a single callback.
            </summary>
        </member>
        <member name="F:Opc.Ae.StateMask.KeepAlive">
            <summary>
            The maximum period between updates sent to the client.
            </summary>
        </member>
        <member name="F:Opc.Ae.StateMask.All">
            <summary>
            All fields are valid.
            </summary>
        </member>
        <member name="T:Opc.Ae.EventType">
            <summary>
            The types of events that could be generated by a server.
            </summary>
        </member>
        <member name="F:Opc.Ae.EventType.Simple">
            <summary>
            Events that are not tracking or condition events.
            </summary>
        </member>
        <member name="F:Opc.Ae.EventType.Tracking">
            <summary>
            Events that represent occurrences which involve the interaction of the client with a target within the server.
            </summary>
        </member>
        <member name="F:Opc.Ae.EventType.Condition">
            <summary>
            Events that are associated with transitions in and out states defined by the server.
            </summary>
        </member>
        <member name="F:Opc.Ae.EventType.All">
            <summary>
            All events generated by the server.
            </summary>
        </member>
        <member name="T:Opc.Ae.FilterType">
            <summary>
            The types of event filters that the server could support.
            </summary>
        </member>
        <member name="F:Opc.Ae.FilterType.Event">
            <summary>
            The server supports filtering by event type.
            </summary>
        </member>
        <member name="F:Opc.Ae.FilterType.Category">
            <summary>
            The server supports filtering by event categories.
            </summary>
        </member>
        <member name="F:Opc.Ae.FilterType.Severity">
            <summary>
            The server supports filtering by severity levels.
            </summary>
        </member>
        <member name="F:Opc.Ae.FilterType.Area">
            <summary>
            The server supports filtering by process area.
            </summary>
        </member>
        <member name="F:Opc.Ae.FilterType.Source">
            <summary>
            The server supports filtering by event sources.
            </summary>
        </member>
        <member name="F:Opc.Ae.FilterType.All">
            <summary>
            All filters supported by the server.
            </summary>
        </member>
        <member name="T:Opc.Ae.SubscriptionState">
            <summary>
            Describes the state of a subscription.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionState.Name">
            <summary>
            A descriptive name for the subscription.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionState.ClientHandle">
            <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionState.Active">
            <summary>
            Whether the subscription is monitoring for events to send to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionState.BufferTime">
            <summary>
            The maximum rate at which the server send event notifications.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionState.MaxSize">
            <summary>
            The requested maximum number of events that will be sent in a single callback.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionState.KeepAlive">
            <summary>
            The maximum period between updates sent to the client.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionState.#ctor">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionState.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.SubscriptionFilters">
            <summary>
            Describes the event filters for a subscription.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionFilters.EventTypes">
            <summary>
            A mask indicating which event types should be sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionFilters.HighSeverity">
            <summary>
            The highest severity for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionFilters.LowSeverity">
            <summary>
            The lowest severity for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionFilters.Categories">
            <summary>
            The category ids for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionFilters.Areas">
            <summary>
            A list of full-qualified ids for process areas of interest - only events or conditions in these areas will be reported.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionFilters.Sources">
            <summary>
            A list of full-qualified ids for sources of interest - only events or conditions from these soucres will be reported.
            </summary>
        </member>
        <member name="T:Opc.Ae.SubscriptionFilters.CategoryCollection">
            <summary>
            Contains a writeable collection category ids.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionFilters.CategoryCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.CategoryCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.CategoryCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.CategoryCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs an object by deserializing it from a stream.
            </summary>
        </member>
        <member name="T:Opc.Ae.SubscriptionFilters.StringCollection">
            <summary>
            Contains a writeable collection of strings.
            </summary>
        </member>
        <member name="P:Opc.Ae.SubscriptionFilters.StringCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.StringCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.StringCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.StringCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs an object by deserializing it from a stream.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.#ctor">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="T:Opc.Ae.SubscriptionFilters.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Ae.SubscriptionFilters.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.ChangeMask">
            <summary>
            The bits indicating what changes generated an event notification.
            </summary>
        </member>
        <member name="F:Opc.Ae.ChangeMask.ActiveState">
            <summary>
            The condition’s active state has changed.
            </summary>
        </member>
        <member name="F:Opc.Ae.ChangeMask.AcknowledgeState">
            <summary>
            The condition’s acknowledgment state has changed.
            </summary>
        </member>
        <member name="F:Opc.Ae.ChangeMask.EnableState">
            <summary>
            The condition’s enabled state has changed.
            </summary>
        </member>
        <member name="F:Opc.Ae.ChangeMask.Quality">
            <summary>
            The condition quality has changed.
            </summary>
        </member>
        <member name="F:Opc.Ae.ChangeMask.Severity">
            <summary>
            The severity level has changed.
            </summary>
        </member>
        <member name="F:Opc.Ae.ChangeMask.SubCondition">
            <summary>
            The condition has transitioned into a new sub-condition.
            </summary>
        </member>
        <member name="F:Opc.Ae.ChangeMask.Message">
            <summary>
            The event message has changed.
            </summary>
        </member>
        <member name="F:Opc.Ae.ChangeMask.Attribute">
            <summary>
            One or more event attributes have changed.
            </summary>
        </member>
        <member name="T:Opc.Ae.EventNotification">
            <summary>
            A notification sent by the server when a event change occurs.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.ClientHandle">
            <summary>
            The handle of the subscription that requested the notification
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.SourceID">
            <summary>
            The identifier for the source that generated the event.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.Time">
            <summary>
            The time of the event occurrence.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.Message">
            <summary>
            Event notification message describing the event.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.EventType">
            <summary>
            The type of event that generated the notification.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.EventCategory">
            <summary>
            The vendor defined category id for the event.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.Severity">
            <summary>
            The severity of the event (1..1000).
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.ConditionName">
            <summary>
            The name of the condition related to this event notification.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.SubConditionName">
            <summary>
            The name of the current sub-condition, for multi-state conditions.
            For a single-state condition, this contains the condition name.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.Attributes">
            <summary>
            The values of the attributes selected for the event subscription. 
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.ChangeMask">
            <summary>
            Indicates which properties of the condition have changed, to have caused the server to send the event notification.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.NewState">
            <summary>
            A bit mask specifying the new state of the condition.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.Quality">
            <summary>
            The quality associated with the condition state.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.AckRequired">
            <summary>
            Whether the related condition requires acknowledgment of this event.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.ActiveTime">
            <summary>
            The time that the condition became active (for single-state conditions), or 
            the time of the transition into the current sub-condition (for multi-state conditions).
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.Cookie">
            <summary>
            A server defined cookie associated with the event notification.
            </summary>
        </member>
        <member name="P:Opc.Ae.EventNotification.ActorID">
            <summary>
            For tracking events, this is the actor id for the event notification. 
            For condition-related events, this is the acknowledger id passed by the client.
            </summary>
        </member>
        <member name="T:Opc.Ae.EventNotification.AttributeCollection">
            <summary>
            Contains a read-only collection of AttributeValues.
            </summary>
        </member>
        <member name="M:Opc.Ae.EventNotification.AttributeCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.EventNotification.AttributeCollection.#ctor(System.Object[])">
            <summary>
            Creates a collection from an array of objects.
            </summary>
        </member>
        <member name="M:Opc.Ae.EventNotification.SetAttributes(System.Object[])">
            <summary>
            Sets the list of attribute values.
            </summary>
        </member>
        <member name="M:Opc.Ae.EventNotification.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.ItemUrl">
            <summary>
            The item id and network location of a DA item associated with an event source.
            </summary>
        </member>
        <member name="P:Opc.Ae.ItemUrl.Url">
            <summary>
            The url of the server that contains the item.
            </summary>
        </member>
        <member name="M:Opc.Ae.ItemUrl.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Ae.ItemUrl.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Ae.ItemUrl.#ctor(Opc.ItemIdentifier,Opc.URL)">
            <summary>
            Initializes the object with an ItemIdentifier object and url.
            </summary>
        </member>
        <member name="M:Opc.Ae.ItemUrl.#ctor(Opc.Ae.ItemUrl)">
            <summary>
            Initializes object with the specified ItemResult object.
            </summary>
        </member>
        <member name="M:Opc.Ae.ItemUrl.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.ItemUrlCollection">
            <summary>
            Contains a collection of item urls.
            </summary>
        </member>
        <member name="P:Opc.Ae.ItemUrlCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.ItemUrlCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.ItemUrlCollection.#ctor">
            <summary>
            Constructs an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.ItemUrlCollection.#ctor(Opc.Ae.ItemUrl[])">
            <summary>
            Constructs a collection from an array of item urls.
            </summary>
        </member>
        <member name="T:Opc.Ae.Server">
            <summary>
            An in-process object which provides access to AE server objects.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.#ctor(Opc.Factory,Opc.URL)">
            <summary>
            Initializes the object with a factory and a default URL.
            </summary>
            <param name="factory">The Opc.Factory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="T:Opc.Ae.Server.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.Ae.Server.AvailableFilters">
            <summary>
            The filters supported by the server.
            </summary>
        </member>
        <member name="P:Opc.Ae.Server.Subscriptions">
            <summary>
            The outstanding subscriptions for the server.
            </summary>
        </member>
        <member name="T:Opc.Ae.Server.SubscriptionCollection">
            <summary>
            A read-only collection of subscriptions.
            </summary>
        </member>
        <member name="P:Opc.Ae.Server.SubscriptionCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.SubscriptionCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.SubscriptionCollection.Add(Opc.Ae.Subscription)">
            <summary>
            Adds a subscription to the end of the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.SubscriptionCollection.Remove(Opc.Ae.Subscription)">
            <summary>
            Removes a subscription to the from the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.SubscriptionCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.Connect(Opc.URL,Opc.ConnectData)">
            <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.Disconnect">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="M:Opc.Ae.Server.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Opc.Ae.Server.CreateSubscription(Opc.Ae.SubscriptionState)">
            <summary>
            Creates a new event subscription.
            </summary>
            <param name="state">The initial state for the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:Opc.Ae.Server.QueryAvailableFilters">
            <summary>
            Returns the event filters supported by the server.
            </summary>
            <returns>A bit mask of all event filters supported by the server.</returns>
        </member>
        <member name="M:Opc.Ae.Server.QueryEventCategories(System.Int32)">
            <summary>		
            Returns the event categories supported by the server for the specified event types.
            </summary>
            <param name="eventType">A bit mask for the event types of interest.</param>
            <returns>A collection of event categories.</returns>
        </member>
        <member name="M:Opc.Ae.Server.QueryConditionNames(System.Int32)">
            <summary>
            Returns the condition names supported by the server for the specified event categories.
            </summary>
            <param name="eventCategory">A bit mask for the event categories of interest.</param>
            <returns>A list of condition names.</returns>
        </member>
        <member name="M:Opc.Ae.Server.QuerySubConditionNames(System.String)">
            <summary>
            Returns the sub-condition names supported by the server for the specified event condition.
            </summary>
            <param name="conditionName">The name of the condition.</param>
            <returns>A list of sub-condition names.</returns>
        </member>
        <member name="M:Opc.Ae.Server.QueryConditionNames(System.String)">
            <summary>
            Returns the condition names supported by the server for the specified event source.
            </summary>
            <param name="sourceName">The name of the event source.</param>
            <returns>A list of condition names.</returns>
        </member>
        <member name="M:Opc.Ae.Server.QueryEventAttributes(System.Int32)">
            <summary>		
            Returns the event attributes supported by the server for the specified event categories.
            </summary>
            <param name="eventCategory">A bit mask for the event categories of interest.</param>
            <returns>A collection of event attributes.</returns>
        </member>
        <member name="M:Opc.Ae.Server.TranslateToItemIDs(System.String,System.Int32,System.String,System.String,System.Int32[])">
            <summary>
            Returns the DA item ids for a set of attribute ids belonging to events which meet the specified filter criteria.
            </summary>
            <param name="sourceName">The event source of interest.</param>
            <param name="eventCategory">The id of the event category for the events of interest.</param>
            <param name="conditionName">The name of a condition within the event category.</param>
            <param name="subConditionName">The name of a sub-condition within a multi-state condition.</param>
            <param name="attributeIDs">The ids of the attributes to return item ids for.</param>
            <returns>A list of item urls for each specified attribute.</returns>
        </member>
        <member name="M:Opc.Ae.Server.GetConditionState(System.String,System.String,System.Int32[])">
            <summary>
            Returns the current state information for the condition instance corresponding to the source and condition name.
            </summary>
            <param name="sourceName">The source name</param>
            <param name="conditionName">A condition name for the source.</param>
            <param name="attributeIDs">The list of attributes to return with the condition state.</param>
            <returns>The current state of the connection.</returns>
        </member>
        <member name="M:Opc.Ae.Server.EnableConditionByArea(System.String[])">
            <summary>
            Places the specified process areas into the enabled state.
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Opc.Ae.Server.DisableConditionByArea(System.String[])">
            <summary>
            Places the specified process areas into the disabled state.
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Opc.Ae.Server.EnableConditionBySource(System.String[])">
            <summary>
            Places the specified process areas into the enabled state.
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Opc.Ae.Server.DisableConditionBySource(System.String[])">
            <summary>
            Places the specified process areas into the disabled state.
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
            <returns>The results of the operation for each area.</returns>
        </member>
        <member name="M:Opc.Ae.Server.GetEnableStateByArea(System.String[])">
            <summary>
            Returns the enabled state for the specified process areas. 
            </summary>
            <param name="areas">A list of fully qualified area names.</param>
        </member>
        <member name="M:Opc.Ae.Server.GetEnableStateBySource(System.String[])">
            <summary>
            Returns the enabled state for the specified event sources. 
            </summary>
            <param name="sources">A list of fully qualified source names.</param>
        </member>
        <member name="M:Opc.Ae.Server.AcknowledgeCondition(System.String,System.String,Opc.Ae.EventAcknowledgement[])">
            <summary>
            Used to acknowledge one or more conditions in the event server.
            </summary>
            <param name="acknowledgerID">The identifier for who is acknowledging the condition.</param>
            <param name="comment">A comment associated with the acknowledgment.</param>
            <param name="conditions">The conditions being acknowledged.</param>
            <returns>A list of result id indictaing whether each condition was successfully acknowledged.</returns>
        </member>
        <member name="M:Opc.Ae.Server.Browse(System.String,Opc.Ae.BrowseType,System.String)">
            <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
            <param name="areaID">The full-qualified id for the area.</param>
            <param name="browseType">The type of children to return.</param>
            <param name="browseFilter">The expression used to filter the names of children returned.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Opc.Ae.Server.Browse(System.String,Opc.Ae.BrowseType,System.String,System.Int32,Opc.IBrowsePosition@)">
            <summary>
            Browses for all children of the specified area that meet the filter criteria.
            </summary>
            <param name="areaID">The full-qualified id for the area.</param>
            <param name="browseType">The type of children to return.</param>
            <param name="browseFilter">The expression used to filter the names of children returned.</param>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The object used to continue the browse if the number nodes exceeds the maximum specified.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Opc.Ae.Server.BrowseNext(System.Int32,Opc.IBrowsePosition@)">
            <summary>
            Continues browsing the server's address space at the specified position.
            </summary>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The position object used to continue a browse operation.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Opc.Ae.Server.SubscriptionDisposed(Opc.Ae.Subscription)">
            <summary>
            Called when a subscription object is disposed.
            </summary>
            <param name="subscription"></param>
        </member>
        <member name="M:Opc.Ae.Server.EstablishSubscription(Opc.Ae.Subscription)">
            <summary>
            Establishes a subscription based on the template provided.
            </summary>
        </member>
        <member name="T:Opc.Ae.GetStatusAsyncDelegate">
            <summary>
            The asynchronous delegate for GetStatus.
            </summary>
        </member>
        <member name="T:Opc.Ae.Subscription">
            <summary>
            An in-process object which provides access to AE subscription objects.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.#ctor(Opc.Ae.Server,Opc.Ae.ISubscription,Opc.Ae.SubscriptionState)">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="T:Opc.Ae.Subscription.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.Clone">
            <summary>
            Returns an unconnected copy of the subscription with the same items.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.Server">
            <summary>
            The server that the subscription object belongs to.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.Name">
            <summary>
            A descriptive name for the subscription.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.ClientHandle">
            <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.Active">
            <summary>
            Whether the subscription is monitoring for events to send to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.BufferTime">
            <summary>
            The maximum rate at which the server send event notifications.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.MaxSize">
            <summary>
            The requested maximum number of events that will be sent in a single callback.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.KeepAlive">
            <summary>
            The maximum period between updates sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.EventTypes">
            <summary>
            A mask indicating which event types should be sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.HighSeverity">
            <summary>
            The highest severity for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.LowSeverity">
            <summary>
            The lowest severity for the events that should be sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.Categories">
            <summary>
            The event category ids monitored by this subscription.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.Areas">
            <summary>
            A list of full-qualified ids for process areas of interest - only events or conditions in these areas will be reported.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.Sources">
            <summary>
            A list of full-qualified ids for sources of interest - only events or conditions from these soucres will be reported.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.Attributes">
            <summary>
            The list of attributes returned for each event category.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.GetAttributes">
            <summary>
            Returns a writeable copy of the current attributes.
            </summary>
        </member>
        <member name="T:Opc.Ae.Subscription.CategoryCollection">
            <summary>
            Contains a read-only collection category ids.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.CategoryCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.CategoryCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.CategoryCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.CategoryCollection.#ctor(System.Int32[])">
            <summary>
            Creates a collection containing the list of category ids.
            </summary>
        </member>
        <member name="T:Opc.Ae.Subscription.StringCollection">
            <summary>
            Contains a read-only collection of strings.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.StringCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.StringCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.StringCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.StringCollection.#ctor(System.String[])">
            <summary>
            Creates a collection containing the specified strings.
            </summary>
        </member>
        <member name="T:Opc.Ae.Subscription.AttributeDictionary">
            <summary>
            Contains a read-only dictionary of attribute lists indexed by category id..
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.AttributeDictionary.Item(System.Int32)">
            <summary>
            Gets or sets the atrtibute collection for the specified category. 
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.AttributeDictionary.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.AttributeDictionary.#ctor(System.Collections.Hashtable)">
            <summary>
            Constructs an dictionary from a set of category ids.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.AttributeDictionary.Update(System.Int32,System.Int32[])">
            <summary>
            Adds or replaces the set of attributes associated with the category.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.AttributeDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs an object by deserializing it from a stream.
            </summary>
        </member>
        <member name="T:Opc.Ae.Subscription.AttributeCollection">
            <summary>
            Contains a read-only collection attribute ids.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.AttributeCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.AttributeCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.AttributeCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.AttributeCollection.#ctor(System.Int32[])">
            <summary>
            Creates a collection containing the specified attribute ids.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.AttributeCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs an object by deserializing it from a stream.
            </summary>
        </member>
        <member name="E:Opc.Ae.Subscription.EventChanged">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.GetState">
            <summary>
            Returns the current state of the subscription.
            </summary>
            <returns>The current state of the subscription.</returns>
        </member>
        <member name="M:Opc.Ae.Subscription.ModifyState(System.Int32,Opc.Ae.SubscriptionState)">
            <summary>
            Changes the state of a subscription.
            </summary>
            <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
            <param name="state">The new subscription state.</param>
            <returns>The actual subscription state after applying the changes.</returns>
        </member>
        <member name="M:Opc.Ae.Subscription.GetFilters">
            <summary>
            Returns the current filters for the subscription.
            </summary>
            <returns>The current filters for the subscription.</returns>
        </member>
        <member name="M:Opc.Ae.Subscription.SetFilters(Opc.Ae.SubscriptionFilters)">
            <summary>
            Sets the current filters for the subscription.
            </summary>
            <param name="filters">The new filters to use for the subscription.</param>
        </member>
        <member name="M:Opc.Ae.Subscription.GetReturnedAttributes(System.Int32)">
            <summary>
            Returns the set of attributes to return with event notifications.
            </summary>
            <returns>The set of attributes to returned with event notifications.</returns>
        </member>
        <member name="M:Opc.Ae.Subscription.SelectReturnedAttributes(System.Int32,System.Int32[])">
            <summary>
            Selects the set of attributes to return with event notifications.
            </summary>
            <param name="eventCategory">The specific event category for which the attributes apply.</param>
            <param name="attributeIDs">The list of attribute ids to return.</param>
        </member>
        <member name="M:Opc.Ae.Subscription.Refresh">
            <summary>
            Force a refresh for all active conditions and inactive, unacknowledged conditions whose event notifications match the filter of the event subscription.
            </summary>
        </member>
        <member name="M:Opc.Ae.Subscription.CancelRefresh">
            <summary>
            Cancels an outstanding refresh request.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.State">
            <summary>
            The current state.
            </summary>
        </member>
        <member name="P:Opc.Ae.Subscription.Filters">
            <summary>
            The current filters.
            </summary>
        </member>
        <member name="T:Opc.Cpx.BinaryReader">
            <summary>
            A class that reads a complex data item from a binary buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.#ctor">
            <summary>
            Initializes the reader with defaults.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.Read(System.Byte[],Opc.Cpx.TypeDictionary,System.String)">
            <summary>
            Reads a value of the specified type from the buffer.
            </summary>
            <param name="buffer">The buffer containing binary data to read.</param>
            <param name="dictionary">The type dictionary that contains a complex type identified with the type name.</param>
            <param name="typeName">The name of the type that describes the data.</param>
            <returns>A structured represenation of the data in the buffer.</returns>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.ReadType(Opc.Cpx.Context,Opc.Cpx.ComplexValue@)">
            <summary>
            Reads an instance of a type from the buffer,
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.ReadField(Opc.Cpx.Context,Opc.Cpx.FieldType,System.Int32,System.Collections.ArrayList,System.Object@,System.Byte@)">
            <summary>
            Reads the value contained in a field from the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.ReadField(Opc.Cpx.Context,Opc.Cpx.TypeReference,System.Object@)">
            <summary>
            Reads a complex type from the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.ReadField(Opc.Cpx.Context,Opc.Cpx.Integer,System.Object@)">
            <summary>
            Reads a integer value from the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.ReadField(Opc.Cpx.Context,Opc.Cpx.FloatingPoint,System.Object@)">
            <summary>
            Reads a floating point value from the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.ReadField(Opc.Cpx.Context,Opc.Cpx.CharString,System.Int32,System.Collections.ArrayList,System.Object@)">
            <summary>
            Reads a char string value from the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.ReadField(Opc.Cpx.Context,Opc.Cpx.BitString,System.Object@,System.Byte@)">
            <summary>
            Reads a bit string value from the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.ReadArrayField(Opc.Cpx.Context,Opc.Cpx.FieldType,System.Int32,System.Collections.ArrayList,System.Object@)">
            <summary>
            Reads a field containing an array of values.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryReader.ReadReference(Opc.Cpx.Context,Opc.Cpx.FieldType,System.Int32,System.Collections.ArrayList,System.String)">
            <summary>
            Finds the integer value referenced by the field name.
            </summary>
        </member>
        <member name="T:Opc.Cpx.ComplexValue">
            <summary>
            Stores a value with an associated name and/or type.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexValue.Name">
            <summary>
            The name of the value.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexValue.Type">
            <summary>
            The complex or simple data type of the value.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexValue.Value">
            <summary>
            The actual value.
            </summary>
        </member>
        <member name="T:Opc.Cpx.Context">
            <summary>
            Stores the current serialization context.
            </summary>
        </member>
        <member name="T:Opc.Cpx.BinaryStream">
            <summary>
            A class that reads a complex data item from a binary buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryStream.#ctor">
            <summary>
            Initializes the binary stream with defaults.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryStream.IsArrayField(Opc.Cpx.FieldType)">
            <summary>
            Determines if a field contains an array of values.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryStream.GetTerminator(Opc.Cpx.Context,Opc.Cpx.FieldType)">
            <summary>
            Returns the termininator for the field.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryStream.InitializeContext(System.Byte[],Opc.Cpx.TypeDictionary,System.String)">
            <summary>
            Looks up the type name in the dictionary and initializes the context.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryStream.SwapBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Swaps the order of bytes in the buffer.
            </summary>
        </member>
        <member name="T:Opc.Cpx.InvalidDataInBufferException">
            <summary>
            Raised if the data in buffer is not consistent with the schema.
            </summary>
        </member>
        <member name="M:Opc.Cpx.InvalidDataInBufferException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidDataInBufferException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidDataInBufferException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidDataInBufferException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidDataInBufferException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.InvalidSchemaException">
            <summary>
            Raised if the schema contains errors or inconsistencies.
            </summary>
        </member>
        <member name="M:Opc.Cpx.InvalidSchemaException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidSchemaException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidSchemaException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidSchemaException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.InvalidDataToWriteException">
            <summary>
            Raised if the data in buffer is not consistent with the schema.
            </summary>
        </member>
        <member name="M:Opc.Cpx.InvalidDataToWriteException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidDataToWriteException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidDataToWriteException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidDataToWriteException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.Cpx.InvalidDataToWriteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.BinaryWriter">
            <summary>
            A class that writes a complex data item to a binary buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.#ctor">
            <summary>
            Initializes the binary writer with defaults.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.Write(Opc.Cpx.ComplexValue,Opc.Cpx.TypeDictionary,System.String)">
            <summary>
            Writes a complex value to a buffer.
            </summary>
            <param name="namedValue">The structured value to write to the buffer.</param>
            <param name="dictionary">The type dictionary that contains a complex type identified with the type name.</param>
            <param name="typeName">The name of the type that describes the data.</param>
            <returns>A buffer containing the binary form of the complex type.</returns>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.WriteType(Opc.Cpx.Context,Opc.Cpx.ComplexValue)">
            <summary>
            Writes an instance of a type to the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.WriteField(Opc.Cpx.Context,Opc.Cpx.FieldType,System.Int32,Opc.Cpx.ComplexValue[],System.Object,System.Byte@)">
            <summary>
            Writes the value contained in a field to the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.WriteField(Opc.Cpx.Context,Opc.Cpx.TypeReference,System.Object)">
            <summary>
            Writes a complex type from to the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.WriteField(Opc.Cpx.Context,Opc.Cpx.Integer,System.Object)">
            <summary>
            Writes a integer value from to the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.WriteField(Opc.Cpx.Context,Opc.Cpx.FloatingPoint,System.Object)">
            <summary>
            Writes a integer value from to the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.WriteField(Opc.Cpx.Context,Opc.Cpx.CharString,System.Int32,Opc.Cpx.ComplexValue[],System.Object)">
            <summary>
            Writes a char string value to the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.WriteField(Opc.Cpx.Context,Opc.Cpx.BitString,System.Object,System.Byte@)">
            <summary>
            Writes a bit string value to the buffer.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.WriteArrayField(Opc.Cpx.Context,Opc.Cpx.FieldType,System.Int32,Opc.Cpx.ComplexValue[],System.Object)">
            <summary>
            Reads a field containing an array of values.
            </summary>
        </member>
        <member name="M:Opc.Cpx.BinaryWriter.WriteReference(Opc.Cpx.Context,Opc.Cpx.FieldType,System.Int32,Opc.Cpx.ComplexValue[],System.String,System.Int32)">
            <summary>
            Finds the integer value referenced by the field name.
            </summary>
        </member>
        <member name="T:Opc.Cpx.ComplexItem">
            <summary>
            A class that contains complex data related properties for an item.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexItem.CPX_BRANCH">
            <summary>
            The reserved name for complex data branch in the server namespace.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexItem.CPX_DATA_FILTERS">
            <summary>
            The reserved name for the data filters branch in the CPX namespace.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexItem.CPX_PROPERTIES">
            <summary>
            The set of all complex data item properties.
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.Name">
            <summary>
            The name of the item in the server address space.
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.TypeSystemID">
            <summary>
            The type system id for the complex item.
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.DictionaryID">
            <summary>
            The dictionary id for the complex item.
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.TypeID">
            <summary>
            The type id for the complex item.
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.DictionaryItemID">
            <summary>
            The id of the item containing the dictionary for the item.
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.TypeItemID">
            <summary>
            The id of the item containing the type description for the item.
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.UnconvertedItemID">
            <summary>
            The id of the unconverted version of the item. Only valid for items which apply type conversions to the item. 
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.UnfilteredItemID">
            <summary>
            The id of the unfiltered version of the item. Only valid for items apply data filters to the item. 
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.DataFilterItem">
            <summary>
            The item used to create new data filters for the complex data item (null is item does not support it). 
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexItem.DataFilterValue">
            <summary>
            The current data filter value. Only valid for items apply data filters to the item.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.#ctor">
            <summary>
            Initializes the object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object from an item identifier.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.ToString">
            <summary>
            Returns an appropriate string representation of the object.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.GetRootItem">
            <summary>
            Returns the root complex data item for the object.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.Update(Opc.Da.Server)">
            <summary>
            Reads the current complex data item properties from the server.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.GetTypeConversions(Opc.Da.Server)">
            <summary>
            Fetches the set of type conversions from the server.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.GetDataFilters(Opc.Da.Server)">
            <summary>
            Fetches the set of data filters from the server.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.CreateDataFilter(Opc.Da.Server,System.String,System.String)">
            <summary>
            Creates a new data filter.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.UpdateDataFilter(Opc.Da.Server,System.String)">
            <summary>
            Updates a data filter.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.GetTypeDictionary(Opc.Da.Server)">
            <summary>
            Fetches the type dictionary for the item.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.GetTypeDescription(Opc.Da.Server)">
            <summary>
            Fetches the type description for the item.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.GetDataFilterItem(Opc.Da.Server)">
            <summary>
            Fetches the item id for the data filters items.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.Clear">
            <summary>
            Sets all object properties to their default values.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.Init(Opc.Da.BrowseElement)">
            <summary>
            Initializes the object from a browse element.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexItem.Init(Opc.Da.ItemProperty[])">
            <summary>
            Initializes the object from a list of properties.
            </summary>
        </member>
        <member name="T:Opc.Cpx.ComplexTypeCache">
            <summary>
            A class that caches properties of complex data items.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexTypeCache.#ctor">
            <summary>
            Initializes the complex type cache with defaults.
            </summary>
        </member>
        <member name="P:Opc.Cpx.ComplexTypeCache.Server">
            <summary>
            Get or sets the server to use for the cache.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexTypeCache.GetComplexItem(Opc.ItemIdentifier)">
            <summary>
            Returns the complex item for the specified item id.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexTypeCache.GetComplexItem(Opc.Da.BrowseElement)">
            <summary>
            Returns the complex item for the specified item browse element.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexTypeCache.GetTypeDictionary(Opc.ItemIdentifier)">
            <summary>
            Fetches the type description for the item.
            </summary>
        </member>
        <member name="M:Opc.Cpx.ComplexTypeCache.GetTypeDescription(Opc.ItemIdentifier)">
            <summary>
            Fetches the type description for the item.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexTypeCache.m_server">
            <summary>
            The active server for the application.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexTypeCache.m_items">
            <summary>
            A cache of item properties fetched from the active server.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexTypeCache.m_dictionaries">
            <summary>
            A cache of type dictionaries fetched from the active server.
            </summary>
        </member>
        <member name="F:Opc.Cpx.ComplexTypeCache.m_descriptions">
            <summary>
            A cache of type descriptions fetched from the active server.
            </summary>
        </member>
        <member name="T:Opc.Cpx.TypeDictionary">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDictionary.TypeDescription">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDictionary.DictionaryName">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDictionary.DefaultBigEndian">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDictionary.DefaultStringEncoding">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDictionary.DefaultCharWidth">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDictionary.DefaultFloatFormat">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.TypeDescription">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDescription.Field">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDescription.TypeID">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDescription.DefaultBigEndian">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDescription.DefaultBigEndianSpecified">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDescription.DefaultStringEncoding">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDescription.DefaultCharWidth">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDescription.DefaultCharWidthSpecified">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeDescription.DefaultFloatFormat">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.FieldType">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.FieldType.Name">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.FieldType.Format">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.FieldType.Length">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.FieldType.LengthSpecified">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.FieldType.ElementCount">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.FieldType.ElementCountSpecified">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.FieldType.ElementCountRef">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.FieldType.FieldTerminator">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.TypeReference">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.TypeReference.TypeID">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.CharString">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.CharString.CharWidth">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.CharString.CharWidthSpecified">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.CharString.StringEncoding">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.CharString.CharCountRef">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.Unicode">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.Ascii">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.FloatingPoint">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.FloatingPoint.FloatFormat">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.Double">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.Single">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.Integer">
            <remarks/>
        </member>
        <member name="F:Opc.Cpx.Integer.Signed">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.UInt64">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.UInt32">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.UInt16">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.UInt8">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.Int64">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.Int32">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.Int16">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.Int8">
            <remarks/>
        </member>
        <member name="T:Opc.Cpx.BitString">
            <remarks/>
        </member>
        <member name="T:Opc.Da.BrowsePosition">
            <summary>
            Stores the state of a browse operation.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowsePosition.ItemID">
            <summary>
            The item identifier of the branch being browsed.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowsePosition.Filters">
            <summary>
            The filters applied during the browse operation.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowsePosition.MaxElementsReturned">
            <summary>
            The maximum number of elements that may be returned in a single browse.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.#ctor(Opc.ItemIdentifier,Opc.Da.BrowseFilters)">
            <summary>
            Saves the parameters for an incomplete browse information.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowsePosition.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.ItemProperty">
            <summary>
            Contains a description of a single item property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.ID">
            <summary>
            The property identifier.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.Description">
            <summary>
            A short description of the property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.DataType">
            <summary>
            The data type of the property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.Value">
            <summary>
            The value of the property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.ItemName">
            <summary>
            The primary identifier for the property if it is directly accessible as an item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.ItemPath">
            <summary>
            The secondary identifier for the property if it is directly accessible as an item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.ResultID">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemProperty.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Opc.Da.ItemProperty.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.BrowseElement">
            <summary>
            Contains a description of an element in the server address space.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.Name">
            <summary>
            A descriptive name for element that is unique within a branch.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.ItemName">
            <summary>
            The primary identifier for the element within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.ItemPath">
            <summary>
            An secondary identifier for the element within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.IsItem">
            <summary>
            Whether the element refers to an item with data that can be accessed.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.HasChildren">
            <summary>
            Whether the element has children.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseElement.Properties">
            <summary>
            The set of properties for the element.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowseElement.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.browseFilter">
            <summary>
            The type of browse elements to return during a browse.
            </summary>
        </member>
        <member name="F:Opc.Da.browseFilter.all">
            <summary>
            Return all types of browse elements.
            </summary>
        </member>
        <member name="F:Opc.Da.browseFilter.branch">
            <summary>
            Return only elements that contain other elements.
            </summary>
        </member>
        <member name="F:Opc.Da.browseFilter.item">
            <summary>
            Return only elements that represent items.
            </summary>
        </member>
        <member name="T:Opc.Da.BrowseFilters">
            <summary>
            Defines a set of filters to apply when browsing.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.MaxElementsReturned">
            <summary>
            The maximum number of elements to return. Zero means no limit.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.BrowseFilter">
            <summary>
            The type of element to return.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.ElementNameFilter">
            <summary>
            An expression used to match the name of the element.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.VendorFilter">
            <summary>
            A filter which has semantics that defined by the server.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.ReturnAllProperties">
            <summary>
            Whether all supported properties to return with each element.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.PropertyIDs">
            <summary>
            A list of names of the properties to return with each element.
            </summary>
        </member>
        <member name="P:Opc.Da.BrowseFilters.ReturnPropertyValues">
            <summary>
            Whether property values should be returned with the properties.
            </summary>
        </member>
        <member name="M:Opc.Da.BrowseFilters.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.ItemPropertyCollection">
            <summary>
            A list of properties for a single item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.ItemName">
            <summary>
            The primary identifier for the item within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.ItemPath">
            <summary>
            An secondary identifier for the item within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.Item(System.Int32)">
            <summary>
            Accesses the items at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.#ctor">
            <summary>
            Initializes the object with its default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with the specified item identifier.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
            <summary>
            Initializes the object with the specified item identifier and result id.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemPropertyCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.CopyTo(Opc.Da.ItemProperty[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.Insert(System.Int32,Opc.Da.ItemProperty)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.Remove(Opc.Da.ItemProperty)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.Contains(Opc.Da.ItemProperty)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.IndexOf(Opc.Da.ItemProperty)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.ItemPropertyCollection.Add(Opc.Da.ItemProperty)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Da.IServer">
            <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Da.IServer.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:Opc.Da.IServer.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:Opc.Da.IServer.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Opc.Da.IServer.Read(Opc.Da.Item[])">
            <summary>
            Reads the current values for a set of items. 
            </summary>
            <param name="items">The set of items to read.</param>
            <returns>The results of the read operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.IServer.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
            <param name="values">The set of item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.IServer.CreateSubscription(Opc.Da.SubscriptionState)">
            <summary>
            Creates a new subscription.
            </summary>
            <param name="state">The initial state of the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:Opc.Da.IServer.CancelSubscription(Opc.Da.ISubscription)">
            <summary>
            Cancels a subscription and releases all resources allocated for it.
            </summary>
            <param name="subscription">The subscription to cancel.</param>
        </member>
        <member name="M:Opc.Da.IServer.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
            <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
            <param name="itemID">The identifier of branch which is the target of the search.</param>
            <param name="filters">The filters to use to limit the set of child elements returned.</param>
            <param name="position">An object used to continue a browse that could not be completed.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Opc.Da.IServer.BrowseNext(Opc.Da.BrowsePosition@)">
            <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
            <param name="position">An object containing the browse operation state information.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Opc.Da.IServer.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
            <summary>
            Returns the item properties for a set of items.
            </summary>
            <param name="itemIDs">A list of item identifiers.</param>
            <param name="propertyIDs">A list of properties to fetch for each item.</param>
            <param name="returnValues">Whether the property values should be returned with the properties.</param>
            <returns>A list of properties for each item.</returns>
        </member>
        <member name="T:Opc.Da.ResultFilter">
            <summary>
            Filters applied by the server before returning item results.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ItemName">
            <summary>
            Include the ItemName in the ItemIdentifier if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ItemPath">
            <summary>
            Include the ItemPath in the ItemIdentifier if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ClientHandle">
            <summary>
            Include the ClientHandle in the ItemIdentifier if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ItemTime">
            <summary>
            Include the Timestamp in the ItemValue if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.ErrorText">
            <summary>
            Include verbose, localized error text with result if bit is set. 
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.DiagnosticInfo">
            <summary>
            Include additional diagnostic information with result if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.Minimal">
            <summary>
            Include the ItemName and Timestamp if bit is set.
            </summary>
        </member>
        <member name="F:Opc.Da.ResultFilter.All">
            <summary>
            Include all information in the results if bit is set.
            </summary>
        </member>
        <member name="T:Opc.Da.serverState">
            <summary>
            The set of possible server states.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.unknown">
            <summary>
            The server state is not known.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.running">
            <summary>
            The server is running normally.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.failed">
            <summary>
            The server is not functioning due to a fatal error.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.noConfig">
            <summary>
            The server cannot load its configuration information.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.suspended">
            <summary>
            The server has halted all communication with the underlying hardware.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.test">
            <summary>
            The server is disconnected from the underlying hardware.
            </summary>
        </member>
        <member name="F:Opc.Da.serverState.commFault">
            <summary>
            The server cannot communicate with the underlying hardware.
            </summary>
        </member>
        <member name="T:Opc.Da.ServerStatus">
            <summary>
            Contains properties that describe the current status of an OPC server.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.VendorInfo">
            <summary>
            The vendor name and product name for the server.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.ProductVersion">
            <summary>
            A string that contains the server software version number.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.ServerState">
            <summary>
            The current state of the server.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.StatusInfo">
            <summary>
            A string that describes the current server state.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.StartTime">
            <summary>
            The UTC time when the server started.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.CurrentTime">
            <summary>
            Th current UTC time at the server.
            </summary>
        </member>
        <member name="P:Opc.Da.ServerStatus.LastUpdateTime">
            <summary>
            The last time the server sent an data update to the client.
            </summary>
        </member>
        <member name="M:Opc.Da.ServerStatus.Clone">
            <summary>
            Creates a deepcopy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.ISubscription">
            <summary>
            A subscription for a set of items on a single OPC server.
            </summary>
        </member>
        <member name="E:Opc.Da.ISubscription.DataChanged">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="M:Opc.Da.ISubscription.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:Opc.Da.ISubscription.GetState">
            <summary>
            Returns the current state of the subscription.
            </summary>
            <returns>The current state of the subscription.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
            <summary>
            Changes the state of a subscription.
            </summary>
            <param name="masks">A bit mask that indicates which elements of the subscription state are changing.</param>
            <param name="state">The new subscription state.</param>
            <returns>The actual subscption state after applying the changes.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.AddItems(Opc.Da.Item[])">
            <summary>
            Adds items to the subscription.
            </summary>
            <param name="items">The set of items to add to the subscription.</param>
            <returns>The results of the add item operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.ModifyItems(System.Int32,Opc.Da.Item[])">
            <summary>
            Modifies the state of items in the subscription
            </summary>
            <param name="masks">Specifies which item state parameters are being modified.</param>
            <param name="items">The new state for each item.</param>
            <returns>The results of the modify item operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.RemoveItems(Opc.ItemIdentifier[])">
            <summary>
            Removes items from the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being removed.</param>
            <returns>The results of the remove item operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Read(Opc.Da.Item[])">
            <summary>
            Reads the values for a set of items in the subscription.
            </summary>
            <param name="items">The identifiers (i.e. server handles) for the items being read.</param>
            <returns>The value for each of items.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items in the subscription.
            </summary>
            <param name="items">The item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
            <param name="items">The set of item values to write (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous read or write operation.
            </summary>
            <param name="request">The object returned from the BeginRead or BeginWrite request.</param>
            <param name="callback">The function to invoke when the cancel completes.</param>
        </member>
        <member name="M:Opc.Da.ISubscription.Refresh">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
        </member>
        <member name="M:Opc.Da.ISubscription.Refresh(System.Object,Opc.IRequest@)">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.ISubscription.SetEnabled(System.Boolean)">
            <summary>
            Enables or disables data change notifications from the server.
            </summary>
            <param name="enabled">Whether data change notifications are enabled.</param>
        </member>
        <member name="M:Opc.Da.ISubscription.GetEnabled">
            <summary>
            Checks whether data change notifications from the server are enabled.
            </summary>
            <returns>Whether data change notifications are enabled.</returns>
        </member>
        <member name="T:Opc.Da.DataChangedEventHandler">
            <summary>
            A delegate to receive data change updates from the server.
            </summary>
        </member>
        <member name="T:Opc.Da.ReadCompleteEventHandler">
            <summary>
            A delegate to receive asynchronous read completed notifications.
            </summary>
        </member>
        <member name="T:Opc.Da.WriteCompleteEventHandler">
            <summary>
            A delegate to receive asynchronous write completed notifications.
            </summary>
        </member>
        <member name="T:Opc.Da.CancelCompleteEventHandler">
            <summary>
            A delegate to receive asynchronous cancel completed notifications.
            </summary>
        </member>
        <member name="T:Opc.Da.Request">
            <summary>
            Describes the state of a subscription.
            </summary>
        </member>
        <member name="P:Opc.Da.Request.Subscription">
            <summary>
            The subscription processing the request.
            </summary>
        </member>
        <member name="P:Opc.Da.Request.Handle">
            <summary>
            An unique identifier, assigned by the client, for the request.
            </summary>
        </member>
        <member name="M:Opc.Da.Request.Cancel(Opc.Da.CancelCompleteEventHandler)">
            <summary>
            Cancels the request, if possible.
            </summary>
        </member>
        <member name="M:Opc.Da.Request.#ctor(Opc.Da.ISubscription,System.Object)">
            <summary>
            Initializes the object with a subscription and a unique id.
            </summary>
        </member>
        <member name="T:Opc.Da.StateMask">
            <summary>
            Defines masks to be used when modifying the subscription or item state.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.Name">
            <summary>
            The name of the subscription.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.ClientHandle">
            <summary>
            The client assigned handle for the item or subscription.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.Locale">
            <summary>
            The locale to use for results returned to the client from the subscription.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.Active">
            <summary>
            Whether the item or subscription is active.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.UpdateRate">
            <summary>
            The maximum rate at which data update notifications are sent.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.KeepAlive">
            <summary>
            The longest period between data update notifications.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.ReqType">
            <summary>
            The requested data type for the item.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.Deadband">
            <summary>
            The deadband for the item or subscription.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.SamplingRate">
            <summary>
            The rate at which the server should check for changes to an item value.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.EnableBuffering">
            <summary>
            Whether the server should buffer multiple changes to a single item.
            </summary>
        </member>
        <member name="F:Opc.Da.StateMask.All">
            <summary>
            All fields are valid.
            </summary>
        </member>
        <member name="T:Opc.Da.SubscriptionState">
            <summary>
            Describes the state of a subscription.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.Name">
            <summary>
            A unique name for the subscription controlled by the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.ClientHandle">
            <summary>
            A unique identifier for the subscription assigned by the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.ServerHandle">
            <summary>
            A unique subscription identifier assigned by the server.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.Locale">
            <summary>
            The locale used for any error messages or results returned to the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.Active">
            <summary>
            Whether the subscription is scanning for updates to send to the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.UpdateRate">
            <summary>
            The rate at which the server checks of updates to send to the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.KeepAlive">
            <summary>
            The maximum period between updates sent to the client.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionState.Deadband">
            <summary>
            The minimum percentage change required to trigger a data update for an item.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionState.#ctor">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionState.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.Item">
            <summary>
            Describes how an item in the server address space should be accessed. 
            </summary>
        </member>
        <member name="P:Opc.Da.Item.ReqType">
            <summary>
            The data type to use when returning the item value.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.MaxAge">
            <summary>
            The oldest (in milliseconds) acceptable cached value when reading an item.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.MaxAgeSpecified">
            <summary>
            Whether the Max Age is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.Active">
            <summary>
            Whether the server should send data change updates. 
            </summary>
        </member>
        <member name="P:Opc.Da.Item.ActiveSpecified">
            <summary>
            Whether the Active state is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.Deadband">
            <summary>
            The minimum percentage change required to trigger a data update for an item. 
            </summary>
        </member>
        <member name="P:Opc.Da.Item.DeadbandSpecified">
            <summary>
            Whether the Deadband is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.SamplingRate">
            <summary>
            How frequently the server should sample the item value.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.SamplingRateSpecified">
            <summary>
            Whether the Sampling Rate is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.EnableBuffering">
            <summary>
            Whether the server should buffer multiple data changes between data updates.
            </summary>
        </member>
        <member name="P:Opc.Da.Item.EnableBufferingSpecified">
            <summary>
            Whether the Enable Buffering is specified.
            </summary>
        </member>
        <member name="M:Opc.Da.Item.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.Item.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Da.Item.#ctor(Opc.Da.Item)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="T:Opc.Da.ItemCollection">
            <summary>
            A collection of items.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.Item(System.Int32)">
            <summary>
             Gets the item at the specified index.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.Item(Opc.ItemIdentifier)">
            <summary>
            Gets the first item with the specified item id.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.#ctor(Opc.Da.ItemCollection)">
            <summary>
            Initializes object with the specified ResultCollection object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Da.ItemCollection.CopyTo(Opc.Da.Item[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Da.ItemCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Da.ItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.ItemCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.ItemCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Da.ItemCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemCollection.Insert(System.Int32,Opc.Da.Item)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Remove(Opc.Da.Item)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.ItemCollection.Contains(Opc.Da.Item)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.ItemCollection.IndexOf(Opc.Da.Item)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.ItemCollection.Add(Opc.Da.Item)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Da.ItemResult">
            <summary>
            The results of an operation on a uniquely identifiable item.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
            <summary>
            Initializes the object with an ItemIdentifier object and ResultID.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.Da.Item)">
            <summary>
            Initializes the object with an Item object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.Da.Item,Opc.ResultID)">
            <summary>
            Initializes the object with an Item object and ResultID.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemResult.#ctor(Opc.Da.ItemResult)">
            <summary>
            Initializes object with the specified ItemResult object.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemResult.ResultID">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.Da.ItemValue">
            <summary>
            Contains the value for a single item.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.Value">
            <summary>
            The item value.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.Quality">
            <summary>
            The quality of the item value.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.QualitySpecified">
            <summary>
            Whether the quality is specified.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.Timestamp">
            <summary>
            The UTC timestamp for the item value.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValue.TimestampSpecified">
            <summary>
            Whether the timestamp is specified.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with and ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.#ctor(System.String)">
            <summary>
            Initializes the object with the specified item name.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.#ctor(Opc.Da.ItemValue)">
            <summary>
            Initializes object with the specified ItemValue object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Da.ItemValueResult">
            <summary>
            The results of an operation on a uniquely identifiable item value.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with an ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.Da.ItemValue)">
            <summary>
            Initializes the object with an ItemValue object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.Da.ItemValueResult)">
            <summary>
            Initializes object with the specified ItemValueResult object.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(System.String,Opc.ResultID)">
            <summary>
            Initializes the object with the specified item name and result code.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(System.String,Opc.ResultID,System.String)">
            <summary>
            Initializes the object with the specified item name, result code and diagnostic info.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
            <summary>
            Initialize object with the specified ItemIdentifier and result code.
            </summary>
        </member>
        <member name="M:Opc.Da.ItemValueResult.#ctor(Opc.ItemIdentifier,Opc.ResultID,System.String)">
            <summary>
            Initializes the object with the specified ItemIdentifier, result code and diagnostic info.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValueResult.ResultID">
            <summary>
            The error id for the result of an operation on an property.
            </summary>
        </member>
        <member name="P:Opc.Da.ItemValueResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.Da.PropertyID">
            <summary>
            Contains a unique identifier for a property.
            </summary>
        </member>
        <member name="T:Opc.Da.PropertyID.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks>
            <c>MP:</c> During deserialization, SerializationInfo is passed to the class using the constructor provided for this purpose. Any visibility 
             constraints placed on the constructor are ignored when the object is deserialized; so you can mark the class as public, 
             protected, internal, or private. However, it is best practice to make the constructor protected unless the class is sealed, in which case 
             the constructor should be marked private. The constructor should also perform thorough input validation. To avoid misuse by malicious code, 
             the constructor should enforce the same security checks and permissions required to obtain an instance of the class using any other 
             constructor. 
             </remarks>
             <summary>
             Contructs a server by de-serializing its URL from the stream.
             </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyID.Name">
            <summary>
            Used for properties identified by a qualified name.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyID.Code">
            <summary>
            Used for properties identified by a integer.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.op_Equality(Opc.Da.PropertyID,Opc.Da.PropertyID)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.op_Inequality(Opc.Da.PropertyID,Opc.Da.PropertyID)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.#ctor(System.Xml.XmlQualifiedName)">
            <summary>
            Initializes a property identified by a qualified name.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.#ctor(System.Int32)">
            <summary>
            Initializes a property identified by an integer.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Initializes a property identified by a property description.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.Equals(System.Object)">
            <summary>
            Returns true if the target object is equal to the object.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.GetHashCode">
            <summary>
            Returns a useful hash code for the object.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyID.ToString">
            <summary>
            Converts the property id to a string.
            </summary>
        </member>
        <member name="T:Opc.Da.Property">
            <summary>
            Defines identifiers for well-known properties.
            </summary>
        </member>
        <member name="F:Opc.Da.Property.DATATYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.QUALITY">
            <remarks/>    
        </member>
        <member name="F:Opc.Da.Property.TIMESTAMP">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.ACCESSRIGHTS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.SCANRATE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.EUTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.EUINFO">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.ENGINEERINGUINTS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.HIGHEU">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LOWEU">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.HIGHIR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LOWIR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.CLOSELABEL">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.OPENLABEL">
            <remarks/>     
        </member>
        <member name="F:Opc.Da.Property.TIMEZONE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.CONDITION_STATUS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.ALARM_QUICK_HELP">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.ALARM_AREA_LIST">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.PRIMARY_ALARM_AREA">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.CONDITION_LOGIC">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LIMIT_EXCEEDED">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DEADBAND">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.HIHI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.HI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.LOLO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.RATE_CHANGE_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DEVIATION_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.SOUNDFILE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.TYPE_SYSTEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DICTIONARY_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.TYPE_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DICTIONARY">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.TYPE_DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.CONSISTENCY_WINDOW">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.WRITE_BEHAVIOR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.UNCONVERTED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.UNFILTERED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.DATA_FILTER_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.MINIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.MAXIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.Property.VALUE_PRECISION">
            <remarks/>
        </member>
        <member name="T:Opc.Da.PropertyDescription">
            <summary>
            Describes an item property.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyDescription.ID">
            <summary>
            The unique identifier for the property.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyDescription.Type">
            <summary>
            The .NET data type for the property.
            </summary>
        </member>
        <member name="P:Opc.Da.PropertyDescription.Name">
            <summary>
            The short description defined in the OPC specifications.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyDescription.#ctor(Opc.Da.PropertyID,System.Type,System.String)">
            <summary>
            Initializes the object with the specified values.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyDescription.ToString">
            <summary>
            Converts the description to a string.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyDescription.Find(Opc.Da.PropertyID)">
            <summary>
            Returns the description for the specified property.
            </summary>
        </member>
        <member name="M:Opc.Da.PropertyDescription.Enumerate">
            <summary>
            Returns an array of all well-known property descriptions.
            </summary>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DATATYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.QUALITY">
            <remarks/>    
        </member>
        <member name="F:Opc.Da.PropertyDescription.TIMESTAMP">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.ACCESSRIGHTS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.SCANRATE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.EUTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.EUINFO">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.ENGINEERINGUINTS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.HIGHEU">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LOWEU">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.HIGHIR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LOWIR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.CLOSELABEL">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.OPENLABEL">
            <remarks/>     
        </member>
        <member name="F:Opc.Da.PropertyDescription.TIMEZONE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.CONDITION_STATUS">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.ALARM_QUICK_HELP">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.ALARM_AREA_LIST">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.PRIMARY_ALARM_AREA">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.CONDITION_LOGIC">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LIMIT_EXCEEDED">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DEADBAND">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.HIHI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.HI_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.LOLO_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.RATE_CHANGE_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DEVIATION_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.SOUNDFILE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.TYPE_SYSTEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DICTIONARY_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.TYPE_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DICTIONARY">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.TYPE_DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.CONSISTENCY_WINDOW">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.WRITE_BEHAVIOR">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.UNCONVERTED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.UNFILTERED_ITEM_ID">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.DATA_FILTER_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.MINIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.MAXIMUM_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.Da.PropertyDescription.VALUE_PRECISION">
            <remarks/>
        </member>
        <member name="T:Opc.Da.accessRights">
            <summary>
            Defines possible item access rights.
            </summary>
        </member>
        <member name="F:Opc.Da.accessRights.readable">
            <remarks/>
        </member>
        <member name="F:Opc.Da.accessRights.writable">
            <remarks/>
        </member>
        <member name="F:Opc.Da.accessRights.readWritable">
            <remarks/>
        </member>
        <member name="T:Opc.Da.euType">
            <summary>
            Defines possible item engineering unit types
            </summary>
        </member>
        <member name="F:Opc.Da.euType.noEnum">
            <remarks/>
        </member>
        <member name="F:Opc.Da.euType.analog">
            <remarks/>
        </member>
        <member name="F:Opc.Da.euType.enumerated">
            <remarks/>
        </member>
        <member name="T:Opc.Da.qualityBits">
            <summary>
            Defines the possible quality status bits.
            </summary>
        </member>
        <member name="F:Opc.Da.qualityBits.good">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.goodLocalOverride">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.bad">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badConfigurationError">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badNotConnected">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badDeviceFailure">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badSensorFailure">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badLastKnownValue">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badCommFailure">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badOutOfService">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.badWaitingForInitialData">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertain">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertainLastUsableValue">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertainSensorNotAccurate">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertainEUExceeded">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityBits.uncertainSubNormal">
            <remarks/>
        </member>
        <member name="T:Opc.Da.limitBits">
            <summary>
            Defines the possible limit status bits.
            </summary>
        </member>
        <member name="F:Opc.Da.limitBits.none">
            <remarks/>
        </member>
        <member name="F:Opc.Da.limitBits.low">
            <remarks/>
        </member>
        <member name="F:Opc.Da.limitBits.high">
            <remarks/>
        </member>
        <member name="F:Opc.Da.limitBits.constant">
            <remarks/>
        </member>
        <member name="T:Opc.Da.qualityMasks">
            <summary>
            Defines bit masks for the quality.
            </summary>
        </member>
        <member name="F:Opc.Da.qualityMasks.qualityMask">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityMasks.limitMask">
            <remarks/>
        </member>
        <member name="F:Opc.Da.qualityMasks.vendorMask">
            <remarks/>
        </member>
        <member name="T:Opc.Da.Quality">
            <summary>
            Contains the quality field for an item value.
            </summary>
        </member>
        <member name="P:Opc.Da.Quality.QualityBits">
            <summary>
            The value in the quality bits field.
            </summary>
        </member>
        <member name="P:Opc.Da.Quality.LimitBits">
            <summary>
            The value in the limit bits field.
            </summary>
        </member>
        <member name="P:Opc.Da.Quality.VendorBits">
            <summary>
            The value in the vendor bits field.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.GetCode">
            <summary>
            Returns the quality as a 16 bit integer.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.SetCode(System.Int16)">
            <summary>
            Initializes the quality from a 16 bit integer.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.op_Equality(Opc.Da.Quality,Opc.Da.Quality)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.op_Inequality(Opc.Da.Quality,Opc.Da.Quality)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.#ctor(Opc.Da.qualityBits)">
            <summary>
            Initializes the object with the specified quality.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.#ctor(System.Int16)">
            <summary>
            Initializes the object from the contents of a 16 bit integer.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.ToString">
            <summary>
            Converts a quality to a string with the format: 'quality[limit]:vendor'.
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the current Quality
            </summary>
        </member>
        <member name="M:Opc.Da.Quality.GetHashCode">
            <summary>
            Returns hash code for the current Quality.
            </summary>
        </member>
        <member name="F:Opc.Da.Quality.Good">
            <summary>
            A 'good' quality value.
            </summary>
        </member>
        <member name="F:Opc.Da.Quality.Bad">
            <summary>
            An 'bad' quality value.
            </summary>
        </member>
        <member name="T:Opc.Da.Server">
            <summary>
            An in-process object used to access OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.#ctor(Opc.Factory,Opc.URL)">
            <summary>
            Initializes the object with a factory and a default URL.
            </summary>
            <param name="factory">The Opc.Factory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="T:Opc.Da.Server.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.Clone">
            <summary>
            Returns an unconnected copy of the server with the same URL. 
            </summary>
        </member>
        <member name="P:Opc.Da.Server.Subscriptions">
            <summary>
            Returns an array of all subscriptions for the server.
            </summary>
        </member>
        <member name="P:Opc.Da.Server.Filters">
            <summary>
            The current result filters applied by the server.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.Connect(Opc.URL,Opc.ConnectData)">
            <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.Disconnect">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.GetResultFilters">
            <summary>
            Returns the filters applied by the server to any item results returned to the client.
            </summary>
            <returns>A bit mask indicating which fields should be returned in any item results.</returns>
        </member>
        <member name="M:Opc.Da.Server.SetResultFilters(System.Int32)">
            <summary>
            Sets the filters applied by the server to any item results returned to the client.
            </summary>
            <param name="filters">A bit mask indicating which fields should be returned in any item results.</param>
        </member>
        <member name="M:Opc.Da.Server.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Opc.Da.Server.Read(Opc.Da.Item[])">
            <summary>
            Reads the current values for a set of items. 
            </summary>
            <param name="items">The set of items to read.</param>
            <returns>The results of the read operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.Server.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes the value, quality and timestamp for a set of items.
            </summary>
            <param name="items">The set of item values to write.</param>
            <returns>The results of the write operation for each item.</returns>
        </member>
        <member name="M:Opc.Da.Server.CreateSubscription(Opc.Da.SubscriptionState)">
            <summary>
            Creates a new subscription.
            </summary>
            <param name="state">The initial state of the subscription.</param>
            <returns>The new subscription object.</returns>
        </member>
        <member name="M:Opc.Da.Server.CreateSubscription(Opc.Da.ISubscription)">
            <summary>
            Creates a new instance of the appropriate subcription object.
            </summary>
            <param name="subscription">The remote subscription object.</param>
        </member>
        <member name="M:Opc.Da.Server.CancelSubscription(Opc.Da.ISubscription)">
            <summary>
            Cancels a subscription and releases all resources allocated for it.
            </summary>
            <param name="subscription">The subscription to cancel.</param>
        </member>
        <member name="M:Opc.Da.Server.Browse(Opc.ItemIdentifier,Opc.Da.BrowseFilters,Opc.Da.BrowsePosition@)">
            <summary>
            Fetches the children of a branch that meet the filter criteria.
            </summary>
            <param name="itemID">The identifier of branch which is the target of the search.</param>
            <param name="filters">The filters to use to limit the set of child elements returned.</param>
            <param name="position">An object used to continue a browse that could not be completed.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Opc.Da.Server.BrowseNext(Opc.Da.BrowsePosition@)">
            <summary>
            Continues a browse operation with previously specified search criteria.
            </summary>
            <param name="position">An object containing the browse operation state information.</param>
            <returns>The set of elements found.</returns>
        </member>
        <member name="M:Opc.Da.Server.GetProperties(Opc.ItemIdentifier[],Opc.Da.PropertyID[],System.Boolean)">
            <summary>
            Returns the item properties for a set of items.
            </summary>
            <param name="itemIDs">A list of item identifiers.</param>
            <param name="propertyIDs">A list of properties to fetch for each item.</param>
            <param name="returnValues">Whether the property values should be returned with the properties.</param>
            <returns>A list of properties for each item.</returns>
        </member>
        <member name="F:Opc.Da.Server.m_subscriptions">
            <summary>
            A list of subscriptions for the server.
            </summary>
        </member>
        <member name="F:Opc.Da.Server.m_filters">
            <summary>
            The local copy of the result filters.
            </summary>
        </member>
        <member name="M:Opc.Da.Server.EstablishSubscription(Opc.Da.Subscription)">
            <summary>
            Establishes a subscription based on the template provided.
            </summary>
        </member>
        <member name="T:Opc.Da.SubscriptionCollection">
            <summary>
            A collection of subscriptions.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.Item(System.Int32)">
            <summary>
             Gets the item at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.#ctor(Opc.Da.SubscriptionCollection)">
            <summary>
            Initializes object with the specified SubscriptionCollection object.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.CopyTo(Opc.Da.Subscription[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList subscription at the specified index.
            </summary>
            <param name="index">The zero-based index of the subscription to remove.</param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an subscription to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Clear">
            <summary>
            Removes all subscriptions from the IList.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific subscription in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Add(System.Object)">
            <summary>
            Adds an subscription to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Da.SubscriptionCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Insert(System.Int32,Opc.Da.Subscription)">
            <summary>
            Inserts an subscription to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Remove(Opc.Da.Subscription)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Contains(Opc.Da.Subscription)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.IndexOf(Opc.Da.Subscription)">
            <summary>
            Determines the index of a specific subscription in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Da.SubscriptionCollection.Add(Opc.Da.Subscription)">
            <summary>
            Adds an subscription to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Da.GetResultFiltersAsyncDelegate">
            <summary>
            The asynchronous delegate for GetResultFilters.
            </summary>
        </member>
        <member name="T:Opc.Da.SetResultFiltersAsyncDelegate">
            <summary>
            The asynchronous delegate for SetResultFilters.
            </summary>
        </member>
        <member name="T:Opc.Da.GetStatusAsyncDelegate">
            <summary>
            The asynchronous delegate for GetStatus.
            </summary>
        </member>
        <member name="T:Opc.Da.ReadAsyncDelegate">
            <summary>
            The asynchronous delegate for Read.
            </summary>
        </member>
        <member name="T:Opc.Da.WriteAsyncDelegate">
            <summary>
            The asynchronous delegate for Write.
            </summary>
        </member>
        <member name="T:Opc.Da.CreateSubscriptionAsyncDelegate">
            <summary>
            The asynchronous delegate for CreateSubscription.
            </summary>
        </member>
        <member name="T:Opc.Da.CancelSubscriptionAsyncDelegate">
            <summary>
            The asynchronous delegate for CancelSubscription.
            </summary>
        </member>
        <member name="T:Opc.Da.BrowseAsyncDelegate">
            <summary>
            The asynchronous delegate for Browse.
            </summary>
        </member>
        <member name="T:Opc.Da.BrowseNextAsyncDelegate">
            <summary>
            The asynchronous delegate for BrowseNext.
            </summary>
        </member>
        <member name="T:Opc.Da.GetPropertiesAsyncDelegate">
            <summary>
            The asynchronous delegate for GetProperties.
            </summary>
        </member>
        <member name="T:Opc.Da.Subscription">
            <summary>
            An in-process object used to access subscriptions on OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.#ctor(Opc.Da.Server,Opc.Da.ISubscription)">
            <summary>
            Initializes object with default values.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Dispose">
            <summary>
            This must be called explicitly by clients to ensure the remote server is released.
            </summary>
        </member>
        <member name="T:Opc.Da.Subscription.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Clone">
            <summary>
            Returns an unconnected copy of the subscription with the same items.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Server">
            <summary>
            The server that the subscription is attached to.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Name">
            <summary>
            The name assigned to the subscription by the client.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.ClientHandle">
            <summary>
            The handle assigned to the group by the client.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.ServerHandle">
            <summary>
            The handle assigned to the subscription by the server.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Active">
            <summary>
            Whether the subscription is active.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Enabled">
            <summary>
            Whether data callbacks are enabled.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Locale">
            <summary>
            The current locale used by the subscription.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Filters">
            <summary>
            The current result filters applied by the subscription.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.State">
            <summary>
            Returns a copy of the current subscription state.
            </summary>
        </member>
        <member name="P:Opc.Da.Subscription.Items">
            <summary>
            The items belonging to the subscription.
            </summary>
        </member>
        <member name="E:Opc.Da.Subscription.DataChanged">
            <summary>
            An event to receive data change updates.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.GetResultFilters">
            <summary>
            Gets default result filters for the server.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.SetResultFilters(System.Int32)">
            <summary>
            Sets default result filters for the server.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.GetState">
            <summary>
            Returns the current subscription state.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.ModifyState(System.Int32,Opc.Da.SubscriptionState)">
            <summary>
            Updates the current subscription state.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.AddItems(Opc.Da.Item[])">
            <summary>
            Adds items to the subscription.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.ModifyItems(System.Int32,Opc.Da.Item[])">
            <summary>
            Modifies items that are already part of the subscription.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.RemoveItems(Opc.ItemIdentifier[])">
            <summary>
            Removes items from a subsription.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Read(Opc.Da.Item[])">
            <summary>
            Reads a set of subscription items.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Write(Opc.Da.ItemValue[])">
            <summary>
            Writes a set of subscription items.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Read(Opc.Da.Item[],System.Object,Opc.Da.ReadCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous read operation for a set of items.
            </summary>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.Subscription.Write(Opc.Da.ItemValue[],System.Object,Opc.Da.WriteCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Begins an asynchronous write operation for a set of items.
            </summary>
            <param name="items">The set of item values to write (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.Subscription.Cancel(Opc.IRequest,Opc.Da.CancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous request.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Refresh">
            <summary>
            Tells the server to send an data change update for all subscription items. 
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.Refresh(System.Object,Opc.IRequest@)">
            <summary>
            Causes the server to send a data changed notification for all active items. 
            </summary>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Da.Subscription.SetEnabled(System.Boolean)">
            <summary>
            Sets whether data change callbacks are enabled.
            </summary>
        </member>
        <member name="M:Opc.Da.Subscription.GetEnabled">
            <summary>
            Gets whether data change callbacks are enabled.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_server">
            <summary>
            The containing server object.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_subscription">
            <summary>
            The remote subscription object.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_state">
            <summary>
            The local copy of the subscription state.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_items">
            <summary>
            The local copy of all subscription items.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_enabled">
            <summary>
            Whether data callbacks are enabled.
            </summary>
        </member>
        <member name="F:Opc.Da.Subscription.m_filters">
            <summary>
            The local copy of the result filters.
            </summary>
        </member>
        <member name="T:Opc.Dx.DXConnection">
            <summary>
            Describes how an item in the server address space should be accessed. 
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.Name">
            <summary>
            A unique name for the connection within the configuration.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.BrowsePaths">
            <summary>
            A unique name for the connection within the configuration.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.Description">
            <summary>
            A more detailed description of the connection.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.Keyword">
            <summary>
            A keyword that can be used to search for a connection.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.DefaultSourceItemConnected">
            <summary>
            Whether data is acquired from source item on startup.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.DefaultSourceItemConnectedSpecified">
            <summary>
            Whether the DefaultSourceItemConnected property is specified.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.DefaultTargetItemConnected">
            <summary>
            Whether data is written to the target item on startup.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.DefaultTargetItemConnectedSpecified">
            <summary>
            Whether the DefaultTargetItemConnected property is specified.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.DefaultOverridden">
            <summary>
            Whether data the override value should be written to the target item.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.DefaultOverriddenSpecified">
            <summary>
            Whether the DefaultOverridden property is specified.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.DefaultOverrideValue">
            <summary>
            The value to use when writing an override value to the target item.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.EnableSubstituteValue">
            <summary>
            Whether data the substitute value should be written to the target item.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.EnableSubstituteValueSpecified">
            <summary>
            Whether the EnableSubstituteValue property is specified.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.SubstituteValue">
            <summary>
            The value to use when writing an substitute value to the target item.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.TargetItemName">
            <summary>
            The item name for the target item.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.TargetItemPath">
            <summary>
            The item path for the target item.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.SourceServerName">
            <summary>
            The name of the source server.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.SourceItemName">
            <summary>
            The item name for the source item.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.SourceItemPath">
            <summary>
            The item path for the source item.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.SourceItemQueueSize">
            <summary>
            The size of the queue to maintain for values received from the source.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.SourceItemQueueSizeSpecified">
            <summary>
            Whether the SourceItemQueueSize property is specified.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.UpdateRate">
            <summary>
            The rate at which values should be acquired from the source.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.UpdateRateSpecified">
            <summary>
            Whether the UpdateRate property is specified.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.Deadband">
            <summary>
            A deadband to use when acquiring data from the source.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.DeadbandSpecified">
            <summary>
            Whether the Deadband property is specified.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnection.VendorData">
            <summary>
            Vendor specific information associated with a connection.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnection.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnection.#ctor(Opc.Dx.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnection.#ctor(Opc.Dx.DXConnection)">
            <summary>
            Initializes object with the specified DXConnection object.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Dx.BrowsePathCollection">
            <summary>
            A collection of browse paths.
            </summary>
        </member>
        <member name="P:Opc.Dx.BrowsePathCollection.Item(System.Int32)">
            <summary>
            Gets the browse path at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Dx.BrowsePathCollection.ToArray">
            <summary>
            Converts the collection to an array of strings.
            </summary>
        </member>
        <member name="M:Opc.Dx.BrowsePathCollection.Add(System.String)">
            <summary>
            Adds a new browse path to the collection.
            </summary>
        </member>
        <member name="M:Opc.Dx.BrowsePathCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a new browse path to the collection at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Dx.BrowsePathCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Dx.BrowsePathCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes object with the specified ICollection object.
            </summary>
        </member>
        <member name="T:Opc.Dx.DXConnectionCollection">
            <summary>
            A collection of DX connections.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionCollection.Item(System.Int32)">
            <summary>
            Gets the source server at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.ToArray">
            <summary>
            Returns the contents of the collection as an array.
            </summary>
            <returns>The set of connections in the collection.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes object with the specified ResultCollection object.
            </summary>
        </member>
        <member name="T:Opc.Dx.DXConnectionCollection.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.CopyTo(Opc.Dx.DXConnection[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Dx.DXConnectionCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Dx.DXConnectionCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Dx.DXConnectionCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Insert(System.Int32,Opc.Dx.DXConnection)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Remove(Opc.Dx.DXConnection)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Contains(Opc.Dx.DXConnection)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.IndexOf(Opc.Dx.DXConnection)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionCollection.Add(Opc.Dx.DXConnection)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Dx.DXConnectionQuery">
            <summary>
            Stores parameters for a DX connection query,
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionQuery.Name">
            <summary>
            A unique name for the query within the configuration.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionQuery.BrowsePath">
            <summary>
            The browse path where the search begins.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionQuery.Recursive">
            <summary>
            Whether the folders under the browse path are searched as well.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionQuery.Masks">
            <summary>
            The masks that define the query criteria.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQuery.Query(Opc.Dx.Server,Opc.ResultID[]@)">
            <summary>
            Returns all connections that meet the query criteria.
            </summary>
            <param name="server">The DX server to query.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The set of DX connections matching the query criteria.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionQuery.Update(Opc.Dx.Server,Opc.Dx.DXConnection,Opc.ResultID[]@)">
            <summary>
            Updates all connections that meet the query criteria.
            </summary>
            <param name="server">The DX server to update.</param>
            <param name="connectionDefinition">The changes to apply to each connection that meets the query criteria.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that met the criteria and were updated.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionQuery.Delete(Opc.Dx.Server,Opc.ResultID[]@)">
            <summary>
            Deletea all connections that meet the query criteria.
            </summary>
            <param name="server">The DX server to update.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that met the criteria and were deletes.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionQuery.CopyDefaultAttributes(Opc.Dx.Server,System.Boolean,Opc.ResultID[]@)">
            <summary>
            Changes the default or runtime attributes for a set of connections. 
            </summary>
            <param name="server">The DX server to update.</param>
            <param name="configToStatus">Whether the default attributes are copied to or copied from the runtime attributes.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that met the criteria and were updated.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionQuery.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQuery.#ctor(Opc.Dx.DXConnectionQuery)">
            <summary>
            Initializes object with the specified DXConnection object.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQuery.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Dx.DXConnectionQueryCollection">
            <summary>
            A collection of DX Connection queries..
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionQueryCollection.Item(System.Int32)">
            <summary>
            Gets the source server at the specified index.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionQueryCollection.Item(System.String)">
            <summary>
            Gets the source server with the specified name.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Initialize(System.Collections.ICollection)">
            <summary>
            Initializes object with the specified Collection object.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionQueryCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionQueryCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.CopyTo(Opc.Dx.DXConnectionQuery[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Dx.DXConnectionQueryCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Dx.DXConnectionQueryCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Dx.DXConnectionQueryCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Dx.DXConnectionQueryCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Insert(System.Int32,Opc.Dx.DXConnectionQuery)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Remove(Opc.Dx.DXConnectionQuery)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Contains(Opc.Dx.DXConnectionQuery)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.IndexOf(Opc.Dx.DXConnectionQuery)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Dx.DXConnectionQueryCollection.Add(Opc.Dx.DXConnectionQuery)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Dx.GeneralResponse">
            <summary>
            A collection of source servers.
            </summary>
        </member>
        <member name="P:Opc.Dx.GeneralResponse.Version">
            <summary>
            The configuration version after all changes were applied.
            </summary>
        </member>
        <member name="M:Opc.Dx.GeneralResponse.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Dx.GeneralResponse.#ctor(System.String,System.Collections.ICollection)">
            <summary>
            Initializes the object with any IdentifiedResults contained in the collection.
            </summary>
        </member>
        <member name="P:Opc.Dx.GeneralResponse.Item(System.Int32)">
            <summary>
            Returns the IdentifiedResult at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Dx.GeneralResponse.Clear">
            <summary>
            Removes all itemIDs in the collection.
            </summary>
        </member>
        <member name="M:Opc.Dx.GeneralResponse.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Dx.GeneralResponse.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Dx.GeneralResponse.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Dx.GeneralResponse.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Dx.GeneralResponse.CopyTo(Opc.Dx.IdentifiedResult[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Dx.GeneralResponse.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Dx.GeneralResponse.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Opc.Dx.GeneralResponse.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any item ids contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="T:Opc.Dx.IServer">
            <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Dx.IServer.GetSourceServers">
            <summary>
            Fetches all source servers in the current configuration.
            </summary>
            <returns>The list of source servers.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.AddSourceServers(Opc.Dx.SourceServer[])">
            <summary>
            Adds a new set of source servers to the current configuration.
            </summary>
            <param name="servers">The list of source servers to add.</param>
            <returns>The results of the operation for each source server.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.ModifySourceServers(Opc.Dx.SourceServer[])">
            <summary>
            Modifies a set of source servers in the current configuration.
            </summary>
            <param name="servers">A list source source attributes.</param>
            <returns>The results of the operation for each source server.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.DeleteSourceServers(Opc.Dx.ItemIdentifier[])">
            <summary>
            Deletes a set of source servers in the current configuration.
            </summary>
            <param name="servers">A list of source servers to delete.</param>
            <returns>The results of the operation for each source server.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.CopyDefaultSourceServerAttributes(System.Boolean,Opc.Dx.ItemIdentifier[])">
            <summary>
            Copies the default or runtime attributes for a set of source servers. 
            </summary>
            <param name="configToStatus">Whether the default attributes are copied to or copied from the runtime attributes.</param>
            <param name="servers">The set of source servers to modify.</param>
            <returns>The results of the operation for each source server.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.QueryDXConnections(System.String,Opc.Dx.DXConnection[],System.Boolean,Opc.ResultID[]@)">
            <summary>
            Returns a list of connections that meet the specified criteria.
            </summary>
            <param name="browsePath">The browse path where the search begins.</param>
            <param name="connectionMasks">The masks that define the query criteria.</param>
            <param name="recursive">Whether the folders under the browse path are searched as well.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that meet the criteria.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.AddDXConnections(Opc.Dx.DXConnection[])">
            <summary>
            Add a set of connections to the configuration.
            </summary>
            <param name="connections">The set of connections to add.</param>
            <returns>The results of the operation for each connection.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.ModifyDXConnections(Opc.Dx.DXConnection[])">
            <summary>
            Modify a set of connections in the configuration.
            </summary>
            <param name="connections">The set of connections to modify.</param>
            <returns>The results of the operation for each connection.</returns>
            <remarks>Only explicitly specified attributes in the connection objects are changed.</remarks>
        </member>
        <member name="M:Opc.Dx.IServer.UpdateDXConnections(System.String,Opc.Dx.DXConnection[],System.Boolean,Opc.Dx.DXConnection,Opc.ResultID[]@)">
            <summary>
            Updates a set of connections which meet the specified query criteria.
            </summary>
            <param name="browsePath">The browse path where the search begins.</param>
            <param name="connectionMasks">The masks that define the query criteria.</param>
            <param name="recursive">Whether the folders under the browse path are searched as well.</param>
            <param name="connectionDefinition">The changes that will be applied to all connections meeting the criteria.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that met the criteria and were updated.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.DeleteDXConnections(System.String,Opc.Dx.DXConnection[],System.Boolean,Opc.ResultID[]@)">
            <summary>
            Deletes a set of connections which meet the specified query criteria.
            </summary>
            <param name="browsePath">The browse path where the search begins.</param>
            <param name="connectionMasks">The masks that define the query criteria.</param>
            <param name="recursive">Whether the folders under the browse path are searched as well.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that met the criteria and were deleted.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.CopyDXConnectionDefaultAttributes(System.Boolean,System.String,Opc.Dx.DXConnection[],System.Boolean,Opc.ResultID[]@)">
            <summary>
            Changes the default or runtime attributes for a set of connections. 
            </summary>
            <param name="configToStatus">Whether the default attributes are copied to or copied from the runtime attributes.</param>
            <param name="browsePath">The browse path where the search begins.</param>
            <param name="connectionMasks">The masks that define the query criteria.</param>
            <param name="recursive">Whether the folders under the browse path are searched as well.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that met the criteria and were modified.</returns>
        </member>
        <member name="M:Opc.Dx.IServer.ResetConfiguration(System.String)">
            <summary>
            Resets the current configuration,
            </summary>
            <param name="configurationVersion">The current configuration version.</param>
            <returns>The new configuration version.</returns>
        </member>
        <member name="T:Opc.Dx.ItemIdentifier">
            <summary>
            A unique identifier for an item with an associated version id.
            </summary>
        </member>
        <member name="P:Opc.Dx.ItemIdentifier.Version">
            <summary>
            A globally unique version identifier associated with a specific instance of an object.
            </summary>
        </member>
        <member name="M:Opc.Dx.ItemIdentifier.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Dx.ItemIdentifier.#ctor(System.String)">
            <summary>
            Initializes the object with the specified item name.
            </summary>
        </member>
        <member name="M:Opc.Dx.ItemIdentifier.#ctor(System.String,System.String)">
            <summary>
            Initializes the object with the specified item path and item name.
            </summary>
        </member>
        <member name="M:Opc.Dx.ItemIdentifier.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Dx.ItemIdentifier.#ctor(Opc.Dx.ItemIdentifier)">
            <summary>
            Initializes the object with the specified item identifier.
            </summary>
        </member>
        <member name="M:Opc.Dx.ItemIdentifier.Equals(System.Object)">
            <summary>
            Returns true if the target object is equal to the object.
            </summary>
        </member>
        <member name="M:Opc.Dx.ItemIdentifier.GetHashCode">
            <summary>
            Returns a useful hash code for the object.
            </summary>
        </member>
        <member name="T:Opc.Dx.IdentifiedResult">
            <summary>
            A result code associated with a unique item identifier.
            </summary>
        </member>
        <member name="M:Opc.Dx.IdentifiedResult.#ctor">
            <summary>
            Initialize object with default values.
            </summary>
        </member>
        <member name="M:Opc.Dx.IdentifiedResult.#ctor(Opc.Dx.ItemIdentifier)">
            <summary>
            Initialize object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Dx.IdentifiedResult.#ctor(Opc.Dx.IdentifiedResult)">
            <summary>
            Initialize object with the specified IdentifiedResult object.
            </summary>
        </member>
        <member name="M:Opc.Dx.IdentifiedResult.#ctor(System.String,Opc.ResultID)">
            <summary>
            Initializes the object with the specified item name and result code.
            </summary>
        </member>
        <member name="M:Opc.Dx.IdentifiedResult.#ctor(System.String,Opc.ResultID,System.String)">
            <summary>
            Initialize object with the specified item name, result code and diagnostic info.
            </summary>
        </member>
        <member name="M:Opc.Dx.IdentifiedResult.#ctor(Opc.Dx.ItemIdentifier,Opc.ResultID)">
            <summary>
            Initialize object with the specified ItemIdentifier and result code.
            </summary>
        </member>
        <member name="M:Opc.Dx.IdentifiedResult.#ctor(Opc.Dx.ItemIdentifier,Opc.ResultID,System.String)">
            <summary>
            Initialize object with the specified ItemIdentifier, result code and diagnostic info.
            </summary>
        </member>
        <member name="P:Opc.Dx.IdentifiedResult.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Dx.IdentifiedResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.Dx.Server">
            <summary>
            An in-process object used to access OPC Data eXchange servers.
            </summary>
        </member>
        <member name="M:Opc.Dx.Server.#ctor(Opc.Factory,Opc.URL)">
            <summary>
            Initializes the object with a factory and a default URL.
            </summary>
            <param name="factory">The Opc.Factory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="P:Opc.Dx.Server.Version">
            <summary>
            The last configuration version returned from the server.
            </summary>
        </member>
        <member name="P:Opc.Dx.Server.SourceServers">
            <summary>
            The set of source servers in the configuration.
            </summary>
        </member>
        <member name="P:Opc.Dx.Server.Queries">
            <summary>
            The set of DX connection queries 
            </summary>
        </member>
        <member name="M:Opc.Dx.Server.AddSourceServer(Opc.Dx.SourceServer)">
            <summary>
            Adds a single source server to the configuration.
            </summary>
            <param name="server">The source server to add.</param>
            <returns>Returns the new source server object.</returns>
        </member>
        <member name="M:Opc.Dx.Server.ModifySourceServer(Opc.Dx.SourceServer)">
            <summary>
            Modifies a single source server in the configuration.
            </summary>
            <param name="server">The source server to modify.</param>
            <returns>Returns the new source server object.</returns>
        </member>
        <member name="M:Opc.Dx.Server.DeleteSourceServer(Opc.Dx.SourceServer)">
            <summary>
            Deletes a single source server from the configuration.
            </summary>
            <param name="server">The source server to delete.</param>
        </member>
        <member name="M:Opc.Dx.Server.AddDXConnection(Opc.Dx.DXConnection)">
            <summary>
            Adds a single DX connection to the configuration.
            </summary>
            <param name="connection">The DX connection to add.</param>
            <returns>Returns the new DX connection object.</returns>
        </member>
        <member name="M:Opc.Dx.Server.ModifyDXConnection(Opc.Dx.DXConnection)">
            <summary>
            Modifies a single DX connection in the configuration.
            </summary>
            <param name="connection">The DX connection to modify.</param>
        </member>
        <member name="M:Opc.Dx.Server.DeleteDXConnections(Opc.Dx.DXConnection)">
            <summary>
            Deletes a single DX connection from the configuration.
            </summary>
            <param name="connection">The DX connection to delete.</param>
        </member>
        <member name="T:Opc.Dx.Server.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Dx.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Dx.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Dx.Server.GetSourceServers">
            <summary>
            Fetches all source servers in the current configuration.
            </summary>
            <returns>The list of source servers.</returns>
        </member>
        <member name="M:Opc.Dx.Server.AddSourceServers(Opc.Dx.SourceServer[])">
            <summary>
            Adds a new set of source servers to the current configuration.
            </summary>
            <param name="servers">The list of source servers to add.</param>
            <returns>The results of the operation for each source server.</returns>
        </member>
        <member name="M:Opc.Dx.Server.ModifySourceServers(Opc.Dx.SourceServer[])">
            <summary>
            Modifies a set of source servers in the current configuration.
            </summary>
            <param name="servers">A list source source attributes.</param>
            <returns>The results of the operation for each source server.</returns>
        </member>
        <member name="M:Opc.Dx.Server.DeleteSourceServers(Opc.Dx.ItemIdentifier[])">
            <summary>
            Deletes a set of source servers in the current configuration.
            </summary>
            <param name="servers">A list of source servers to delete.</param>
            <returns>The results of the operation for each source server.</returns>
        </member>
        <member name="M:Opc.Dx.Server.CopyDefaultSourceServerAttributes(System.Boolean,Opc.Dx.ItemIdentifier[])">
            <summary>
            Copies the default or runtime attributes for a set of source servers. 
            </summary>
            <param name="configToStatus">Whether the default attributes are copied to or copied from the runtime attributes.</param>
            <param name="servers">The set of source servers to modify.</param>
            <returns>The results of the operation for each source server.</returns>
        </member>
        <member name="M:Opc.Dx.Server.QueryDXConnections(System.String,Opc.Dx.DXConnection[],System.Boolean,Opc.ResultID[]@)">
            <summary>
            Returns a list of connections that meet the specified criteria.
            </summary>
            <param name="browsePath">The browse path where the search begins.</param>
            <param name="connectionMasks">The masks that define the query criteria.</param>
            <param name="recursive">Whether the folders under the browse path are searched as well.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that meet the criteria.</returns>
        </member>
        <member name="M:Opc.Dx.Server.AddDXConnections(Opc.Dx.DXConnection[])">
            <summary>
            Add a set of connections to the configuration.
            </summary>
            <param name="connections">The set of connections to add.</param>
            <returns>The results of the operation for each connection.</returns>
        </member>
        <member name="M:Opc.Dx.Server.ModifyDXConnections(Opc.Dx.DXConnection[])">
            <summary>
            Modify a set of connections in the configuration.
            </summary>
            <param name="connections">The set of connections to modify.</param>
            <returns>The results of the operation for each connection.</returns>
            <remarks>Only explicitly specified attributes in the connection objects are changed.</remarks>
        </member>
        <member name="M:Opc.Dx.Server.UpdateDXConnections(System.String,Opc.Dx.DXConnection[],System.Boolean,Opc.Dx.DXConnection,Opc.ResultID[]@)">
            <summary>
            Updates a set of connections which meet the specified query criteria.
            </summary>
            <param name="browsePath">The browse path where the search begins.</param>
            <param name="connectionMasks">The masks that define the query criteria.</param>
            <param name="recursive">Whether the folders under the browse path are searched as well.</param>
            <param name="connectionDefinition">The changes that will be applied to all connections meeting the criteria.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that met the criteria and were updated.</returns>
        </member>
        <member name="M:Opc.Dx.Server.DeleteDXConnections(System.String,Opc.Dx.DXConnection[],System.Boolean,Opc.ResultID[]@)">
            <summary>
            Deletes a set of connections which meet the specified query criteria.
            </summary>
            <param name="browsePath">The browse path where the search begins.</param>
            <param name="connectionMasks">The masks that define the query criteria.</param>
            <param name="recursive">Whether the folders under the browse path are searched as well.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that met the criteria and were deleted.</returns>
        </member>
        <member name="M:Opc.Dx.Server.CopyDXConnectionDefaultAttributes(System.Boolean,System.String,Opc.Dx.DXConnection[],System.Boolean,Opc.ResultID[]@)">
            <summary>
            Changes the default or runtime attributes for a set of connections. 
            </summary>
            <param name="configToStatus">Whether the default attributes are copied to or copied from the runtime attributes.</param>
            <param name="browsePath">The browse path where the search begins.</param>
            <param name="connectionMasks">The masks that define the query criteria.</param>
            <param name="recursive">Whether the folders under the browse path are searched as well.</param>
            <param name="errors">Any errors associated with individual query masks.</param>
            <returns>The list of connections that met the criteria and were modified.</returns>
        </member>
        <member name="M:Opc.Dx.Server.ResetConfiguration(System.String)">
            <summary>
            Resets the current configuration,
            </summary>
            <param name="configurationVersion">The current configuration version.</param>
            <returns>The new configuration version.</returns>
        </member>
        <member name="T:Opc.Dx.SourceServer">
            <summary>
            Describes how an item in the server address space should be accessed. 
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServer.Name">
            <summary>
            A unique name for the source server within the configuration.
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServer.Description">
            <summary>
            A more detailed description of the source server.
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServer.ServerType">
            <summary>
            The type of interface used to communicate with the source server.
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServer.ServerURL">
            <summary>
            The network address of the source server specified with a URL syntax.
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServer.DefaultConnected">
            <summary>
            Whether the DX should be connected to the source server at startup.
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServer.DefaultConnectedSpecified">
            <summary>
            Whether a value for the 'default connected' attribute is specified.
            </summary>
        </member>
        <member name="M:Opc.Dx.SourceServer.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Dx.SourceServer.#ctor(Opc.Dx.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Dx.SourceServer.#ctor(Opc.Dx.SourceServer)">
            <summary>
            Initializes object with the specified SourceServer object.
            </summary>
        </member>
        <member name="T:Opc.Dx.ServerType">
            <summary>
            Defines string constants for the standard source server types supported by a DX server.
            </summary>
        </member>
        <member name="F:Opc.Dx.ServerType.COM_DA10">
            <remarks/>
        </member>
        <member name="F:Opc.Dx.ServerType.COM_DA204">
            <remarks/>
        </member>
        <member name="F:Opc.Dx.ServerType.COM_DA205">
            <remarks/>
        </member>
        <member name="F:Opc.Dx.ServerType.COM_DA30">
            <remarks/>
        </member>
        <member name="F:Opc.Dx.ServerType.XML_DA10">
            <remarks/>
        </member>
        <member name="M:Opc.Dx.ServerType.Enumerate">
            <summary>
            Returns an array of all well-known property descriptions.
            </summary>
        </member>
        <member name="T:Opc.Dx.SourceServerCollection">
            <summary>
            A collection of source servers.
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServerCollection.Item(System.Int32)">
            <summary>
            Gets the source server at the specified index.
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServerCollection.Item(System.String)">
            <summary>
            Gets the source server with the specified name.
            </summary>
        </member>
        <member name="M:Opc.Dx.SourceServerCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Dx.SourceServerCollection.Initialize(System.Collections.ICollection)">
            <summary>
            Initializes object with the specified Collection object.
            </summary>
        </member>
        <member name="M:Opc.Dx.SourceServerCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServerCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Dx.SourceServerCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Dx.SourceServerCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Dx.SourceServerCollection.CopyTo(Opc.Dx.SourceServer[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Dx.SourceServerCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Dx.SourceServerCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Opc.Hda.Aggregate">
            <summary>
            The description of an item aggregate supported by the server.
            </summary>
        </member>
        <member name="P:Opc.Hda.Aggregate.ID">
            <summary>
            A unique identifier for the aggregate.
            </summary>
        </member>
        <member name="P:Opc.Hda.Aggregate.Name">
            <summary>
            The unique name for the aggregate.
            </summary>
        </member>
        <member name="P:Opc.Hda.Aggregate.Description">
            <summary>
            A short description of the aggregate.
            </summary>
        </member>
        <member name="M:Opc.Hda.Aggregate.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Opc.Hda.Aggregate.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.AggregateCollection">
            <summary>
            The description of an item aggregate supported by the server.
            </summary>
        </member>
        <member name="M:Opc.Hda.AggregateCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AggregateCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any Aggregates contained in the collection.
            </summary>
            <param name="collection">A collection containing aggregate descriptions.</param>
        </member>
        <member name="P:Opc.Hda.AggregateCollection.Item(System.Int32)">
            <summary>
            Returns the aggregate at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.AggregateCollection.Find(System.Int32)">
            <summary>
            Returns the first aggregate with the specified id.
            </summary>
        </member>
        <member name="M:Opc.Hda.AggregateCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any aggregates contained in the collection.
            </summary>
            <param name="collection">A collection containing aggregate descriptions.</param>
        </member>
        <member name="M:Opc.Hda.AggregateCollection.Clear">
            <summary>
            Removes all aggregates in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AggregateCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.AggregateCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.AggregateCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AggregateCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.AggregateCollection.CopyTo(Opc.Hda.Aggregate[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.AggregateCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.AggregateCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Opc.Hda.AggregateID">
            <summary>
            Defines constants for well-known item aggregates.
            </summary>
        </member>
        <member name="F:Opc.Hda.AggregateID.NOAGGREGATE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.INTERPOLATIVE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.TOTAL">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.AVERAGE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.TIMEAVERAGE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.COUNT">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.STDEV">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.MINIMUMACTUALTIME">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.MINIMUM">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.MAXIMUMACTUALTIME">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.MAXIMUM">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.START">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.END">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.DELTA">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.REGSLOPE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.REGCONST">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.REGDEV">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.VARIANCE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.DURATIONGOOD">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.DURATIONBAD">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.PERCENTGOOD">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.PERCENTBAD">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.WORSTQUALITY">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AggregateID.ANNOTATIONS">
            <remarks/>
        </member>
        <member name="T:Opc.Hda.AnnotationValue">
            <summary>
            An annotation associated with an item.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValue.Timestamp">
            <summary>
            The timestamp for the annotation.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValue.Annotation">
            <summary>
            The text of the annotation.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValue.CreationTime">
            <summary>
            The time when the annotation was created.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValue.User">
            <summary>
            The user who created the annotation.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.AnnotationValueCollection">
            <summary>
            A collection of item values passed to write or returned from a read operation.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.#ctor(Opc.Hda.Item)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.#ctor(Opc.Hda.AnnotationValueCollection)">
            <summary>
            Initializes object with the specified ItemValueCollection object.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.StartTime">
            <summary>
            The actual start time used by a server while processing a request.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.EndTime">
            <summary>
            The actual end time used by a server while processing a request.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.CopyTo(Opc.Hda.AnnotationValue[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Hda.AnnotationValueCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Insert(System.Int32,Opc.Hda.AnnotationValue)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Remove(Opc.Hda.AnnotationValue)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Contains(Opc.Hda.AnnotationValue)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.IndexOf(Opc.Hda.AnnotationValue)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.AnnotationValueCollection.Add(Opc.Hda.AnnotationValue)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Hda.Attribute">
            <summary>
            The description of an item attribute supported by the server.
            </summary>
        </member>
        <member name="P:Opc.Hda.Attribute.ID">
            <summary>
            A unique identifier for the attribute.
            </summary>
        </member>
        <member name="P:Opc.Hda.Attribute.Name">
            <summary>
            The unique name for the attribute.
            </summary>
        </member>
        <member name="P:Opc.Hda.Attribute.Description">
            <summary>
            A short description of the attribute.
            </summary>
        </member>
        <member name="P:Opc.Hda.Attribute.DataType">
            <summary>
            The data type of the attribute.
            </summary>
        </member>
        <member name="M:Opc.Hda.Attribute.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Opc.Hda.Attribute.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.AttributeCollection">
            <summary>
            The description of an item attribute supported by the server.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any Attributes contained in the collection.
            </summary>
            <param name="collection">A collection containing attribute descriptions.</param>
        </member>
        <member name="P:Opc.Hda.AttributeCollection.Item(System.Int32)">
            <summary>
            Returns the attribute at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeCollection.Find(System.Int32)">
            <summary>
            Returns the first attribute with the specified id.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any attributes contained in the collection.
            </summary>
            <param name="collection">A collection containing attribute descriptions.</param>
        </member>
        <member name="M:Opc.Hda.AttributeCollection.Clear">
            <summary>
            Removes all attributes in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.AttributeCollection.CopyTo(Opc.Hda.Attribute[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.AttributeCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Opc.Hda.AttributeValue">
            <summary>
            The value of an attribute at a point in time.
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeValue.Value">
            <summary>
            The value of the data.
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeValue.Timestamp">
            <summary>
            The timestamp associated with the value.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.AttributeValueCollection">
            <summary>
            The set of values for an item attribute over a period of time.
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.AttributeID">
            <summary>
            A unique identifier for the attribute.
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.#ctor(Opc.Hda.Attribute)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.#ctor(Opc.Hda.AttributeValueCollection)">
            <summary>
            Initializes object with the specified AttributeValueCollection object.
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.CopyTo(Opc.Hda.AttributeValue[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Hda.AttributeValueCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Insert(System.Int32,Opc.Hda.AttributeValue)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Remove(Opc.Hda.AttributeValue)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Contains(Opc.Hda.AttributeValue)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.IndexOf(Opc.Hda.AttributeValue)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.AttributeValueCollection.Add(Opc.Hda.AttributeValue)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Hda.ItemAttributeCollection">
            <summary>
            A collection of item attribute values passed to write or returned from a read operation.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.#ctor(Opc.Hda.ItemAttributeCollection)">
            <summary>
            Initializes object with the specified ItemAttributeCollection object.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.StartTime">
            <summary>
            The actual start time used by a server while processing a request.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.EndTime">
            <summary>
            The actual end time used by a server while processing a request.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.CopyTo(Opc.Hda.AttributeValueCollection[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Hda.ItemAttributeCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Insert(System.Int32,Opc.Hda.AttributeValueCollection)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Remove(Opc.Hda.AttributeValueCollection)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Contains(Opc.Hda.AttributeValueCollection)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.IndexOf(Opc.Hda.AttributeValueCollection)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ItemAttributeCollection.Add(Opc.Hda.AttributeValueCollection)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Hda.AttributeID">
            <summary>
            Defines constants for well-known item attributes.
            </summary>
        </member>
        <member name="F:Opc.Hda.AttributeID.DATA_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.DESCRIPTION">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.ENG_UNITS">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.STEPPED">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.ARCHIVING">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.DERIVE_EQUATION">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.NODE_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.PROCESS_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.SOURCE_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.SOURCE_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.NORMAL_MAXIMUM">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.NORMAL_MINIMUM">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.ITEMID">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.MAX_TIME_INT">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.MIN_TIME_INT">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.EXCEPTION_DEV">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.EXCEPTION_DEV_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.HIGH_ENTRY_LIMIT">
            <remarks/>
        </member>
        <member name="F:Opc.Hda.AttributeID.LOW_ENTRY_LIMIT">
            <remarks/>
        </member>
        <member name="T:Opc.Hda.IBrowser">
            <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
        </member>
        <member name="P:Opc.Hda.IBrowser.Filters">
            <summary>
            Returns the set of attribute filters used by the browser. 
            </summary>
        </member>
        <member name="M:Opc.Hda.IBrowser.Browse(Opc.ItemIdentifier)">
            <summary>
            Browses the server's address space at the specified branch.
            </summary>
            <param name="itemID">The item id of the branch to search.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Opc.Hda.IBrowser.Browse(Opc.ItemIdentifier,System.Int32,Opc.IBrowsePosition@)">
            <summary>
            Begins a browsing the server's address space at the specified branch.
            </summary>
            <param name="itemID">The item id of the branch to search.</param>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The position object used to continue a browse operation.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="M:Opc.Hda.IBrowser.BrowseNext(System.Int32,Opc.IBrowsePosition@)">
            <summary>
            Continues browsing the server's address space at the specified position.
            </summary>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="position">The position object used to continue a browse operation.</param>
            <returns>The set of elements that meet the filter criteria.</returns>
        </member>
        <member name="T:Opc.Hda.BrowsePosition">
            <summary>
            Stores the state of a browse operation.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowsePosition.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowsePosition.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowsePosition.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowsePosition.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.BrowseElement">
            <summary>
            Contains the description of an element in the server's address space.
            </summary>
        </member>
        <member name="P:Opc.Hda.BrowseElement.Name">
            <summary>
            The name of element within its branch.
            </summary>
        </member>
        <member name="P:Opc.Hda.BrowseElement.IsItem">
            <summary>
            Whether the element is an item with associated data in the archive.
            </summary>
        </member>
        <member name="P:Opc.Hda.BrowseElement.HasChildren">
            <summary>
            Whether the element has child elements.
            </summary>
        </member>
        <member name="P:Opc.Hda.BrowseElement.Attributes">
            <summary>
            The current values of any attributes associated with the item.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowseElement.Clone">
            <summary>
            Creates a deepcopy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.Operator">
            <summary>
            The set of possible operators to use when applying an item attribute filter.
            </summary>
        </member>
        <member name="F:Opc.Hda.Operator.Equal">
            <summary>
            The attribute value is equal (or matches) to the filter.
            </summary>
        </member>
        <member name="F:Opc.Hda.Operator.Less">
            <summary>
            The attribute value is less than the filter.
            </summary>
        </member>
        <member name="F:Opc.Hda.Operator.LessEqual">
            <summary>
            The attribute value is less than or equal to the filter.
            </summary>
        </member>
        <member name="F:Opc.Hda.Operator.Greater">
            <summary>
            The attribute value is greater than the filter.
            </summary>
        </member>
        <member name="F:Opc.Hda.Operator.GreaterEqual">
            <summary>
            The attribute value is greater than or equal to the filter.
            </summary>
        </member>
        <member name="F:Opc.Hda.Operator.NotEqual">
            <summary>
            The attribute value is not equal (or does not match)to the filter.
            </summary>
        </member>
        <member name="T:Opc.Hda.BrowseFilter">
            <summary>
            Defines a filter to apply to an item attribute when browsing.
            </summary>
        </member>
        <member name="P:Opc.Hda.BrowseFilter.AttributeID">
            <summary>
            The attribute id to use when filtering.
            </summary>
        </member>
        <member name="P:Opc.Hda.BrowseFilter.Operator">
            <summary>
            The operator to use when testing if the filter condition is met.
            </summary>
        </member>
        <member name="P:Opc.Hda.BrowseFilter.FilterValue">
            <summary>
            The value of the filter. The '*' and '?' wildcard characters are permitted. 
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowseFilter.Clone">
            <summary>
            Creates a deepcopy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.BrowseFilterCollection">
            <summary>
            A collection of attribute filters used when browsing the server address space.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowseFilterCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowseFilterCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any BrowseFilter contained in the collection.
            </summary>
            <param name="collection">A collection containing browse filters.</param>
        </member>
        <member name="P:Opc.Hda.BrowseFilterCollection.Item(System.Int32)">
            <summary>
            Returns the browse filter at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowseFilterCollection.Find(System.Int32)">
            <summary>
            Returns the browse filter for the specified attribute id.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowseFilterCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any attribute values contained in the collection.
            </summary>
            <param name="collection">A collection containing attribute values.</param>
        </member>
        <member name="M:Opc.Hda.BrowseFilterCollection.Clear">
            <summary>
            Removes all attribute values in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowseFilterCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.BrowseFilterCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.BrowseFilterCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowseFilterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects in to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.BrowseFilterCollection.CopyTo(Opc.Hda.BrowseFilter[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.BrowseFilterCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.BrowseFilterCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Opc.Hda.IServer">
            <summary>
            Defines functionality that is common to all OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Hda.IServer.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.GetAttributes">
            <summary>
            Returns the item attributes supported by the server.
            </summary>
            <returns>The a set of item attributes and their descriptions.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.GetAggregates">
            <summary>
            Returns the aggregates supported by the server.
            </summary>
            <returns>The a set of aggregates and their descriptions.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.CreateBrowser(Opc.Hda.BrowseFilter[],Opc.ResultID[]@)">
            <summary>
            Creates a object used to browse the server address space.
            </summary>
            <param name="filters">The set of attribute filters to use when browsing.</param>
            <param name="results">A result code for each individual filter.</param>
            <returns>A browser object that must be released by calling Dispose().</returns>
        </member>
        <member name="M:Opc.Hda.IServer.CreateItems(Opc.ItemIdentifier[])">
            <summary>
            Creates a set of items.
            </summary>
            <param name="items">The identifiers for the items to create.</param>
            <returns>The results for each item containing the server handle and result code.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReleaseItems(Opc.ItemIdentifier[])">
            <summary>
            Releases a set of previously created items.
            </summary>
            <param name="items">The server handles for the items to release.</param>
            <returns>The results for each item containing the result code.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ValidateItems(Opc.ItemIdentifier[])">
            <summary>
            Validates a set of items.
            </summary>
            <param name="items">The identifiers for the items to validate.</param>
            <returns>The results for each item containing the result code.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadRaw(Opc.Hda.Time,Opc.Hda.Time,System.Int32,System.Boolean,Opc.ItemIdentifier[])">
            <summary>
            Reads raw (unprocessed) data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="includeBounds">Whether the bounding item values should be returned.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadRaw(Opc.Hda.Time,Opc.Hda.Time,System.Int32,System.Boolean,Opc.ItemIdentifier[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read raw data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="includeBounds">Whether the bounding item values should be returned.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.AdviseRaw(Opc.Hda.Time,System.Decimal,Opc.ItemIdentifier[],System.Object,Opc.Hda.DataUpdateEventHandler,Opc.IRequest@)">
            <summary>
            Requests that the server periodically send notifications when new data becomes available for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="updateInterval">The frequency, in seconds, that the server should check for new data.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.PlaybackRaw(Opc.Hda.Time,Opc.Hda.Time,System.Int32,System.Decimal,System.Decimal,Opc.ItemIdentifier[],System.Object,Opc.Hda.DataUpdateEventHandler,Opc.IRequest@)">
            <summary>
            Begins the playback raw data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>		
            <param name="updateInterval">The frequency, in seconds, that the server send data.</param>
            <param name="playbackDuration">The duration, in seconds, of the timespan returned with each update.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadProcessed(Opc.Hda.Time,Opc.Hda.Time,System.Decimal,Opc.Hda.Item[])">
            <summary>
            Reads processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadProcessed(Opc.Hda.Time,Opc.Hda.Time,System.Decimal,Opc.Hda.Item[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.AdviseProcessed(Opc.Hda.Time,System.Decimal,System.Int32,Opc.Hda.Item[],System.Object,Opc.Hda.DataUpdateEventHandler,Opc.IRequest@)">
            <summary>
            Requests that the server periodically send notifications when new data becomes available for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="numberOfIntervals">The number of resample intervals that the server should return in each callback.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.PlaybackProcessed(Opc.Hda.Time,Opc.Hda.Time,System.Decimal,System.Int32,System.Decimal,Opc.Hda.Item[],System.Object,Opc.Hda.DataUpdateEventHandler,Opc.IRequest@)">
            <summary>
            Begins the playback of processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="numberOfIntervals">The number of resample intervals that the server should return in each callback.</param>
            <param name="updateInterval">The frequency, in seconds, that the server send data.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadAtTime(System.DateTime[],Opc.ItemIdentifier[])">
            <summary>
            Reads data from the historian database for a set of items at specific times.
            </summary>
            <param name="timestamps">The set of timestamps to use when reading items values.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadAtTime(System.DateTime[],Opc.ItemIdentifier[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read item values at specific times.
            </summary>
            <param name="timestamps">The set of timestamps to use when reading items values.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadModified(Opc.Hda.Time,Opc.Hda.Time,System.Int32,Opc.ItemIdentifier[])">
            <summary>
            Reads item values that have been deleted or replaced.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadModified(Opc.Hda.Time,Opc.Hda.Time,System.Int32,Opc.ItemIdentifier[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read item values that have been deleted or replaced.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadAttributes(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier,System.Int32[])">
            <summary>
            Reads the current or historical values for the attributes of an item.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="item">The item to read (must include the server handle).</param>
            <param name="attributeIDs">The attributes to read.</param>
            <returns>A set of attribute values for each requested attribute.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadAttributes(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier,System.Int32[],System.Object,Opc.Hda.ReadAttributesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read the attributes of an item.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="item">The item to read (must include the server handle).</param>
            <param name="attributeIDs">The attributes to read.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the attribute ids.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadAnnotations(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier[])">
            <summary>
            Reads any annotations for an item within the a time interval.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of annotations within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.ReadAnnotations(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier[],System.Object,Opc.Hda.ReadAnnotationsEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read the annotations for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.InsertAnnotations(Opc.Hda.AnnotationValueCollection[])">
            <summary>
            Inserts annotations for one or more items.
            </summary>
            <param name="items">A list of annotations to add for each item (must include the server handle).</param>
            <returns>The results of the insert operation for each annotation set.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.InsertAnnotations(Opc.Hda.AnnotationValueCollection[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to inserts annotations for one or more items.
            </summary>
            <param name="items">A list of annotations to add for each item (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.Insert(Opc.Hda.ItemValueCollection[],System.Boolean)">
            <summary>
            Inserts the values into the history database for one or more items. 
            </summary>
            <param name="items">The set of values to insert.</param>
            <param name="replace">Whether existing values should be replaced.</param>
            <returns></returns>
        </member>
        <member name="M:Opc.Hda.IServer.Insert(Opc.Hda.ItemValueCollection[],System.Boolean,System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to inserts values for one or more items.
            </summary>
            <param name="items">The set of values to insert.</param>
            <param name="replace">Whether existing values should be replaced.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.Replace(Opc.Hda.ItemValueCollection[])">
            <summary>
            Replace the values into the history database for one or more items. 
            </summary>
            <param name="items">The set of values to replace.</param>
            <returns></returns>
        </member>
        <member name="M:Opc.Hda.IServer.Replace(Opc.Hda.ItemValueCollection[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to replace values for one or more items.
            </summary>
            <param name="items">The set of values to replace.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.Delete(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier[])">
            <summary>
            Deletes the values with the specified time domain for one or more items.
            </summary>
            <param name="startTime">The beginning of the history period to delete.</param>
            <param name="endTime">The end of the history period to be delete.</param>
            <param name="items">The set of items to delete (must include the server handle).</param>
            <returns>The results of the delete operation for each item.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.Delete(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to delete values for one or more items.
            </summary>
            <param name="startTime">The beginning of the history period to delete.</param>
            <param name="endTime">The end of the history period to be delete.</param>
            <param name="items">The set of items to delete (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.DeleteAtTime(Opc.Hda.ItemTimeCollection[])">
            <summary>
            Deletes the values at the specified times for one or more items. 
            </summary>
            <param name="items">The set of timestamps to delete for one or more items.</param>
            <returns>The results of the operation for each timestamp.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.DeleteAtTime(Opc.Hda.ItemTimeCollection[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to delete values for one or more items at a specified times.
            </summary>
            <param name="items">The set of timestamps to delete for one or more items.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.IServer.CancelRequest(Opc.IRequest)">
            <summary>
            Cancels an asynchronous request.
            </summary>
            <param name="request">The state object for the request to cancel.</param>
        </member>
        <member name="M:Opc.Hda.IServer.CancelRequest(Opc.IRequest,Opc.Hda.CancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous request.
            </summary>
            <param name="request">The state object for the request to cancel.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
        </member>
        <member name="T:Opc.Hda.ServerState">
            <summary>
            The set of possible server states.
            </summary>
        </member>
        <member name="F:Opc.Hda.ServerState.Up">
            <summary>
            The historian is running.
            </summary>
        </member>
        <member name="F:Opc.Hda.ServerState.Down">
            <summary>
            The historian is not running.
            </summary>
        </member>
        <member name="F:Opc.Hda.ServerState.Indeterminate">
            <summary>
            The status of the historian is indeterminate.
            </summary>
        </member>
        <member name="T:Opc.Hda.ServerStatus">
            <summary>
            Contains properties that describe the current status of an OPC server.
            </summary>
        </member>
        <member name="P:Opc.Hda.ServerStatus.VendorInfo">
            <summary>
            The vendor name and product name for the server.
            </summary>
        </member>
        <member name="P:Opc.Hda.ServerStatus.ProductVersion">
            <summary>
            A string that contains the server software version number.
            </summary>
        </member>
        <member name="P:Opc.Hda.ServerStatus.ServerState">
            <summary>
            The current state of the server.
            </summary>
        </member>
        <member name="P:Opc.Hda.ServerStatus.StatusInfo">
            <summary>
            A string that describes the current server state.
            </summary>
        </member>
        <member name="P:Opc.Hda.ServerStatus.StartTime">
            <summary>
            The UTC time when the server started.
            </summary>
        </member>
        <member name="P:Opc.Hda.ServerStatus.CurrentTime">
            <summary>
            Th current UTC time at the server.
            </summary>
        </member>
        <member name="P:Opc.Hda.ServerStatus.MaxReturnValues">
            <summary>
            The maximum number of values that can be returned by the server on a per item basis. 
            </summary>
        </member>
        <member name="M:Opc.Hda.ServerStatus.Clone">
            <summary>
            Creates a deepcopy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.CallbackExceptionEventHandler">
            <summary>
            Used to receive notifications when an exception occurs while processing a callback.
            </summary>
        </member>
        <member name="T:Opc.Hda.DataUpdateEventHandler">
            <summary>
            Used to receive data update notifications.
            </summary>
        </member>
        <member name="T:Opc.Hda.ReadValuesEventHandler">
            <summary>
            Used to receive notifications when a read values request completes.
            </summary>
        </member>
        <member name="T:Opc.Hda.ReadAttributesEventHandler">
            <summary>
            Used to receive notifications when a read attributes request completes.
            </summary>
        </member>
        <member name="T:Opc.Hda.ReadAnnotationsEventHandler">
            <summary>
            Used to receive notifications when a read annotations request completes.
            </summary>
        </member>
        <member name="T:Opc.Hda.UpdateCompleteEventHandler">
            <summary>
            Used to receive notifications when an update request completes.
            </summary>
        </member>
        <member name="T:Opc.Hda.CancelCompleteEventHandler">
            <summary>
            Used to receive notifications when a request is cancelled.
            </summary>
        </member>
        <member name="T:Opc.Hda.Item">
            <summary>
            Describes an item used in a request for processed or raw data.
            </summary>
        </member>
        <member name="P:Opc.Hda.Item.AggregateID">
            <summary>
            The aggregate to use to process the data.
            </summary>
        </member>
        <member name="M:Opc.Hda.Item.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.Item.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Hda.Item.#ctor(Opc.Hda.Item)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="T:Opc.Hda.ItemResult">
            <summary>
            Describes the results for an item used in a read processed or raw data request.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemResult.#ctor">
            <summary>
            Initialize object with default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemResult.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initialize object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemResult.#ctor(Opc.Hda.Item)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemResult.#ctor(Opc.Hda.ItemResult)">
            <summary>
            Initialize object with the specified ItemResult object.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemResult.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.Hda.ItemCollection">
            <summary>
            A collection of items.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemCollection.Item(System.Int32)">
            <summary>
             Gets the item at the specified index.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemCollection.Item(Opc.ItemIdentifier)">
            <summary>
            Gets the first item with the specified item id.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemCollection.#ctor(Opc.Hda.ItemCollection)">
            <summary>
            Initializes object with the specified ResultCollection object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.ItemCollection.CopyTo(Opc.Hda.Item[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.ItemCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Hda.ItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Hda.ItemCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Insert(System.Int32,Opc.Hda.Item)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Remove(Opc.Hda.Item)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Contains(Opc.Hda.Item)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ItemCollection.IndexOf(Opc.Hda.Item)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ItemCollection.Add(Opc.Hda.Item)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Hda.Quality">
            <summary>
            Defines possible HDA quality codes.
            </summary>
        </member>
        <member name="F:Opc.Hda.Quality.ExtraData">
            <summary>
            More than one piece of data that may be hidden exists at same timestamp.
            </summary>
        </member>
        <member name="F:Opc.Hda.Quality.Interpolated">
            <summary>
            Interpolated data value.
            </summary>
        </member>
        <member name="F:Opc.Hda.Quality.Raw">
            <summary>
            Raw data
            </summary>
        </member>
        <member name="F:Opc.Hda.Quality.Calculated">
            <summary>
            Calculated data value, as would be returned from a ReadProcessed call.
            </summary>
        </member>
        <member name="F:Opc.Hda.Quality.NoBound">
            <summary>
            No data found to provide upper or lower bound value. 
            </summary>
        </member>
        <member name="F:Opc.Hda.Quality.NoData">
            <summary>
            Bad No data collected. Archiving not active (for item or all items).
            </summary>
        </member>
        <member name="F:Opc.Hda.Quality.DataLost">
            <summary>
            Collection started/stopped/lost.
            </summary>
        </member>
        <member name="F:Opc.Hda.Quality.Conversion">
            <summary>
            Scaling or conversion error. 
            </summary>
        </member>
        <member name="F:Opc.Hda.Quality.Partial">
            <summary>
            Aggregate value is for an incomplete interval. 
            </summary>
        </member>
        <member name="T:Opc.Hda.ItemValue">
            <summary>
            A value of an item at in instant of time.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValue.Value">
            <summary>
            The value of the item.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValue.Timestamp">
            <summary>
            The timestamp associated with the value.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValue.Quality">
            <summary>
            The quality associated with the value when it was acquired from the data source.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValue.HistorianQuality">
            <summary>
            The quality associated with the value when it was retrieved from the hiatorian database.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValue.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.IActualTime">
            <summary>
            A interface used to actual time information associated with a result.
            </summary>
        </member>
        <member name="P:Opc.Hda.IActualTime.StartTime">
            <summary>
            The actual start time used by a server while processing a request.
            </summary>
        </member>
        <member name="P:Opc.Hda.IActualTime.EndTime">
            <summary>
            The actual end time used by a server while processing a request.
            </summary>
        </member>
        <member name="T:Opc.Hda.ItemValueCollection">
            <summary>
            A collection of item values passed to write or returned from a read operation.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.#ctor(Opc.Hda.Item)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.#ctor(Opc.Hda.ItemValueCollection)">
            <summary>
            Initializes object with the specified ItemValueCollection object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.AddRange(Opc.Hda.ItemValueCollection)">
            <summary>
            Appends another value collection to the collection.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.StartTime">
            <summary>
            The actual start time used by a server while processing a request.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.EndTime">
            <summary>
            The actual end time used by a server while processing a request.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.CopyTo(Opc.Hda.ItemValue[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Hda.ItemValueCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Insert(System.Int32,Opc.Hda.ItemValue)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Remove(Opc.Hda.ItemValue)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Contains(Opc.Hda.ItemValue)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.IndexOf(Opc.Hda.ItemValue)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ItemValueCollection.Add(Opc.Hda.ItemValue)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Hda.ModifiedValue">
            <summary>
            A value of an item at in instant of time that has be deleted or replaced.
            </summary>
        </member>
        <member name="P:Opc.Hda.ModifiedValue.ModificationTime">
            <summary>
            The time when the value was deleted or replaced.
            </summary>
        </member>
        <member name="P:Opc.Hda.ModifiedValue.EditType">
            <summary>
            Whether the value was deleted or replaced.
            </summary>
        </member>
        <member name="P:Opc.Hda.ModifiedValue.User">
            <summary>
            The user who modified the item value.
            </summary>
        </member>
        <member name="T:Opc.Hda.ModifiedValueCollection">
            <summary>
            A collection of modified item values with a result code indicating the results of a read operation.
            </summary>
        </member>
        <member name="P:Opc.Hda.ModifiedValueCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ModifiedValueCollection.#ctor">
            <summary>
            Initialize object with default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.ModifiedValueCollection.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initialize object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ModifiedValueCollection.#ctor(Opc.Hda.Item)">
            <summary>
            Initializes object with the specified Item object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ModifiedValueCollection.#ctor(Opc.Hda.ItemValueCollection)">
            <summary>
            Initializes object with the specified ItemValueCollection object.
            </summary>
        </member>
        <member name="T:Opc.Hda.EditType">
            <summary>
            The types of modifications that can be applied to an item.
            </summary>
        </member>
        <member name="F:Opc.Hda.EditType.Insert">
            <summary>
            The item was inserted.
            </summary>
        </member>
        <member name="F:Opc.Hda.EditType.Replace">
            <summary>
            The item was replaced.
            </summary>
        </member>
        <member name="F:Opc.Hda.EditType.InsertReplace">
            <summary>
            The item was inserted or replaced during an insert/replace operation.
            </summary>
        </member>
        <member name="F:Opc.Hda.EditType.Delete">
            <summary>
            The item was deleted.
            </summary>
        </member>
        <member name="T:Opc.Hda.Result">
            <summary>
            A result associated with a single item value.
            </summary>
        </member>
        <member name="M:Opc.Hda.Result.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.Result.#ctor(Opc.ResultID)">
            <summary>
            Initializes the object with the specified result id.
            </summary>
        </member>
        <member name="M:Opc.Hda.Result.#ctor(Opc.IResult)">
            <summary>
            Initializes the object with the specified result object.
            </summary>
        </member>
        <member name="P:Opc.Hda.Result.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.Hda.Result.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="M:Opc.Hda.Result.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.Hda.ResultCollection">
            <summary>
            A collection of results passed to write or returned from an insert, replace or delete operation.
            </summary>
        </member>
        <member name="P:Opc.Hda.ResultCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ResultCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.ResultCollection.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ResultCollection.#ctor(Opc.Hda.ResultCollection)">
            <summary>
            Initializes object with the specified ResultCollection object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.ResultCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.ResultCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ResultCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.ResultCollection.CopyTo(Opc.Hda.Result[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.ResultCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.ResultCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Hda.ResultCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Hda.ResultCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.ResultCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Hda.ResultCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Hda.ResultCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Insert(System.Int32,Opc.Hda.Result)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Remove(Opc.Hda.Result)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Contains(Opc.Hda.Result)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ResultCollection.IndexOf(Opc.Hda.Result)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ResultCollection.Add(Opc.Hda.Result)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Hda.ItemTimeCollection">
            <summary>
            A collection of results passed to write or returned from an insert, replace or delete operation.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemTimeCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.#ctor(Opc.Hda.ItemTimeCollection)">
            <summary>
            Initializes object with the specified ItemTimeCollection object.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemTimeCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemTimeCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.CopyTo(System.DateTime[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.ItemTimeCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Hda.ItemTimeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Hda.ItemTimeCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Hda.ItemTimeCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Insert(System.Int32,System.DateTime)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Remove(System.DateTime)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Contains(System.DateTime)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.IndexOf(System.DateTime)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.ItemTimeCollection.Add(System.DateTime)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.Hda.Server">
            <summary>
            An in-process object used to access OPC Data Access servers.
            </summary>
        </member>
        <member name="M:Opc.Hda.Server.#ctor(Opc.Factory,Opc.URL)">
            <summary>
            Initializes the object with a factory and a default URL.
            </summary>
            <param name="factory">The Opc.Factory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="P:Opc.Hda.Server.Attributes">
            <summary>
            Returns a collection of item attributes supported by the server.
            </summary>
        </member>
        <member name="P:Opc.Hda.Server.Aggregates">
            <summary>
            Returns a collection of aggregates supported by the server.
            </summary>
        </member>
        <member name="P:Opc.Hda.Server.Items">
            <summary>
            Returns a collection of items with server handles assigned to them.
            </summary>
        </member>
        <member name="P:Opc.Hda.Server.Trends">
            <summary>
            Returns a collection of trends created for the server.
            </summary>
        </member>
        <member name="M:Opc.Hda.Server.Connect(Opc.URL,Opc.ConnectData)">
            <summary>
            Connects to the server with the specified URL and credentials.
            </summary>
        </member>
        <member name="M:Opc.Hda.Server.Disconnect">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="M:Opc.Hda.Server.GetStatus">
            <summary>
            Returns the current server status.
            </summary>
            <returns>The current server status.</returns>
        </member>
        <member name="M:Opc.Hda.Server.GetAttributes">
            <summary>
            Returns the item attributes supported by the server.
            </summary>
            <returns>The a set of item attributes and their descriptions.</returns>
        </member>
        <member name="M:Opc.Hda.Server.GetAggregates">
            <summary>
            Returns the aggregates supported by the server.
            </summary>
            <returns>The a set of aggregates and their descriptions.</returns>
        </member>
        <member name="M:Opc.Hda.Server.CreateBrowser(Opc.Hda.BrowseFilter[],Opc.ResultID[]@)">
            <summary>
            Creates a object used to browse the server address space.
            </summary>
            <param name="filters">The set of attribute filters to use when browsing.</param>
            <param name="results">A result code for each individual filter.</param>
            <returns>A browser object that must be released by calling Dispose().</returns>
        </member>
        <member name="M:Opc.Hda.Server.CreateItems(Opc.ItemIdentifier[])">
            <summary>
            Creates a set of items.
            </summary>
            <param name="items">The identifiers for the items to create.</param>
            <returns>The results for each item containing the server handle and result code.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReleaseItems(Opc.ItemIdentifier[])">
            <summary>
            Releases a set of previously created items.
            </summary>
            <param name="items">The server handles for the items to release.</param>
            <returns>The results for each item containing the result code.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ValidateItems(Opc.ItemIdentifier[])">
            <summary>
            Validates a set of items.
            </summary>
            <param name="items">The identifiers for the items to validate.</param>
            <returns>The results for each item containing the result code.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadRaw(Opc.Hda.Time,Opc.Hda.Time,System.Int32,System.Boolean,Opc.ItemIdentifier[])">
            <summary>
            Reads raw (unprocessed) data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="includeBounds">Whether the bounding item values should be returned.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadRaw(Opc.Hda.Time,Opc.Hda.Time,System.Int32,System.Boolean,Opc.ItemIdentifier[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read raw data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="includeBounds">Whether the bounding item values should be returned.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.AdviseRaw(Opc.Hda.Time,System.Decimal,Opc.ItemIdentifier[],System.Object,Opc.Hda.DataUpdateEventHandler,Opc.IRequest@)">
            <summary>
            Requests that the server periodically send notifications when new data becomes available for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="updateInterval">The frequency, in seconds, that the server should check for new data.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.PlaybackRaw(Opc.Hda.Time,Opc.Hda.Time,System.Int32,System.Decimal,System.Decimal,Opc.ItemIdentifier[],System.Object,Opc.Hda.DataUpdateEventHandler,Opc.IRequest@)">
            <summary>
            Begins the playback raw data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>		
            <param name="updateInterval">The frequency, in seconds, that the server send data.</param>
            <param name="playbackDuration">The duration, in seconds, of the timespan returned with each update.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadProcessed(Opc.Hda.Time,Opc.Hda.Time,System.Decimal,Opc.Hda.Item[])">
            <summary>
            Reads processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadProcessed(Opc.Hda.Time,Opc.Hda.Time,System.Decimal,Opc.Hda.Item[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.AdviseProcessed(Opc.Hda.Time,System.Decimal,System.Int32,Opc.Hda.Item[],System.Object,Opc.Hda.DataUpdateEventHandler,Opc.IRequest@)">
            <summary>
            Requests that the server periodically send notifications when new data becomes available for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="numberOfIntervals">The number of resample intervals that the server should return in each callback.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.PlaybackProcessed(Opc.Hda.Time,Opc.Hda.Time,System.Decimal,System.Int32,System.Decimal,Opc.Hda.Item[],System.Object,Opc.Hda.DataUpdateEventHandler,Opc.IRequest@)">
            <summary>
            Begins the playback of processed data from the historian database for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="resampleInterval">The interval between returned values.</param>
            <param name="numberOfIntervals">The number of resample intervals that the server should return in each callback.</param>
            <param name="updateInterval">The frequency, in seconds, that the server send data.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadAtTime(System.DateTime[],Opc.ItemIdentifier[])">
            <summary>
            Reads data from the historian database for a set of items at specific times.
            </summary>
            <param name="timestamps">The set of timestamps to use when reading items values.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadAtTime(System.DateTime[],Opc.ItemIdentifier[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read item values at specific times.
            </summary>
            <param name="timestamps">The set of timestamps to use when reading items values.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadModified(Opc.Hda.Time,Opc.Hda.Time,System.Int32,Opc.ItemIdentifier[])">
            <summary>
            Reads item values that have been deleted or replaced.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of values, qualities and timestamps within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadModified(Opc.Hda.Time,Opc.Hda.Time,System.Int32,Opc.ItemIdentifier[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read item values that have been deleted or replaced.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="maxValues">The number of values to be read for each item.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadAttributes(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier,System.Int32[])">
            <summary>
            Reads the current or historical values for the attributes of an item.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="item">The item to read (must include the server handle).</param>
            <param name="attributeIDs">The attributes to read.</param>
            <returns>A set of attribute values for each requested attribute.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadAttributes(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier,System.Int32[],System.Object,Opc.Hda.ReadAttributesEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read the attributes of an item.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="item">The item to read (must include the server handle).</param>
            <param name="attributeIDs">The attributes to read.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the attribute ids.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadAnnotations(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier[])">
            <summary>
            Reads any annotations for an item within the a time interval.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <returns>A set of annotations within the requested time range for each item.</returns>
        </member>
        <member name="M:Opc.Hda.Server.ReadAnnotations(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier[],System.Object,Opc.Hda.ReadAnnotationsEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to read the annotations for a set of items.
            </summary>
            <param name="startTime">The beginning of the history period to read.</param>
            <param name="endTime">The end of the history period to be read.</param>
            <param name="items">The set of items to read (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.InsertAnnotations(Opc.Hda.AnnotationValueCollection[])">
            <summary>
            Inserts annotations for one or more items.
            </summary>
            <param name="items">A list of annotations to add for each item (must include the server handle).</param>
            <returns>The results of the insert operation for each annotation set.</returns>
        </member>
        <member name="M:Opc.Hda.Server.InsertAnnotations(Opc.Hda.AnnotationValueCollection[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to inserts annotations for one or more items.
            </summary>
            <param name="items">A list of annotations to add for each item (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.Insert(Opc.Hda.ItemValueCollection[],System.Boolean)">
            <summary>
            Inserts the values into the history database for one or more items. 
            </summary>
            <param name="items">The set of values to insert.</param>
            <param name="replace">Whether existing values should be replaced.</param>
            <returns></returns>
        </member>
        <member name="M:Opc.Hda.Server.Insert(Opc.Hda.ItemValueCollection[],System.Boolean,System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to inserts values for one or more items.
            </summary>
            <param name="items">The set of values to insert.</param>
            <param name="replace">Whether existing values should be replaced.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.Replace(Opc.Hda.ItemValueCollection[])">
            <summary>
            Replace the values into the history database for one or more items. 
            </summary>
            <param name="items">The set of values to replace.</param>
            <returns></returns>
        </member>
        <member name="M:Opc.Hda.Server.Replace(Opc.Hda.ItemValueCollection[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to replace values for one or more items.
            </summary>
            <param name="items">The set of values to replace.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.Delete(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier[])">
            <summary>
            Deletes the values with the specified time domain for one or more items.
            </summary>
            <param name="startTime">The beginning of the history period to delete.</param>
            <param name="endTime">The end of the history period to be delete.</param>
            <param name="items">The set of items to delete (must include the server handle).</param>
            <returns>The results of the delete operation for each item.</returns>
        </member>
        <member name="M:Opc.Hda.Server.Delete(Opc.Hda.Time,Opc.Hda.Time,Opc.ItemIdentifier[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to delete values for one or more items.
            </summary>
            <param name="startTime">The beginning of the history period to delete.</param>
            <param name="endTime">The end of the history period to be delete.</param>
            <param name="items">The set of items to delete (must include the server handle).</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.DeleteAtTime(Opc.Hda.ItemTimeCollection[])">
            <summary>
            Deletes the values at the specified times for one or more items. 
            </summary>
            <param name="items">The set of timestamps to delete for one or more items.</param>
            <returns>The results of the operation for each timestamp.</returns>
        </member>
        <member name="M:Opc.Hda.Server.DeleteAtTime(Opc.Hda.ItemTimeCollection[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Sends an asynchronous request to delete values for one or more items at a specified times.
            </summary>
            <param name="items">The set of timestamps to delete for one or more items.</param>
            <param name="requestHandle">An identifier for the request assigned by the caller.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
            <param name="request">An object that contains the state of the request (used to cancel the request).</param>
            <returns>A set of results containing any errors encountered when the server validated the items.</returns>
        </member>
        <member name="M:Opc.Hda.Server.CancelRequest(Opc.IRequest)">
            <summary>
            Cancels an asynchronous request.
            </summary>
            <param name="request">The state object for the request to cancel.</param>
        </member>
        <member name="M:Opc.Hda.Server.CancelRequest(Opc.IRequest,Opc.Hda.CancelCompleteEventHandler)">
            <summary>
            Cancels an asynchronous request.
            </summary>
            <param name="request">The state object for the request to cancel.</param>
            <param name="callback">A delegate used to receive notifications when the request completes.</param>
        </member>
        <member name="T:Opc.Hda.Server.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Hda.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Hda.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Hda.Server.Clone">
            <summary>
            Returns an unconnected copy of the server with the same URL. 
            </summary>
        </member>
        <member name="T:Opc.Hda.GetStatusDelegate">
            <summary>
            The asynchronous delegate for GetStatus.
            </summary>
        </member>
        <member name="T:Opc.Hda.Time">
            <summary>
            A time specified as either an absolute or relative value.
            </summary>
        </member>
        <member name="M:Opc.Hda.Time.#ctor">
            <summary>
            Initializes the object with its default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.Time.#ctor(System.DateTime)">
            <summary>
            Initializes the object with an absolute time.
            </summary>
            <param name="time">The absolute time.</param>
        </member>
        <member name="M:Opc.Hda.Time.#ctor(System.String)">
            <summary>
            Initializes the object with a relative time.
            </summary>
            <param name="time">The relative time.</param>
        </member>
        <member name="P:Opc.Hda.Time.IsRelative">
            <summary>
            Whether the time is a relative or absolute time.
            </summary>
        </member>
        <member name="P:Opc.Hda.Time.AbsoluteTime">
            <summary>
            The time as abolute UTC value.
            </summary>
        </member>
        <member name="P:Opc.Hda.Time.BaseTime">
            <summary>
            The base for a relative time value.
            </summary>
        </member>
        <member name="P:Opc.Hda.Time.Offsets">
            <summary>
            The set of offsets to be applied to the base of a relative time.
            </summary>
        </member>
        <member name="M:Opc.Hda.Time.ResolveTime">
            <summary>
            Converts a relative time to an absolute time by using the system clock.
            </summary>
        </member>
        <member name="M:Opc.Hda.Time.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:Opc.Hda.Time.Parse(System.String)">
            <summary>
            Parses a string representation of a time.
            </summary>
            <param name="buffer">The string representation to parse.</param>
            <returns>A Time object initailized with the string.</returns>
        </member>
        <member name="M:Opc.Hda.Time.BaseTypeToString(Opc.Hda.RelativeTime)">
            <summary>
            Converts a base time to a string token.
            </summary>
            <param name="baseTime">The base time value to convert.</param>
            <returns>The string token representing the base time.</returns>
        </member>
        <member name="T:Opc.Hda.RelativeTime">
            <summary>
            Possible base or offset types for relative times.
            </summary>
        </member>
        <member name="F:Opc.Hda.RelativeTime.Now">
            <summary>
            Start from the current time.
            </summary>
        </member>
        <member name="F:Opc.Hda.RelativeTime.Second">
            <summary>
            The start of the current second or an offset in seconds.
            </summary>
        </member>
        <member name="F:Opc.Hda.RelativeTime.Minute">
            <summary>
            The start of the current minutes or an offset in minutes.
            </summary>
        </member>
        <member name="F:Opc.Hda.RelativeTime.Hour">
            <summary>
            The start of the current hour or an offset in hours.
            </summary>
        </member>
        <member name="F:Opc.Hda.RelativeTime.Day">
            <summary>
            The start of the current day or an offset in days.
            </summary>
        </member>
        <member name="F:Opc.Hda.RelativeTime.Week">
            <summary>
            The start of the current week or an offset in weeks.
            </summary>
        </member>
        <member name="F:Opc.Hda.RelativeTime.Month">
            <summary>
            The start of the current month or an offset in months.
            </summary>
        </member>
        <member name="F:Opc.Hda.RelativeTime.Year">
            <summary>
            The start of the current year or an offset in years.
            </summary>
        </member>
        <member name="T:Opc.Hda.TimeOffset">
            <summary>
            An offset component of a relative time.
            </summary>
        </member>
        <member name="P:Opc.Hda.TimeOffset.Value">
            <summary>
            A signed value indicated the magnitude of the time offset.
            </summary>
        </member>
        <member name="P:Opc.Hda.TimeOffset.Type">
            <summary>
            The time interval to use when applying the offset.
            </summary>
        </member>
        <member name="M:Opc.Hda.TimeOffset.OffsetTypeToString(Opc.Hda.RelativeTime)">
            <summary>
            Converts a offset type to a string token.
            </summary>
            <param name="offsetType">The offset type value to convert.</param>
            <returns>The string token representing the offset type.</returns>
        </member>
        <member name="T:Opc.Hda.TimeOffsetCollection">
            <summary>
            A collection of time offsets used in a relative time.
            </summary>
        </member>
        <member name="P:Opc.Hda.TimeOffsetCollection.Item(System.Int32)">
            <summary>
            Accessor for elements in the time offset collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.Add(System.Int32,Opc.Hda.RelativeTime)">
            <summary>
            Adds a new offset to the collection.
            </summary>
            <param name="value">The offset value.</param>
            <param name="type">The offset type.</param>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.ToString">
            <summary>
            Returns a String that represents the current Object.
            </summary>
            <returns>A String that represents the current Object.</returns>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.Parse(System.String)">
            <summary>
            Initializes the collection from a set of offsets contained in a string. 
            </summary>
            <param name="buffer">A string containing the time offset fields.</param>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.CopyTo(Opc.Hda.TimeOffset[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.Insert(System.Int32,Opc.Hda.TimeOffset)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.Remove(Opc.Hda.TimeOffset)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.Contains(Opc.Hda.TimeOffset)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.IndexOf(Opc.Hda.TimeOffset)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.Add(Opc.Hda.TimeOffset)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:Opc.Hda.TimeOffsetCollection.CreateOffset(System.Boolean,System.Int32,System.String)">
            <summary>
            Creates a new offset object from the components extracted from a string.
            </summary>
        </member>
        <member name="T:Opc.Hda.Trend">
            <summary>
            Manages a set of items and a set of read, update, subscribe or playback request parameters. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.#ctor(Opc.Hda.Server)">
            <summary>
            Initializes the object with the specified server.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.Server">
            <summary>
            The server containing the data in the trend.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.Name">
            <summary>
            A name for the trend used to display to the user.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.AggregateID">
            <summary>
            The default aggregate to use for the trend.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.StartTime">
            <summary>
            The start time for the trend.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.EndTime">
            <summary>
            The end time for the trend.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.MaxValues">
            <summary>
            The maximum number of data points per item in the trend.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.IncludeBounds">
            <summary>
            Whether the trend includes the bounding values.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.ResampleInterval">
            <summary>
            The resampling interval (in seconds) to use for processed reads.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.Timestamps">
            <summary>
            The discrete set of timestamps for the trend.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.UpdateInterval">
            <summary>
            The interval between updates from the server when subscribing to new data.
            </summary>
            <remarks>This specifies a number of seconds for raw data or the number of resample intervals for processed data.</remarks>
        </member>
        <member name="P:Opc.Hda.Trend.SubscriptionActive">
            <summary>
            Whether the server is currently sending updates for the trend.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.PlaybackInterval">
            <summary>
            The interval between updates from the server when playing back existing data. 
            </summary>
            <remarks>This specifies a number of seconds for raw data and for processed data.</remarks>
        </member>
        <member name="P:Opc.Hda.Trend.PlaybackDuration">
            <summary>
            The amount of data that should be returned with each update when playing back existing data.
            </summary>
            <remarks>This specifies a number of seconds for raw data or the number of resample intervals for processed data.</remarks>
        </member>
        <member name="P:Opc.Hda.Trend.PlaybackActive">
            <summary>
            Whether the server is currently playing data back for the trend.
            </summary>
        </member>
        <member name="P:Opc.Hda.Trend.Items">
            <summary>
            The items
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.GetItems">
            <summary>
            Returns the items in a trend as an array.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.AddItem(Opc.ItemIdentifier)">
            <summary>
            Creates a handle for an item and adds it to the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.RemoveItem(Opc.Hda.Item)">
            <summary>
            Removes an item from the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ClearItems">
            <summary>
            Removes all items from the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Read">
            <summary>
            Reads the values for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Read(Opc.Hda.Item[])">
            <summary>
            Reads the values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Read(System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Read(Opc.Hda.Item[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read request for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadRaw">
            <summary>
            Reads the raw values for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadRaw(Opc.Hda.Item[])">
            <summary>
            Reads the raw values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadRaw(System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read raw request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadRaw(Opc.ItemIdentifier[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read raw request for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadProcessed">
            <summary>
            Reads the processed values for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadProcessed(Opc.Hda.Item[])">
            <summary>
            Reads the processed values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadProcessed(System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read processed request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadProcessed(Opc.Hda.Item[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read processed request for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Subscribe(System.Object,Opc.Hda.DataUpdateEventHandler)">
            <summary>
            Establishes a subscription for the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.SubscribeCancel">
            <summary>
            Cancels an existing subscription.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Playback(System.Object,Opc.Hda.DataUpdateEventHandler)">
            <summary>
            Begins playback of data for a trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.PlaybackCancel">
            <summary>
            Cancels an existing playback operation.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadModified">
            <summary>
            Reads the modified values for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadModified(Opc.Hda.Item[])">
            <summary>
            Reads the modified values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadModified(System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read modified request for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadModified(Opc.Hda.Item[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read modified request for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAtTime">
            <summary>
            Reads the values at specific times for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAtTime(Opc.Hda.Item[])">
            <summary>
            Reads the values at specific times for a for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAtTime(System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read values at specific times request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAtTime(Opc.Hda.Item[],System.Object,Opc.Hda.ReadValuesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read values at specific times request for a set of items.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAttributes(Opc.ItemIdentifier,System.Int32[])">
            <summary>
            Reads the attributes at specific times for a for an item. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAttributes(Opc.ItemIdentifier,System.Int32[],System.Object,Opc.Hda.ReadAttributesEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read attributes at specific times request for an item. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAnnotations">
            <summary>
            Reads the annotations for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAnnotations(Opc.Hda.Item[])">
            <summary>
            Reads the annotations for a for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAnnotations(System.Object,Opc.Hda.ReadAnnotationsEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read annotations request for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ReadAnnotations(Opc.Hda.Item[],System.Object,Opc.Hda.ReadAnnotationsEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous read annotations request for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Delete">
            <summary>
            Deletes the raw values for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Delete(Opc.Hda.Item[])">
            <summary>
            Deletes the raw values for a for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Delete(System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous delete raw request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Delete(Opc.ItemIdentifier[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous delete raw request for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.DeleteAtTime">
            <summary>
            Deletes the values at specific times for a for all items in the trend.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.DeleteAtTime(Opc.Hda.Item[])">
            <summary>
            Deletes the values at specific times for a for a set of items. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.DeleteAtTime(System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous delete values at specific times request for all items in the trend. 
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.DeleteAtTime(Opc.Hda.Item[],System.Object,Opc.Hda.UpdateCompleteEventHandler,Opc.IRequest@)">
            <summary>
            Starts an asynchronous delete values at specific times request for a set of items.
            </summary>
        </member>
        <member name="T:Opc.Hda.Trend.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.SetServer(Opc.Hda.Server)">
            <summary>
            Used to set the server after the object is deserialized.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="M:Opc.Hda.Trend.ApplyDefaultAggregate(Opc.Hda.Item[])">
            <summary>
            Creates a copy of the items that have a valid aggregate set.
            </summary>
        </member>
        <member name="T:Opc.Hda.TrendCollection">
            <summary>
            A collection of items.
            </summary>
        </member>
        <member name="P:Opc.Hda.TrendCollection.Item(System.Int32)">
            <summary>
            Gets the trend at the specified index.
            </summary>
        </member>
        <member name="P:Opc.Hda.TrendCollection.Item(System.String)">
            <summary>
            Gets the first trend with the specified name.
            </summary>
        </member>
        <member name="M:Opc.Hda.TrendCollection.#ctor">
            <summary>
            Initializes object with the default values.
            </summary>
        </member>
        <member name="M:Opc.Hda.TrendCollection.#ctor(Opc.Hda.TrendCollection)">
            <summary>
            Initializes object with the specified TrendValueCollection object.
            </summary>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.Hda.TrendCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.Hda.TrendCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.Hda.TrendCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.Hda.TrendCollection.CopyTo(Opc.Hda.Trend[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.Hda.TrendCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.Hda.TrendCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.Hda.TrendCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the IList is read-only.
            </summary>
        </member>
        <member name="P:Opc.Hda.TrendCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.Hda.TrendCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.Hda.TrendCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.Hda.TrendCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Insert(System.Int32,Opc.Hda.Trend)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Remove(Opc.Hda.Trend)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Contains(Opc.Hda.Trend)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.Hda.TrendCollection.IndexOf(Opc.Hda.Trend)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.Hda.TrendCollection.Add(Opc.Hda.Trend)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="T:Opc.ReadOnlyCollection">
            <summary>
            A read only collection class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.#ctor(System.Array)">
             <summary>
            Creates a collection that wraps the specified array instance.
             </summary>
        </member>
        <member name="P:Opc.ReadOnlyCollection.Array">
            <summary>
            The array instance exposed by the collection.
            </summary>
        </member>
        <member name="T:Opc.ReadOnlyCollection.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.ReadOnlyCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Opc.ReadOnlyCollection.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Opc.WriteableCollection">
            <summary>
            A writeable collection class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.Item(System.Int32)">
            <summary>
            An indexer for the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.ToArray">
            <summary>
            Returns a copy of the collection as an array.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds a list of values to the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.#ctor(System.Collections.ICollection,System.Type)">
            <summary>
            Creates a collection that wraps the specified array instance.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.Array">
            <summary>
            The array instance exposed by the collection.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.ElementType">
            <summary>
            The type of objects allowed in the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.ValidateElement(System.Object)">
            <summary>
            Throws an exception if the element is not valid for the collection.
            </summary>
        </member>
        <member name="F:Opc.WriteableCollection.INVALID_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.WriteableCollection.INVALID_TYPE">
            <remarks/>
        </member>
        <member name="T:Opc.WriteableCollection.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.WriteableCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Opc.WriteableCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Opc.WriteableCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the IList item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Opc.WriteableCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Opc.WriteableCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the IList.
            </summary>
            <param name="value">The Object to remove from the IList.</param>
        </member>
        <member name="M:Opc.WriteableCollection.Contains(System.Object)">
            <summary>
            Determines whether the IList contains a specific value.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>true if the Object is found in the IList; otherwise, false.</returns>
        </member>
        <member name="M:Opc.WriteableCollection.Clear">
            <summary>
            Removes all items from the IList.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="value">The Object to locate in the IList.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Opc.WriteableCollection.Add(System.Object)">
            <summary>
            Adds an item to the IList.
            </summary>
            <param name="value">The Object to add to the IList. </param>
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="P:Opc.WriteableCollection.IsFixedSize">
            <summary>
            Indicates whether the IList has a fixed size.
            </summary>
        </member>
        <member name="M:Opc.WriteableCollection.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Opc.ReadOnlyDictionary">
            <summary>
            A read only dictionary class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.#ctor(System.Collections.Hashtable)">
             <summary>
            Creates a collection that wraps the specified array instance.
             </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Dictionary">
            <summary>
            The array instance exposed by the collection.
            </summary>
        </member>
        <member name="T:Opc.ReadOnlyDictionary.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key. 
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Contains(System.Object)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Clear">
            <summary>
            Removes all elements from the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.ReadOnlyDictionary.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Opc.ReadOnlyDictionary.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Opc.WriteableDictionary">
            <summary>
            A read only dictionary class which can be used to expose arrays as properties of classes.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.#ctor(System.Collections.IDictionary,System.Type,System.Type)">
            <summary>
            Creates a collection that wraps the specified array instance.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Dictionary">
            <summary>
            The dictionary instance exposed by the collection.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.KeyType">
            <summary>
            The type of objects allowed as keys in the dictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.ValueType">
            <summary>
            The type of objects allowed as values in the dictionary.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.ValidateKey(System.Object,System.Type)">
            <summary>
            Throws an exception if the key is not valid for the dictionary.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.ValidateValue(System.Object,System.Type)">
            <summary>
            Throws an exception if the value is not valid for the dictionary.
            </summary>
        </member>
        <member name="F:Opc.WriteableDictionary.INVALID_VALUE">
            <remarks/>
        </member>
        <member name="F:Opc.WriteableDictionary.INVALID_TYPE">
            <remarks/>
        </member>
        <member name="T:Opc.WriteableDictionary.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether the IDictionary is read-only.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.GetEnumerator">
            <summary>
            Returns an IDictionaryEnumerator for the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key. 
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the IDictionary.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.Contains(System.Object)">
            <summary>
            Determines whether the IDictionary contains an element with the specified key.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.Clear">
            <summary>
            Removes all elements from the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Values">
            <summary>
            Gets an ICollection containing the values in the IDictionary.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Keys">
            <summary>
            Gets an ICollection containing the keys of the IDictionary.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.IsFixedSize">
            <summary>
            Gets a value indicating whether the IDictionary has a fixed size.
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.WriteableDictionary.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.WriteableDictionary.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.WriteableDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Opc.WriteableDictionary.Clone">
            <summary>
            Creates a deep copy of the collection.
            </summary>
        </member>
        <member name="T:Opc.ConnectData">
            <summary>
            Contains protocol dependent connection and authenication information.
            </summary>
        </member>
        <member name="P:Opc.ConnectData.Credentials">
            <summary>
            The credentials to submit to the proxy server for authentication.
            </summary>
        </member>
        <member name="P:Opc.ConnectData.LicenseKey">
            <summary>
            The license key used to connect to the server.
            </summary>
        </member>
        <member name="P:Opc.ConnectData.AlwaysUseDA20">
            <summary>
            Always uses the DA20 interfaces even if DA3.0 is supported.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.GetCredential(System.Uri,System.String)">
            <summary>
            Returns a NetworkCredential object that is associated with the specified URI, and authentication type.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.GetProxy">
            <summary>
            Returns the web proxy object to use when connecting to the server.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.SetProxy(System.Net.WebProxy)">
            <summary>
            Sets the web proxy object.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.#ctor(System.Net.NetworkCredential)">
            <summary>
            Initializes an instance with the specified credentials.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.#ctor(System.Net.NetworkCredential,System.Net.WebProxy)">
            <summary>
            Initializes an instance with the specified credentials and web proxy.
            </summary>
        </member>
        <member name="T:Opc.ConnectData.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs teh object by de-serializing from the stream.
            </summary>
        </member>
        <member name="M:Opc.ConnectData.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="T:Opc.Convert">
            <summary>
            Defines various functions used to convert types.
            </summary>
        </member>
        <member name="M:Opc.Convert.IsValid(System.Array)">
            <summary>
            Checks whether the array contains any useful data.
            </summary>
        </member>
        <member name="M:Opc.Convert.IsEmpty(System.Array)">
            <summary>
            Checks whether the array contains any useful data.
            </summary>
        </member>
        <member name="M:Opc.Convert.IsValid(System.String)">
            <summary>
            Checks whether the string contains any useful data.
            </summary>
        </member>
        <member name="M:Opc.Convert.IsEmpty(System.String)">
            <summary>
            Checks whether the string contains any useful data.
            </summary>
        </member>
        <member name="M:Opc.Convert.Clone(System.Object)">
            <summary>
            Performs a deep copy of an object if possible.
            </summary>
        </member>
        <member name="M:Opc.Convert.Compare(System.Object,System.Object)">
            <summary>
            Does a deep comparison between two objects.
            </summary>
        </member>
        <member name="M:Opc.Convert.ChangeType(System.Object,System.Type)">
            <summary>
            Converts an object to the specified type and returns a deep copy.
            </summary>
        </member>
        <member name="M:Opc.Convert.ToString(System.Object)">
            <summary>
            Formats an item or property value as a string.
            </summary>
        </member>
        <member name="M:Opc.Convert.Match(System.String,System.String,System.Boolean)">
            <summary>
            Tests if the specified string matches the specified pattern.
            </summary>
        </member>
        <member name="T:Opc.IFactory">
            <summary>
            A interface to a factory used to instantiate servers.
            </summary>
        </member>
        <member name="M:Opc.IFactory.CreateInstance(Opc.URL,Opc.ConnectData)">
            <summary>
            Creates a new instance of the server at the specified URL.
            </summary>
        </member>
        <member name="T:Opc.Factory">
            <summary>
            The default class used to instantiate server objects.
            </summary>
        </member>
        <member name="M:Opc.Factory.#ctor(System.Type,System.Boolean)">
            <summary>
            Initializes the object with the type of the servers it can instantiate.
            </summary>
            <param name="systemType">The System.Type of the server object that the factory can create.</param>
            <param name="useRemoting">Whether the factory should use .NET Remoting to instantiate the servers.</param>
        </member>
        <member name="M:Opc.Factory.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:Opc.Factory.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Factory.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="T:Opc.Factory.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Factory.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Factory.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Factory.Clone">
            <summary>
            Returns a clone of the factory.
            </summary>
        </member>
        <member name="M:Opc.Factory.CreateInstance(Opc.URL,Opc.ConnectData)">
            <summary>
            Creates a new instance of the server.
            </summary>
        </member>
        <member name="P:Opc.Factory.SystemType">
            <summary>
            The system type used to instantiate the remote server object.
            </summary>
        </member>
        <member name="P:Opc.Factory.UseRemoting">
            <summary>
            Whether the system type is a default system type for an OPC specification.
            </summary>
        </member>
        <member name="F:Opc.Factory.m_systemType">
            <summary>
            The system type used to instantiate the remote server object.
            </summary>
        </member>
        <member name="F:Opc.Factory.m_useRemoting">
            <summary>
            Whether the system type is a default system type for an OPC specification.
            </summary>
        </member>
        <member name="T:Opc.IDiscovery">
            <summary>
            This interface is used to discover OPC servers on the network.
            </summary>
        </member>
        <member name="M:Opc.IDiscovery.EnumerateHosts">
            <summary>
            Returns a list of host names which could contain OPC servers.
            </summary>
            <returns>A array of strings that are valid network host names.</returns>
        </member>
        <member name="M:Opc.IDiscovery.GetAvailableServers(Opc.Specification)">
            <summary>
            Returns a list of servers that support an OPC specification.
            </summary>
            <param name="specification">A unique identifier for an OPC specification.</param>
            <returns>An array of unconnected OPC server obejcts on the local machine.</returns>
        </member>
        <member name="M:Opc.IDiscovery.GetAvailableServers(Opc.Specification,System.String,Opc.ConnectData)">
            <summary>
            Returns a list of servers that support an OPC specification on remote machine.
            </summary>
            <param name="specification">A unique identifier for an OPC specification.</param>
            <param name="host">The network host name of the machine to search for servers.</param>
            <param name="connectData">Any necessary user authentication or protocol configuration information.</param>
            <returns>An array of unconnected OPC server objects.</returns>
        </member>
        <member name="T:Opc.Specification">
            <summary>
            A description of an interface version defined by an OPC specification.
            </summary>
        </member>
        <member name="P:Opc.Specification.ID">
            <summary>
            The unique identifier for the interface version. 
            </summary>
        </member>
        <member name="P:Opc.Specification.Description">
            <summary>
            The human readable description for the interface version.
            </summary>
        </member>
        <member name="M:Opc.Specification.op_Equality(Opc.Specification,Opc.Specification)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Opc.Specification.op_Inequality(Opc.Specification,Opc.Specification)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Opc.Specification.#ctor(System.String,System.String)">
            <summary>
            Initializes the object with the description and a GUID as a string.
            </summary>
        </member>
        <member name="M:Opc.Specification.Equals(System.Object)">
            <summary>
            Determines if the object is equal to the specified value.
            </summary>
        </member>
        <member name="M:Opc.Specification.ToString">
            <summary>
            Converts the object to a string used for display.
            </summary>
        </member>
        <member name="M:Opc.Specification.GetHashCode">
            <summary>
            Returns a suitable hash code for the result.
            </summary>
        </member>
        <member name="F:Opc.Specification.COM_AE_10">
            <summary>
            A set of Specification objects for existing OPC specifications.
            </summary>
        </member>
        <member name="F:Opc.Specification.COM_BATCH_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_BATCH_20">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_DA_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_DA_20">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_DA_30">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_DX_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.COM_HDA_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.XML_DA_10">
            <remarks/>
        </member>
        <member name="F:Opc.Specification.UA10">
            <remarks/>
        </member>
        <member name="T:Opc.URL">
            <summary>
            Contains information required to connect to the server.
            </summary>
        </member>
        <member name="P:Opc.URL.Scheme">
            <summary>
            The scheme (protocol) for the URL.
            </summary>
        </member>
        <member name="P:Opc.URL.HostName">
            <summary>
            The host name for the URL.
            </summary>
        </member>
        <member name="P:Opc.URL.Port">
            <summary>
            The port name for the URL (0 means default for protocol).
            </summary>
        </member>
        <member name="P:Opc.URL.Path">
            <summary>
            The path for the URL.
            </summary>
        </member>
        <member name="M:Opc.URL.#ctor">
            <summary>
            Initializes an empty instance.
            </summary>
        </member>
        <member name="M:Opc.URL.#ctor(System.String)">
            <summary>
            Initializes an instance by parsing a URL string.
            </summary>
        </member>
        <member name="M:Opc.URL.ToString">
            <summary>
            Returns a URL string for the object.
            </summary>
        </member>
        <member name="M:Opc.URL.Equals(System.Object)">
            <summary>
            Compares the object to either another URL object or a URL string.
            </summary>
        </member>
        <member name="M:Opc.URL.GetHashCode">
            <summary>
            Returns a hash code for the object.
            </summary>
        </member>
        <member name="M:Opc.URL.Clone">
            <summary>
            Returns a deep copy of the object.
            </summary>
        </member>
        <member name="T:Opc.UrlScheme">
            <summary>
            Defines string constants for well-known URL schemes.
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.HTTP">
            <summary>
            XML Web Service.
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.AE">
            <summary>
            OPC Alarms and Events
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.BATCH">
            <summary>
            OPC Batch
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.DA">
            <summary>
            OPC Data Access
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.DX">
            <summary>
            OPC Data eXchange
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.HDA">
            <summary>
            OPC Historical Data Access
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.XMLDA">
            <summary>
            OPC XML Data Access over HTTP.
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.UA_HTTP">
            <summary>
            OPC Unified Architecture over SOAP/HTTP
            </summary>
        </member>
        <member name="F:Opc.UrlScheme.UA_TCP">
            <summary>
            OPC Unified Architecture over SOAP/TCP
            </summary>
        </member>
        <member name="T:Opc.IServer">
            <summary>
            Defines functionality that is common to all OPC servers.
            </summary>
        </member>
        <member name="E:Opc.IServer.ServerShutdown">
            <summary>
            An event to receive server shutdown notifications.
            </summary>
        </member>
        <member name="M:Opc.IServer.GetLocale">
            <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
            <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Opc.IServer.SetLocale(System.String)">
            <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <returns>A locale that the server supports and is the best match for the requested locale.</returns>
        </member>
        <member name="M:Opc.IServer.GetSupportedLocales">
            <summary>
            Returns the locales supported by the server
            </summary>
            <remarks>The first element in the array must be the default locale for the server.</remarks>
            <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Opc.IServer.GetErrorText(System.String,Opc.ResultID)">
            <summary>
            Returns the localized text for the specified result code.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <param name="resultID">The result code identifier.</param>
            <returns>A message localized for the best match for the requested locale.</returns>
        </member>
        <member name="T:Opc.IRequest">
            <summary>
            Maintains the state of an asynchronous request.
            </summary>
        </member>
        <member name="P:Opc.IRequest.Handle">
            <summary>
            An unique identifier, assigned by the client, for the request.
            </summary>
        </member>
        <member name="T:Opc.IBrowsePosition">
            <summary>
            Maintains the state of a browse operation
            </summary>
        </member>
        <member name="T:Opc.ServerShutdownEventHandler">
            <summary>
            A delegate to receive shutdown notifiations from the server.
            </summary>
        </member>
        <member name="T:Opc.ItemIdentifier">
            <summary>
            A unique item identifier.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.ItemName">
            <summary>
            The primary identifier for an item within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.ItemPath">
            <summary>
            An secondary identifier for an item within the server namespace.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.ClientHandle">
            <summary>
            A unique item identifier assigned by the client.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.ServerHandle">
            <summary>
            A unique item identifier assigned by the server.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifier.Key">
            <summary>
            Create a string that can be used as index in a hash table for the item.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.#ctor">
            <summary>
            Initializes the object with default values.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.#ctor(System.String)">
            <summary>
            Initializes the object with the specified item name.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.#ctor(System.String,System.String)">
            <summary>
            Initializes the object with the specified item path and item name.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initializes the object with the specified item identifier.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifier.Clone">
            <summary>
            Creates a shallow copy of the object.
            </summary>
        </member>
        <member name="T:Opc.IResult">
            <summary>
            A interface used to access result information associated with a single item/value.
            </summary>
        </member>
        <member name="P:Opc.IResult.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.IResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.IdentifiedResult">
            <summary>
            A result code associated with a unique item identifier.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor">
            <summary>
            Initialize object with default values.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(Opc.ItemIdentifier)">
            <summary>
            Initialize object with the specified ItemIdentifier object.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(Opc.IdentifiedResult)">
            <summary>
            Initialize object with the specified IdentifiedResult object.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(System.String,Opc.ResultID)">
            <summary>
            Initializes the object with the specified item name and result code.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(System.String,Opc.ResultID,System.String)">
            <summary>
            Initialize object with the specified item name, result code and diagnostic info.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(Opc.ItemIdentifier,Opc.ResultID)">
            <summary>
            Initialize object with the specified ItemIdentifier and result code.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResult.#ctor(Opc.ItemIdentifier,Opc.ResultID,System.String)">
            <summary>
            Initialize object with the specified ItemIdentifier, result code and diagnostic info.
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResult.ResultID">
            <summary>
            The error id for the result of an operation on an item.
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResult.DiagnosticInfo">
            <summary>
            Vendor specific diagnostic information (not the localized error text).
            </summary>
        </member>
        <member name="T:Opc.ItemIdentifierCollection">
            <summary>
            A collection of item identifiers.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any ItemIdentifiers contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="P:Opc.ItemIdentifierCollection.Item(System.Int32)">
            <summary>
            Returns the itemID at the specified index.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any item ids contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.Clear">
            <summary>
            Removes all itemIDs in the collection.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifierCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.ItemIdentifierCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.CopyTo(Opc.ItemIdentifier[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.ItemIdentifierCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.ItemIdentifierCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Opc.IdentifiedResultCollection">
            <summary>
            A collection of identified results.
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResultCollection.Item(System.Int32)">
            <summary>
            Returns the IdentifiedResult at the specified index.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.#ctor">
            <summary>
            Creates an empty collection.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes the object with any IdentifiedResults contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.Init(System.Collections.ICollection)">
            <summary>
            Initializes the object with any item ids contained in the collection.
            </summary>
            <param name="collection">A collection containing item ids.</param>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.Clear">
            <summary>
            Removes all itemIDs in the collection.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.Clone">
            <summary>
            Creates a deep copy of the object.
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResultCollection.IsSynchronized">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Opc.IdentifiedResultCollection.Count">
            <summary>
            Gets the number of objects in the collection.
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.CopyTo(Opc.IdentifiedResult[],System.Int32)">
            <summary>
            Copies the objects to an Array, starting at a the specified index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination for the objects.</param>
            <param name="index">The zero-based index in the Array at which copying begins.</param>
        </member>
        <member name="P:Opc.IdentifiedResultCollection.SyncRoot">
            <summary>
            Indicates whether access to the ICollection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="M:Opc.IdentifiedResultCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>An IEnumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Opc.Namespace">
            <summary>
            Declares constants for common XML Schema and OPC namespaces.
            </summary>
        </member>
        <member name="F:Opc.Namespace.XML_SCHEMA">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.XML_SCHEMA_INSTANCE">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_SAMPLE">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_ALARM_AND_EVENTS">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_COMPLEX_DATA">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_DATA_EXCHANGE">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_DATA_ACCESS">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_HISTORICAL_DATA_ACCESS">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_DATA_ACCESS_XML10">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_BINARY">
            <remarks/>
        </member>
        <member name="F:Opc.Namespace.OPC_UA10">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID">
            <summary>
            Contains a unique identifier for a result code.
            </summary>
        </member>
        <member name="T:Opc.ResultID.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.ResultID.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="P:Opc.ResultID.Name">
            <summary>
            Used for result codes identified by a qualified name.
            </summary>
        </member>
        <member name="P:Opc.ResultID.Code">
            <summary>
            Used for result codes identified by a integer.
            </summary>
        </member>
        <member name="M:Opc.ResultID.op_Equality(Opc.ResultID,Opc.ResultID)">
            <summary>
            Returns true if the objects are equal.
            </summary>
        </member>
        <member name="M:Opc.ResultID.op_Inequality(Opc.ResultID,Opc.ResultID)">
            <summary>
            Returns true if the objects are not equal.
            </summary>
        </member>
        <member name="M:Opc.ResultID.Succeeded">
            <summary>
            Checks for the 'S_' prefix that indicates a success condition.
            </summary>
        </member>
        <member name="M:Opc.ResultID.Failed">
            <summary>
            Checks for the 'E_' prefix that indicates an error condition.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(System.Xml.XmlQualifiedName)">
            <summary>
            Initializes a result code identified by a qualified name.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(System.Int64)">
            <summary>
            Initializes a result code identified by an integer.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(System.String,System.String)">
            <summary>
            Initializes a result code identified by a qualified name.
            </summary>
        </member>
        <member name="M:Opc.ResultID.#ctor(Opc.ResultID,System.Int64)">
            <summary>
            Initializes a result code with a general result code and a specific result code.
            </summary>
        </member>
        <member name="M:Opc.ResultID.Equals(System.Object)">
            <summary>
            Returns true if the target object is equal to the object.
            </summary>
        </member>
        <member name="M:Opc.ResultID.ToString">
            <summary>
            Formats the result identifier as a string.
            </summary>
        </member>
        <member name="M:Opc.ResultID.GetHashCode">
            <summary>
            Returns a useful hash code for the object.
            </summary>
        </member>
        <member name="F:Opc.ResultID.S_OK">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.S_FALSE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_FAIL">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_INVALIDARG">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_TIMEDOUT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_OUTOFMEMORY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_NETWORK_ERROR">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_ACCESS_DENIED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.E_NOTSUPPORTED">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Da">
            <summary>
            Results codes for Data Access.
            </summary>
        </member>
        <member name="F:Opc.ResultID.Da.S_DATAQUEUEOVERFLOW">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.S_UNSUPPORTEDRATE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.S_CLAMP">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALIDHANDLE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_UNKNOWN_ITEM_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALID_ITEM_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_UNKNOWN_ITEM_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALID_ITEM_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALID_PID">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_READONLY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_WRITEONLY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_BADTYPE">
            <remarks/> 
        </member>
        <member name="F:Opc.ResultID.Da.E_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALID_FILTER">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_INVALIDCONTINUATIONPOINT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_NO_WRITEQT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_NO_ITEM_DEADBAND">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Da.E_NO_ITEM_SAMPLING">
            <remarks/> 
        </member>
        <member name="F:Opc.ResultID.Da.E_NO_ITEM_BUFFERING">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Cpx">
            <summary>
            Results codes for Complex Data.
            </summary>
        </member>
        <member name="F:Opc.ResultID.Cpx.E_TYPE_CHANGED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Cpx.E_FILTER_DUPLICATE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Cpx.E_FILTER_INVALID">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Cpx.E_FILTER_ERROR">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Cpx.S_FILTER_NO_DATA">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Hda">
            <summary>
            Results codes for Historical Data Access.
            </summary>
        </member>
        <member name="F:Opc.ResultID.Hda.E_MAXEXCEEDED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_NODATA">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_MOREDATA">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_INVALIDAGGREGATE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_CURRENTVALUE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_EXTRADATA">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.W_NOFILTER">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_UNKNOWNATTRID">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_NOT_AVAIL">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_INVALIDDATATYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_DATAEXISTS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_INVALIDATTRID">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.E_NODATAEXISTS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_INSERTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Hda.S_REPLACED">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Dx">
            <summary>
            Results codes for Data eXchange.
            </summary>
        </member>
        <member name="F:Opc.ResultID.Dx.E_PERSISTING">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_NOITEMLIST">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SERVER_STATE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_VERSION_MISMATCH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_ITEM_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_ITEM_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_ITEM_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_ITEM_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_DUPLICATE_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_BROWSE_PATH">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_SERVER_URL">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_SERVER_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNSUPPORTED_SERVER_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_CONNECTIONS_EXIST">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TOO_MANY_CONNECTIONS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_OVERRIDE_BADTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_OVERRIDE_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SUBSTITUTE_BADTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SUBSTITUTE_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_TARGET_ITEM">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_TARGET_ITEM">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_ALREADY_CONNECTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_SERVER_NAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_UNKNOWN_SOURCE_ITEM">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_SOURCE_ITEM">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_QUEUE_SIZE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_DEADBAND">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_INVALID_CONFIG_FILE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_PERSIST_FAILED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_FAULT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_NO_ACCESSS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_FAULT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_NO_ACCESSS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SUBSCRIPTION_FAULT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_BADRIGHTS">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_BAD_QUALITY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_BADTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_ITEM_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_NOT_CONNECTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_SOURCE_SERVER_TIMEOUT">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_ITEM_DISCONNECTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_NO_WRITES_ATTEMPTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_ITEM_BADTYPE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.E_TARGET_ITEM_RANGE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.S_TARGET_SUBSTITUTED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.S_TARGET_OVERRIDEN">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Dx.S_CLAMP">
            <remarks/>
        </member>
        <member name="T:Opc.ResultID.Ae">
            <summary>
            Results codes for Alarms and Events
            </summary>
        </member>
        <member name="F:Opc.ResultID.Ae.S_ALREADYACKED">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.S_INVALIDBUFFERTIME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.S_INVALIDMAXSIZE">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.S_INVALIDKEEPALIVETIME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.E_INVALIDBRANCHNAME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.E_INVALIDTIME">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.E_BUSY">
            <remarks/>
        </member>
        <member name="F:Opc.ResultID.Ae.E_NOINFO">
            <remarks/>
        </member>
        <member name="T:Opc.ResultIDException">
            <summary>
            Used to raise an exception with associated with a specified result code.
            </summary>
        </member>
        <member name="P:Opc.ResultIDException.Result">
            <remarks/>
        </member>
        <member name="M:Opc.ResultIDException.#ctor(Opc.ResultID)">
            <remarks/>
        </member>
        <member name="M:Opc.ResultIDException.#ctor(Opc.ResultID,System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.ResultIDException.#ctor(Opc.ResultID,System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ResultIDException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="F:Opc.ResultIDException.m_result">
            <remarks/>
        </member>
        <member name="T:Opc.Server">
            <summary>
            A base class for an in-process object used to access OPC servers.
            </summary>
        </member>
        <member name="M:Opc.Server.#ctor(Opc.Factory,Opc.URL)">
            <summary>
            Initializes the object with a factory and a default URL.
            </summary>
            <param name="factory">The Opc.Factory used to connect to remote servers.</param>
            <param name="url">The network address of a remote server.</param>
        </member>
        <member name="M:Opc.Server.Finalize">
            <summary>
            The finalizer.
            </summary>
        </member>
        <member name="M:Opc.Server.Dispose">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="M:Opc.Server.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources held by the object.
            </summary>
        </member>
        <member name="T:Opc.Server.Names">
            <summary>
            A set of names for fields used in serialization.
            </summary>
        </member>
        <member name="M:Opc.Server.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Contructs a server by de-serializing its URL from the stream.
            </summary>
        </member>
        <member name="M:Opc.Server.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes a server into a stream.
            </summary>
        </member>
        <member name="M:Opc.Server.Clone">
            <summary>
            Returns an unconnected copy of the server with the same URL. 
            </summary>
        </member>
        <member name="P:Opc.Server.Name">
            <summary>
            A short descriptive name for the server assigned by the client.
            </summary>
        </member>
        <member name="P:Opc.Server.Url">
            <summary>
            The URL that describes the network location of the server.
            </summary>
        </member>
        <member name="P:Opc.Server.Locale">
            <summary>
            The default of locale used by the remote server.
            </summary>
        </member>
        <member name="P:Opc.Server.SupportedLocales">
            <summary>
            The set of locales supported by the remote server.
            </summary>
        </member>
        <member name="P:Opc.Server.IsConnected">
            <summary>
            Whether the remote server is currently connected.
            </summary>
        </member>
        <member name="M:Opc.Server.Connect">
            <summary>
            Establishes a physical connection to the remote server.
            </summary>
        </member>
        <member name="M:Opc.Server.Connect(Opc.ConnectData)">
            <summary>
            Establishes a physical connection to the remote server.
            </summary>
            <param name="connectData">Any protocol configuration or user authenication information.</param>
        </member>
        <member name="M:Opc.Server.Connect(Opc.URL,Opc.ConnectData)">
            <summary>
            Establishes a physical connection to the remote server identified by a URL.
            </summary>
            <param name="url">The network address of the remote server.</param>
            <param name="connectData">Any protocol configuration or user authenication information.</param>
        </member>
        <member name="M:Opc.Server.Disconnect">
            <summary>
            Disconnects from the server and releases all network resources.
            </summary>
        </member>
        <member name="M:Opc.Server.Duplicate">
            <summary>
            Creates a new instance of a server object with the same factory and url.
            </summary>
            <remarks>This method does not copy the value of any properties.</remarks>
            <returns>An unconnected duplicate instance of the server object.</returns>
        </member>
        <member name="E:Opc.Server.ServerShutdown">
            <summary>
            An event to receive server shutdown notifications.
            </summary>
        </member>
        <member name="M:Opc.Server.GetLocale">
            <summary>
            The locale used in any error messages or results returned to the client.
            </summary>
            <returns>The locale name in the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Opc.Server.SetLocale(System.String)">
            <summary>
            Sets the locale used in any error messages or results returned to the client.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <returns>A locale that the server supports and is the best match for the requested locale.</returns>
        </member>
        <member name="M:Opc.Server.GetSupportedLocales">
            <summary>
            Returns the locales supported by the server
            </summary>
            <remarks>The first element in the array must be the default locale for the server.</remarks>
            <returns>An array of locales with the format "[languagecode]-[country/regioncode]".</returns>
        </member>
        <member name="M:Opc.Server.GetErrorText(System.String,Opc.ResultID)">
            <summary>
            Returns the localized text for the specified result code.
            </summary>
            <param name="locale">The locale name in the format "[languagecode]-[country/regioncode]".</param>
            <param name="resultID">The result code identifier.</param>
            <returns>A message localized for the best match for the requested locale.</returns>
        </member>
        <member name="M:Opc.Server.GetString(System.String)">
            <summary>
            Returns a localized string with the specified name.
            </summary>
        </member>
        <member name="M:Opc.Server.SetUrl(Opc.URL)">
            <summary>
            Updates the URL for the server.
            </summary>
        </member>
        <member name="M:Opc.Server.FindBestLocale(System.String,System.String[])">
            <summary>
            Finds the best matching locale given a set of supported locales.
            </summary>
        </member>
        <member name="F:Opc.Server.m_server">
            <summary>
            The remote server object.
            </summary>
        </member>
        <member name="F:Opc.Server.m_url">
            <summary>
            The URL that describes the network location of the server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_factory">
            <summary>
            The factory used to instantiate the remote server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_connectData">
            <summary>
            The last set of credentials used to connect successfully to the server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_name">
            <summary>
            A short name for the server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_locale">
            <summary>
            The default locale used by the server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_supportedLocales">
            <summary>
            The set of locales supported by the remote server.
            </summary>
        </member>
        <member name="F:Opc.Server.m_resourceManager">
            <summary>
            The resource manager used to access localized resources.
            </summary>
        </member>
        <member name="T:Opc.ConnectAsyncDelegate">
            <summary>
            The asynchronous delegate for Connect.
            </summary>
        </member>
        <member name="T:Opc.DisconnectAsyncDelegate">
            <summary>
            The asynchronous delegate for Disconnect.
            </summary>
        </member>
        <member name="T:Opc.GetLocaleAsyncDelegate">
            <summary>
            The asynchronous delegate for GetLocale.
            </summary>
        </member>
        <member name="T:Opc.SetLocaleAsyncDelegate">
            <summary>
            The asynchronous delegate for SetLocale.
            </summary>
        </member>
        <member name="T:Opc.GetSupportedLocalesAsyncDelegate">
            <summary>
            The asynchronous delegate for GetSupportedLocales.
            </summary>
        </member>
        <member name="T:Opc.GetErrorTextAsyncDelegate">
            <summary>
            The asynchronous delegate for GetErrorText.
            </summary>
        </member>
        <member name="T:Opc.AlreadyConnectedException">
            <summary>
            Raised if an operation cannot be executed because the server is not connected.
            </summary>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.AlreadyConnectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.NotConnectedException">
            <summary>
            Raised if an operation cannot be executed because the server is not connected.
            </summary>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.NotConnectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.ConnectFailedException">
            <summary>
            Raised if an operation cannot be executed because the server is not reachable.
            </summary>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ConnectFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.AccessDeniedException">
            <summary>
            Raised if an operation cannot be executed because the server refuses access.
            </summary>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.ServerTimeoutException">
            <summary>
            Raised an remote operation by the server timed out
            </summary>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.ServerTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.InvalidResponseException">
            <summary>
            Raised an remote operation by the server returned unusable or invalid results.
            </summary>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor(System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.InvalidResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.BrowseCannotContinueException">
            <summary>
            Raised if the browse position is not valid.
            </summary>
        </member>
        <member name="M:Opc.BrowseCannotContinueException.#ctor">
            <remarks/>
        </member>
        <member name="M:Opc.BrowseCannotContinueException.#ctor(System.String)">
            <remarks/>
        </member>
        <member name="M:Opc.BrowseCannotContinueException.#ctor(System.String,System.Exception)">
            <remarks/>
        </member>
        <member name="M:Opc.BrowseCannotContinueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <remarks/>
        </member>
        <member name="T:Opc.Type">
            <summary>
            Defines constants for standard data types.
            </summary>
        </member>
        <member name="F:Opc.Type.SBYTE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.BYTE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.SHORT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.USHORT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.INT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.UINT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.LONG">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ULONG">
            <remarks/>
        </member>
        <member name="F:Opc.Type.FLOAT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.DOUBLE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.DECIMAL">
            <remarks/>
        </member>
        <member name="F:Opc.Type.BOOLEAN">
            <remarks/>
        </member>
        <member name="F:Opc.Type.DATETIME">
            <remarks/>
        </member>
        <member name="F:Opc.Type.DURATION">
            <remarks/>
        </member>
        <member name="F:Opc.Type.STRING">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ANY_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.BINARY">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_SHORT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_USHORT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_INT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_UINT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_LONG">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_ULONG">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_FLOAT">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_DOUBLE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_DECIMAL">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_BOOLEAN">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_DATETIME">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_STRING">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ARRAY_ANY_TYPE">
            <remarks/>
        </member>
        <member name="F:Opc.Type.ILLEGAL_TYPE">
            <remarks/>
        </member>
        <member name="M:Opc.Type.Enumerate">
            <summary>
            Returns an array of all well-known types.
            </summary>
        </member>
    </members>
</doc>
