//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
namespace OpcXml.Da10 {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service", Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(System.DateTime[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(int[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(string[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(System.SByte[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(short[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(System.UInt16[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(System.UInt32[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(long[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(System.UInt64[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(System.Single[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(System.Double[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(System.Decimal[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(bool[]))]
    public class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Service() {
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opcfoundation.org/webservices/XMLDA/1.0/GetStatus", RequestNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", ResponseNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReplyBase GetStatus([System.Xml.Serialization.XmlAttributeAttribute()] string LocaleID, [System.Xml.Serialization.XmlAttributeAttribute()] string ClientRequestHandle, out ServerStatus Status) {
            object[] results = this.Invoke("GetStatus", new object[] {
                        LocaleID,
                        ClientRequestHandle});
            Status = ((ServerStatus)(results[1]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetStatus(string LocaleID, string ClientRequestHandle, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetStatus", new object[] {
                        LocaleID,
                        ClientRequestHandle}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReplyBase EndGetStatus(System.IAsyncResult asyncResult, out ServerStatus Status) {
            object[] results = this.EndInvoke(asyncResult);
            Status = ((ServerStatus)(results[1]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opcfoundation.org/webservices/XMLDA/1.0/Read", RequestNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", ResponseNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReplyBase Read(RequestOptions Options, ReadRequestItemList ItemList, out ReplyItemList RItemList, [System.Xml.Serialization.XmlElementAttribute("Errors")] out OPCError[] Errors) {
            object[] results = this.Invoke("Read", new object[] {
                        Options,
                        ItemList});
            RItemList = ((ReplyItemList)(results[1]));
            Errors = ((OPCError[])(results[2]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRead(RequestOptions Options, ReadRequestItemList ItemList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Read", new object[] {
                        Options,
                        ItemList}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReplyBase EndRead(System.IAsyncResult asyncResult, out ReplyItemList RItemList, out OPCError[] Errors) {
            object[] results = this.EndInvoke(asyncResult);
            RItemList = ((ReplyItemList)(results[1]));
            Errors = ((OPCError[])(results[2]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opcfoundation.org/webservices/XMLDA/1.0/Write", RequestNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", ResponseNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReplyBase Write(RequestOptions Options, WriteRequestItemList ItemList, [System.Xml.Serialization.XmlAttributeAttribute()] bool ReturnValuesOnReply, out ReplyItemList RItemList, [System.Xml.Serialization.XmlElementAttribute("Errors")] out OPCError[] Errors) {
            object[] results = this.Invoke("Write", new object[] {
                        Options,
                        ItemList,
                        ReturnValuesOnReply});
            RItemList = ((ReplyItemList)(results[1]));
            Errors = ((OPCError[])(results[2]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWrite(RequestOptions Options, WriteRequestItemList ItemList, bool ReturnValuesOnReply, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Write", new object[] {
                        Options,
                        ItemList,
                        ReturnValuesOnReply}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReplyBase EndWrite(System.IAsyncResult asyncResult, out ReplyItemList RItemList, out OPCError[] Errors) {
            object[] results = this.EndInvoke(asyncResult);
            RItemList = ((ReplyItemList)(results[1]));
            Errors = ((OPCError[])(results[2]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opcfoundation.org/webservices/XMLDA/1.0/Subscribe", RequestNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", ResponseNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReplyBase Subscribe(RequestOptions Options, SubscribeRequestItemList ItemList, [System.Xml.Serialization.XmlAttributeAttribute()] bool ReturnValuesOnReply, [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(0)] int SubscriptionPingRate, out SubscribeReplyItemList RItemList, [System.Xml.Serialization.XmlElementAttribute("Errors")] out OPCError[] Errors, [System.Xml.Serialization.XmlAttributeAttribute()] out string ServerSubHandle) {
            object[] results = this.Invoke("Subscribe", new object[] {
                        Options,
                        ItemList,
                        ReturnValuesOnReply,
                        SubscriptionPingRate});
            RItemList = ((SubscribeReplyItemList)(results[1]));
            Errors = ((OPCError[])(results[2]));
            ServerSubHandle = ((string)(results[3]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubscribe(RequestOptions Options, SubscribeRequestItemList ItemList, bool ReturnValuesOnReply, int SubscriptionPingRate, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Subscribe", new object[] {
                        Options,
                        ItemList,
                        ReturnValuesOnReply,
                        SubscriptionPingRate}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReplyBase EndSubscribe(System.IAsyncResult asyncResult, out SubscribeReplyItemList RItemList, out OPCError[] Errors, out string ServerSubHandle) {
            object[] results = this.EndInvoke(asyncResult);
            RItemList = ((SubscribeReplyItemList)(results[1]));
            Errors = ((OPCError[])(results[2]));
            ServerSubHandle = ((string)(results[3]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opcfoundation.org/webservices/XMLDA/1.0/SubscriptionPolledRefresh", RequestNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", ResponseNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReplyBase SubscriptionPolledRefresh(RequestOptions Options, [System.Xml.Serialization.XmlElementAttribute("ServerSubHandles")] string[] ServerSubHandles, [System.Xml.Serialization.XmlAttributeAttribute()] System.DateTime HoldTime, [System.Xml.Serialization.XmlAttributeAttribute()] [System.Xml.Serialization.XmlIgnoreAttribute()] bool HoldTimeSpecified, [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(0)] int WaitTime, [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(false)] bool ReturnAllItems, [System.Xml.Serialization.XmlElementAttribute("InvalidServerSubHandles")] out string[] InvalidServerSubHandles, [System.Xml.Serialization.XmlElementAttribute("RItemList")] out SubscribePolledRefreshReplyItemList[] RItemList, [System.Xml.Serialization.XmlElementAttribute("Errors")] out OPCError[] Errors, [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(false)] out bool DataBufferOverflow) {
            object[] results = this.Invoke("SubscriptionPolledRefresh", new object[] {
                        Options,
                        ServerSubHandles,
                        HoldTime,
                        HoldTimeSpecified,
                        WaitTime,
                        ReturnAllItems});
            InvalidServerSubHandles = ((string[])(results[1]));
            RItemList = ((SubscribePolledRefreshReplyItemList[])(results[2]));
            Errors = ((OPCError[])(results[3]));
            DataBufferOverflow = ((bool)(results[4]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubscriptionPolledRefresh(RequestOptions Options, string[] ServerSubHandles, System.DateTime HoldTime, bool HoldTimeSpecified, int WaitTime, bool ReturnAllItems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SubscriptionPolledRefresh", new object[] {
                        Options,
                        ServerSubHandles,
                        HoldTime,
                        HoldTimeSpecified,
                        WaitTime,
                        ReturnAllItems}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReplyBase EndSubscriptionPolledRefresh(System.IAsyncResult asyncResult, out string[] InvalidServerSubHandles, out SubscribePolledRefreshReplyItemList[] RItemList, out OPCError[] Errors, out bool DataBufferOverflow) {
            object[] results = this.EndInvoke(asyncResult);
            InvalidServerSubHandles = ((string[])(results[1]));
            RItemList = ((SubscribePolledRefreshReplyItemList[])(results[2]));
            Errors = ((OPCError[])(results[3]));
            DataBufferOverflow = ((bool)(results[4]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opcfoundation.org/webservices/XMLDA/1.0/SubscriptionCancel", RequestNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", ResponseNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubscriptionCancel([System.Xml.Serialization.XmlAttributeAttribute()] string ServerSubHandle, [System.Xml.Serialization.XmlAttributeAttribute()] ref string ClientRequestHandle) {
            object[] results = this.Invoke("SubscriptionCancel", new object[] {
                        ServerSubHandle,
                        ClientRequestHandle});
            ClientRequestHandle = ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubscriptionCancel(string ServerSubHandle, string ClientRequestHandle, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SubscriptionCancel", new object[] {
                        ServerSubHandle,
                        ClientRequestHandle}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSubscriptionCancel(System.IAsyncResult asyncResult, out string ClientRequestHandle) {
            object[] results = this.EndInvoke(asyncResult);
            ClientRequestHandle = ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opcfoundation.org/webservices/XMLDA/1.0/Browse", RequestNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", ResponseNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReplyBase Browse(
                    [System.Xml.Serialization.XmlElementAttribute("PropertyNames")] System.Xml.XmlQualifiedName[] PropertyNames, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] string LocaleID, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] string ClientRequestHandle, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] string ItemPath, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] string ItemName, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] ref string ContinuationPoint, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(0)] int MaxElementsReturned, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(browseFilter.all)] browseFilter BrowseFilter, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] string ElementNameFilter, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] string VendorFilter, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(false)] bool ReturnAllProperties, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(false)] bool ReturnPropertyValues, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(false)] bool ReturnErrorText, 
                    [System.Xml.Serialization.XmlElementAttribute("Elements")] out BrowseElement[] Elements, 
                    [System.Xml.Serialization.XmlElementAttribute("Errors")] out OPCError[] Errors, 
                    [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(false)] out bool MoreElements) {
            object[] results = this.Invoke("Browse", new object[] {
                        PropertyNames,
                        LocaleID,
                        ClientRequestHandle,
                        ItemPath,
                        ItemName,
                        ContinuationPoint,
                        MaxElementsReturned,
                        BrowseFilter,
                        ElementNameFilter,
                        VendorFilter,
                        ReturnAllProperties,
                        ReturnPropertyValues,
                        ReturnErrorText});
            ContinuationPoint = ((string)(results[1]));
            Elements = ((BrowseElement[])(results[2]));
            Errors = ((OPCError[])(results[3]));
            MoreElements = ((bool)(results[4]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBrowse(System.Xml.XmlQualifiedName[] PropertyNames, string LocaleID, string ClientRequestHandle, string ItemPath, string ItemName, string ContinuationPoint, int MaxElementsReturned, browseFilter BrowseFilter, string ElementNameFilter, string VendorFilter, bool ReturnAllProperties, bool ReturnPropertyValues, bool ReturnErrorText, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Browse", new object[] {
                        PropertyNames,
                        LocaleID,
                        ClientRequestHandle,
                        ItemPath,
                        ItemName,
                        ContinuationPoint,
                        MaxElementsReturned,
                        BrowseFilter,
                        ElementNameFilter,
                        VendorFilter,
                        ReturnAllProperties,
                        ReturnPropertyValues,
                        ReturnErrorText}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReplyBase EndBrowse(System.IAsyncResult asyncResult, out string ContinuationPoint, out BrowseElement[] Elements, out OPCError[] Errors, out bool MoreElements) {
            object[] results = this.EndInvoke(asyncResult);
            ContinuationPoint = ((string)(results[1]));
            Elements = ((BrowseElement[])(results[2]));
            Errors = ((OPCError[])(results[3]));
            MoreElements = ((bool)(results[4]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opcfoundation.org/webservices/XMLDA/1.0/GetProperties", RequestNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", ResponseNamespace="http://opcfoundation.org/webservices/XMLDA/1.0/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReplyBase GetProperties([System.Xml.Serialization.XmlElementAttribute("ItemIDs")] ItemIdentifier[] ItemIDs, [System.Xml.Serialization.XmlElementAttribute("PropertyNames")] System.Xml.XmlQualifiedName[] PropertyNames, [System.Xml.Serialization.XmlAttributeAttribute()] string LocaleID, [System.Xml.Serialization.XmlAttributeAttribute()] string ClientRequestHandle, [System.Xml.Serialization.XmlAttributeAttribute()] string ItemPath, [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(false)] bool ReturnAllProperties, [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(false)] bool ReturnPropertyValues, [System.Xml.Serialization.XmlAttributeAttribute()] [System.ComponentModel.DefaultValueAttribute(false)] bool ReturnErrorText, [System.Xml.Serialization.XmlElementAttribute("PropertyLists")] out PropertyReplyList[] PropertyLists, [System.Xml.Serialization.XmlElementAttribute("Errors")] out OPCError[] Errors) {
            object[] results = this.Invoke("GetProperties", new object[] {
                        ItemIDs,
                        PropertyNames,
                        LocaleID,
                        ClientRequestHandle,
                        ItemPath,
                        ReturnAllProperties,
                        ReturnPropertyValues,
                        ReturnErrorText});
            PropertyLists = ((PropertyReplyList[])(results[1]));
            Errors = ((OPCError[])(results[2]));
            return ((ReplyBase)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProperties(ItemIdentifier[] ItemIDs, System.Xml.XmlQualifiedName[] PropertyNames, string LocaleID, string ClientRequestHandle, string ItemPath, bool ReturnAllProperties, bool ReturnPropertyValues, bool ReturnErrorText, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProperties", new object[] {
                        ItemIDs,
                        PropertyNames,
                        LocaleID,
                        ClientRequestHandle,
                        ItemPath,
                        ReturnAllProperties,
                        ReturnPropertyValues,
                        ReturnErrorText}, callback, asyncState);
        }
        
        /// <remarks/>
        public ReplyBase EndGetProperties(System.IAsyncResult asyncResult, out PropertyReplyList[] PropertyLists, out OPCError[] Errors) {
            object[] results = this.EndInvoke(asyncResult);
            PropertyLists = ((PropertyReplyList[])(results[1]));
            Errors = ((OPCError[])(results[2]));
            return ((ReplyBase)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class ReplyBase {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime RcvTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime ReplyTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ClientRequestHandle;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RevisedLocaleID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public serverState ServerState;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public enum serverState {
        
        /// <remarks/>
        running,
        
        /// <remarks/>
        failed,
        
        /// <remarks/>
        noConfig,
        
        /// <remarks/>
        suspended,
        
        /// <remarks/>
        test,
        
        /// <remarks/>
        commFault,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class PropertyReplyList {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Properties")]
        public ItemProperty[] Properties;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName ResultID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class ItemProperty {
        
        /// <remarks/>
        public object Value;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName Name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName ResultID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class ItemIdentifier {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemName;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class BrowseElement {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Properties")]
        public ItemProperty[] Properties;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsItem;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool HasChildren;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class SubscribePolledRefreshReplyItemList {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items")]
        public ItemValue[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SubscriptionHandle;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class ItemValue {
        
        /// <remarks/>
        public string DiagnosticInfo;
        
        /// <remarks/>
        public object Value;
        
        /// <remarks/>
        public OPCQuality Quality;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ClientItemHandle;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime Timestamp;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimestampSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName ResultID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName ValueTypeQualifier;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class OPCQuality {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(qualityBits.good)]
        public qualityBits QualityField = qualityBits.good;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(limitBits.none)]
        public limitBits LimitField = limitBits.none;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(typeof(System.Byte), "0")]
        public System.Byte VendorField = ((System.Byte)(0));
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public enum qualityBits {
        
        /// <remarks/>
        bad,
        
        /// <remarks/>
        badConfigurationError,
        
        /// <remarks/>
        badNotConnected,
        
        /// <remarks/>
        badDeviceFailure,
        
        /// <remarks/>
        badSensorFailure,
        
        /// <remarks/>
        badLastKnownValue,
        
        /// <remarks/>
        badCommFailure,
        
        /// <remarks/>
        badOutOfService,
        
        /// <remarks/>
        badWaitingForInitialData,
        
        /// <remarks/>
        uncertain,
        
        /// <remarks/>
        uncertainLastUsableValue,
        
        /// <remarks/>
        uncertainSensorNotAccurate,
        
        /// <remarks/>
        uncertainEUExceeded,
        
        /// <remarks/>
        uncertainSubNormal,
        
        /// <remarks/>
        good,
        
        /// <remarks/>
        goodLocalOverride,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public enum limitBits {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        low,
        
        /// <remarks/>
        high,
        
        /// <remarks/>
        constant,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class SubscribeItemValue {
        
        /// <remarks/>
        public ItemValue ItemValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int RevisedSamplingRate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RevisedSamplingRateSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class SubscribeReplyItemList {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items")]
        public SubscribeItemValue[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int RevisedSamplingRate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RevisedSamplingRateSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class SubscribeRequestItem {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName ReqType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ClientItemHandle;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Single Deadband;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeadbandSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int RequestedSamplingRate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestedSamplingRateSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EnableBuffering;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnableBufferingSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class SubscribeRequestItemList {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items")]
        public SubscribeRequestItem[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName ReqType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Single Deadband;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeadbandSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int RequestedSamplingRate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestedSamplingRateSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool EnableBuffering;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnableBufferingSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class WriteRequestItemList {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items")]
        public ItemValue[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class OPCError {
        
        /// <remarks/>
        public string Text;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName ID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class ReplyItemList {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items")]
        public ItemValue[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Reserved;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class ReadRequestItem {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName ReqType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ClientItemHandle;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxAge;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxAgeSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class ReadRequestItemList {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Items")]
        public ReadRequestItem[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ItemPath;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.Xml.XmlQualifiedName ReqType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MaxAge;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxAgeSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class RequestOptions {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime RequestDeadline;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestDeadlineSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool ReturnErrorText = true;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ReturnDiagnosticInfo = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ReturnItemTime = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ReturnItemPath = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool ReturnItemName = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ClientRequestHandle;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LocaleID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public class ServerStatus {
        
        /// <remarks/>
        public string StatusInfo;
        
        /// <remarks/>
        public string VendorInfo;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SupportedLocaleIDs")]
        public string[] SupportedLocaleIDs;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SupportedInterfaceVersions")]
        public interfaceVersion[] SupportedInterfaceVersions;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime StartTime;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProductVersion;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public enum interfaceVersion {
        
        /// <remarks/>
        XML_DA_Version_1_0,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opcfoundation.org/webservices/XMLDA/1.0/")]
    public enum browseFilter {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        branch,
        
        /// <remarks/>
        item,
    }
}
